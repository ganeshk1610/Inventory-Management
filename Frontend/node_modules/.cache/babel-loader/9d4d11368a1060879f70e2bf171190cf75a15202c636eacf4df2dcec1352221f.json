{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\FEROZ RAHIL\\\\Desktop\\\\Inventory-Management\\\\Frontend\\\\src\\\\components\\\\BillingSection.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './BillingSection.css';\nimport productData from './alldata.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BillingSection = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [allProducts, setAllProducts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    setAllProducts(productData);\n  }, []);\n  const handleQtyChange = (id, newQty) => {\n    setProducts(products.map(product => product.id === id ? {\n      ...product,\n      qty: newQty\n    } : product));\n  };\n  const removeProduct = id => {\n    setProducts(products.filter(product => product.id !== id));\n  };\n  const totalAmount = products.reduce((acc, product) => acc + product.price * product.qty, 0);\n  const totalItems = products.reduce((acc, product) => acc + product.qty, 0);\n  const handleSearch = e => {\n    e.preventDefault();\n    const product = allProducts.find(p => p.name.toLowerCase().includes(searchTerm.toLowerCase()) || p.barcode === searchTerm);\n    if (product) {\n      const existingProduct = products.find(p => p.name === product.name);\n      if (existingProduct) {\n        setProducts(products.map(p => p.name === product.name ? {\n          ...p,\n          qty: p.qty + 1\n        } : p));\n      } else {\n        setProducts([...products, {\n          ...product,\n          id: products.length + 1,\n          qty: 1\n        }]);\n      }\n    }\n    setSearchTerm('');\n  };\n  const clearBill = () => {\n    setProducts([]);\n  };\n  const handlePay = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/products/sell', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          products\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log(data.message);\n        clearBill(); // Clear the bill on successful payment\n      } else {\n        console.error('Payment error:', data.message);\n      }\n    } catch (error) {\n      console.error('Error during payment:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"billing-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"customer-selection\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearch,\n        className: \"product-search\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Scan barcode or type the product name\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"search-btn\",\n          type: \"submit\",\n          children: \"\\u2714\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"billing-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              textAlign: 'left'\n            },\n            children: \"Item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Qty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: products.map((product, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              textAlign: 'left'\n            },\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleQtyChange(product.id, Math.max(1, product.qty - 1)),\n              disabled: product.qty <= 1,\n              style: {\n                backgroundColor: '#6c757d',\n                marginRight: '10px',\n                padding: '5px 5.5px',\n                borderRadius: '5px'\n              },\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: product.qty,\n              onChange: e => handleQtyChange(product.id, Math.max(1, parseInt(e.target.value, 10) || 1)),\n              min: \"1\",\n              style: {\n                width: '60px',\n                textAlign: 'center',\n                border: 'none',\n                height: '25px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleQtyChange(product.id, product.qty + 1),\n              style: {\n                backgroundColor: '#6c757d',\n                marginLeft: '10px',\n                padding: '4px',\n                borderRadius: '5px'\n              },\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [product.price * product.qty, \".00 \\u20B9\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"remove-btn\",\n              onClick: () => removeProduct(product.id),\n              children: \"\\u2716\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, product.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"billing-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-item\",\n        children: [\"Total Item(s): \", totalItems]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-item\",\n        style: {\n          display: 'flex'\n        },\n        children: [\"Price: \", totalAmount, \".00 \\u20B9\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-total\",\n        children: [\"Gross Price: \", totalAmount, \".00 \\u20B9\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"billing-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-btn print-btn\",\n        onC: true,\n        children: \"\\uD83D\\uDDA8\\uFE0F Print\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-btn cancel-btn\",\n        onClick: clearBill,\n        children: \"\\u2716 Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-btn hold-btn\",\n        children: ['\\u270B', \" Hold\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-btn pay-btn\",\n        onClick: handlePay,\n        children: \"\\uD83D\\uDCB5 Pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(BillingSection, \"LF3At3wLCoaLdyQ/P5nZwpma7Ak=\");\n_c = BillingSection;\nexport default BillingSection;\n\n// import React, { useState, useEffect } from 'react';\n// import './BillingSection.css';\n// import productData from './alldata.json';\n\n// const BillingSection = () => {\n//   const [products, setProducts] = useState([]);\n//   const [allProducts, setAllProducts] = useState([]);\n//   const [searchTerm, setSearchTerm] = useState('');\n\n//   useEffect(() => {\n//     setAllProducts(productData);\n//   }, []);\n\n//   const handleQtyChange = (id, increment) => {\n//     setProducts(products.map(product =>\n//       product.id === id\n//         ? { ...product, qty: product.qty + increment }\n//         : product\n//     ));\n//   };\n\n//   const removeProduct = (id) => {\n//     setProducts(products.filter(product => product.id !== id));\n//   };\n\n//   const totalAmount = products.reduce((acc, product) => acc + (product.price * product.qty), 0);\n//   const totalItems = products.reduce((acc, product) => acc + product.qty, 0);\n\n//   const handleSearch = (e) => {\n//     e.preventDefault();\n//     const product = allProducts.find(p => \n//       p.name.toLowerCase().includes(searchTerm.toLowerCase()) || p.barcode === searchTerm\n//     );\n\n//     if (product) {\n//       const existingProduct = products.find(p => p.name === product.name);\n//       if (existingProduct) {\n//         setProducts(products.map(p => \n//           p.name === product.name ? { ...p, qty: p.qty + 1 } : p\n//         ));\n//       } else {\n//         setProducts([...products, { ...product, id: products.length + 1, qty: 1 }]);\n//       }\n//     }\n\n//     setSearchTerm('');\n//   };\n\n//   const clearBill = () => {\n//     setProducts([]);\n//   };\n\n//   const handlePay = async () => {\n//     try {\n//       const response = await fetch('http://localhost:5000/api/products/sell', {\n//         method: 'POST',\n//         headers: { 'Content-Type': 'application/json' },\n//         body: JSON.stringify({ products })\n//       });\n\n//       const data = await response.json();\n//       if (response.ok) {\n//         console.log(data.message);\n//         clearBill(); // Clear the bill on successful payment\n//       } else {\n//         console.error('Payment error:', data.message);\n//       }\n//     } catch (error) {\n//       console.error('Error during payment:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"billing-section\">\n// <div className=\"customer-selection\">\n// <form onSubmit={handleSearch} className=\"product-search\">\n//   <input \n//     type=\"text\" \n//     placeholder=\"Scan barcode or type the product name\" \n//     value={searchTerm}\n//     onChange={(e) => setSearchTerm(e.target.value)}\n//   />\n//   <button className=\"search-btn\" type=\"submit\">✔</button>\n// </form>\n// </div>\n\n// <table className=\"billing-table\">\n// <thead>\n//   <tr>\n//     <th>#</th>\n//     <th style={{ textAlign: 'left' }}>Item</th>\n//     <th>Qty</th>\n//     <th>Price</th>\n//     <th>Action</th>\n//   </tr>\n// </thead>\n// <tbody>\n//   {products.map((product, index) => (\n//     <tr key={product.id}>\n//       <td>{index + 1}</td>\n//       <td style={{ textAlign: 'left' }}>{product.name}</td>\n//       <td>\n//         <button \n//           onClick={() => handleQtyChange(product.id, -1)} \n//           disabled={product.qty <= 1}\n//           style={{ backgroundColor: '#6c757d', marginRight: '10px', padding: '5px 5.5px', borderRadius: '5px' }}\n//         >\n//           -\n//         </button>\n//         {product.qty}\n//         <button \n//           onClick={() => handleQtyChange(product.id, 1)} \n//           style={{ backgroundColor: '#6c757d', marginLeft: '10px', padding: '4px', borderRadius: '5px' }}\n//         >\n//           +\n//         </button>\n//       </td>\n//       <td>{product.price * product.qty}.00 ₹</td>\n//       <td>\n//         <button className=\"remove-btn\" onClick={() => removeProduct(product.id)}>✖</button>\n//       </td>\n//     </tr>\n//   ))}\n// </tbody>\n// </table>\n\n// <div className=\"billing-summary\">\n// <div className=\"summary-item\">Total Item(s): {totalItems}</div>\n// {/* <div className=\"summary-item\">\n//   Discount:\n//   <input type=\"text\" placeholder=\"Enter Discount\" />\n// </div> */}\n// <div className=\"summary-item\" style={{ display: 'flex' }}>\n//   Price: {totalAmount}.00 ₹\n// </div>\n// <div className=\"summary-total\">Gross Price: {totalAmount}.00 ₹</div>\n// </div>\n//       <div className=\"billing-actions\">\n//         <button className=\"action-btn print-btn\">🖨️ Print</button>\n//         <button className=\"action-btn cancel-btn\" onClick={clearBill}>✖ Cancel</button>\n//         <button className=\"action-btn hold-btn\">{'\\u270B'} Hold</button>\n//         <button className=\"action-btn pay-btn\" onClick={handlePay}>💵 Pay</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BillingSection;\nvar _c;\n$RefreshReg$(_c, \"BillingSection\");","map":{"version":3,"names":["React","useState","useEffect","productData","jsxDEV","_jsxDEV","BillingSection","_s","products","setProducts","allProducts","setAllProducts","searchTerm","setSearchTerm","handleQtyChange","id","newQty","map","product","qty","removeProduct","filter","totalAmount","reduce","acc","price","totalItems","handleSearch","e","preventDefault","find","p","name","toLowerCase","includes","barcode","existingProduct","length","clearBill","handlePay","response","fetch","method","headers","body","JSON","stringify","data","json","ok","console","log","message","error","className","children","onSubmit","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","index","onClick","Math","max","disabled","backgroundColor","marginRight","padding","borderRadius","parseInt","min","width","border","height","marginLeft","display","onC","_c","$RefreshReg$"],"sources":["C:/Users/FEROZ RAHIL/Desktop/Inventory-Management/Frontend/src/components/BillingSection.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './BillingSection.css';\r\nimport productData from './alldata.json';\r\n\r\nconst BillingSection = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [allProducts, setAllProducts] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  useEffect(() => {\r\n    setAllProducts(productData);\r\n  }, []);\r\n\r\n  const handleQtyChange = (id, newQty) => {\r\n    setProducts(products.map(product =>\r\n      product.id === id\r\n        ? { ...product, qty: newQty }\r\n        : product\r\n    ));\r\n  };\r\n\r\n  const removeProduct = (id) => {\r\n    setProducts(products.filter(product => product.id !== id));\r\n  };\r\n\r\n  const totalAmount = products.reduce((acc, product) => acc + (product.price * product.qty), 0);\r\n  const totalItems = products.reduce((acc, product) => acc + product.qty, 0);\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    const product = allProducts.find(p => \r\n      p.name.toLowerCase().includes(searchTerm.toLowerCase()) || p.barcode === searchTerm\r\n    );\r\n\r\n    if (product) {\r\n      const existingProduct = products.find(p => p.name === product.name);\r\n      if (existingProduct) {\r\n        setProducts(products.map(p => \r\n          p.name === product.name ? { ...p, qty: p.qty + 1 } : p\r\n        ));\r\n      } else {\r\n        setProducts([...products, { ...product, id: products.length + 1, qty: 1 }]);\r\n      }\r\n    }\r\n\r\n    setSearchTerm('');\r\n  };\r\n\r\n  const clearBill = () => {\r\n    setProducts([]);\r\n  };\r\n\r\n  const handlePay = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/products/sell', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ products })\r\n      });\r\n\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        console.log(data.message);\r\n        clearBill(); // Clear the bill on successful payment\r\n      } else {\r\n        console.error('Payment error:', data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during payment:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"billing-section\">\r\n      <div className=\"customer-selection\">\r\n        <form onSubmit={handleSearch} className=\"product-search\">\r\n          <input \r\n            type=\"text\" \r\n            placeholder=\"Scan barcode or type the product name\" \r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <button className=\"search-btn\" type=\"submit\">✔</button>\r\n        </form>\r\n      </div>\r\n\r\n      <table className=\"billing-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th style={{ textAlign: 'left' }}>Item</th>\r\n            <th>Qty</th>\r\n            <th>Price</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {products.map((product, index) => (\r\n            <tr key={product.id}>\r\n              <td>{index + 1}</td>\r\n              <td style={{ textAlign: 'left' }}>{product.name}</td>\r\n              <td>\r\n                <button \r\n                  onClick={() => handleQtyChange(product.id, Math.max(1, product.qty - 1))} \r\n                  disabled={product.qty <= 1}\r\n                  style={{ backgroundColor: '#6c757d', marginRight: '10px', padding: '5px 5.5px', borderRadius: '5px' }}\r\n                >\r\n                  -\r\n                </button>\r\n                <input \r\n                  type=\"number\"\r\n                  value={product.qty}\r\n                  onChange={(e) => handleQtyChange(product.id, Math.max(1, parseInt(e.target.value, 10) || 1))}\r\n                  min=\"1\"\r\n                  style={{ width: '60px', textAlign: 'center', border:'none',height:'25px' }}\r\n                />\r\n                <button \r\n                  onClick={() => handleQtyChange(product.id, product.qty + 1)} \r\n                  style={{ backgroundColor: '#6c757d', marginLeft: '10px', padding: '4px', borderRadius: '5px' }}\r\n                >\r\n                  +\r\n                </button>\r\n              </td>\r\n              <td>{product.price * product.qty}.00 ₹</td>\r\n              <td>\r\n                <button className=\"remove-btn\" onClick={() => removeProduct(product.id)}>✖</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      <div className=\"billing-summary\">\r\n        <div className=\"summary-item\">Total Item(s): {totalItems}</div>\r\n        <div className=\"summary-item\" style={{ display: 'flex' }}>\r\n          Price: {totalAmount}.00 ₹\r\n        </div>\r\n        <div className=\"summary-total\">Gross Price: {totalAmount}.00 ₹</div>\r\n      </div>\r\n\r\n      <div className=\"billing-actions\">\r\n        <button className=\"action-btn print-btn\" onC>🖨️ Print</button>\r\n        <button className=\"action-btn cancel-btn\" onClick={clearBill}>✖ Cancel</button>\r\n        <button className=\"action-btn hold-btn\">{'\\u270B'} Hold</button>\r\n        <button className=\"action-btn pay-btn\" onClick={handlePay}>💵 Pay</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BillingSection;\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import './BillingSection.css';\r\n// import productData from './alldata.json';\r\n\r\n// const BillingSection = () => {\r\n//   const [products, setProducts] = useState([]);\r\n//   const [allProducts, setAllProducts] = useState([]);\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     setAllProducts(productData);\r\n//   }, []);\r\n\r\n//   const handleQtyChange = (id, increment) => {\r\n//     setProducts(products.map(product =>\r\n//       product.id === id\r\n//         ? { ...product, qty: product.qty + increment }\r\n//         : product\r\n//     ));\r\n//   };\r\n\r\n//   const removeProduct = (id) => {\r\n//     setProducts(products.filter(product => product.id !== id));\r\n//   };\r\n\r\n//   const totalAmount = products.reduce((acc, product) => acc + (product.price * product.qty), 0);\r\n//   const totalItems = products.reduce((acc, product) => acc + product.qty, 0);\r\n\r\n//   const handleSearch = (e) => {\r\n//     e.preventDefault();\r\n//     const product = allProducts.find(p => \r\n//       p.name.toLowerCase().includes(searchTerm.toLowerCase()) || p.barcode === searchTerm\r\n//     );\r\n\r\n//     if (product) {\r\n//       const existingProduct = products.find(p => p.name === product.name);\r\n//       if (existingProduct) {\r\n//         setProducts(products.map(p => \r\n//           p.name === product.name ? { ...p, qty: p.qty + 1 } : p\r\n//         ));\r\n//       } else {\r\n//         setProducts([...products, { ...product, id: products.length + 1, qty: 1 }]);\r\n//       }\r\n//     }\r\n\r\n//     setSearchTerm('');\r\n//   };\r\n\r\n//   const clearBill = () => {\r\n//     setProducts([]);\r\n//   };\r\n\r\n//   const handlePay = async () => {\r\n//     try {\r\n//       const response = await fetch('http://localhost:5000/api/products/sell', {\r\n//         method: 'POST',\r\n//         headers: { 'Content-Type': 'application/json' },\r\n//         body: JSON.stringify({ products })\r\n//       });\r\n\r\n//       const data = await response.json();\r\n//       if (response.ok) {\r\n//         console.log(data.message);\r\n//         clearBill(); // Clear the bill on successful payment\r\n//       } else {\r\n//         console.error('Payment error:', data.message);\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Error during payment:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"billing-section\">\r\n// <div className=\"customer-selection\">\r\n// <form onSubmit={handleSearch} className=\"product-search\">\r\n//   <input \r\n//     type=\"text\" \r\n//     placeholder=\"Scan barcode or type the product name\" \r\n//     value={searchTerm}\r\n//     onChange={(e) => setSearchTerm(e.target.value)}\r\n//   />\r\n//   <button className=\"search-btn\" type=\"submit\">✔</button>\r\n// </form>\r\n// </div>\r\n\r\n// <table className=\"billing-table\">\r\n// <thead>\r\n//   <tr>\r\n//     <th>#</th>\r\n//     <th style={{ textAlign: 'left' }}>Item</th>\r\n//     <th>Qty</th>\r\n//     <th>Price</th>\r\n//     <th>Action</th>\r\n//   </tr>\r\n// </thead>\r\n// <tbody>\r\n//   {products.map((product, index) => (\r\n//     <tr key={product.id}>\r\n//       <td>{index + 1}</td>\r\n//       <td style={{ textAlign: 'left' }}>{product.name}</td>\r\n//       <td>\r\n//         <button \r\n//           onClick={() => handleQtyChange(product.id, -1)} \r\n//           disabled={product.qty <= 1}\r\n//           style={{ backgroundColor: '#6c757d', marginRight: '10px', padding: '5px 5.5px', borderRadius: '5px' }}\r\n//         >\r\n//           -\r\n//         </button>\r\n//         {product.qty}\r\n//         <button \r\n//           onClick={() => handleQtyChange(product.id, 1)} \r\n//           style={{ backgroundColor: '#6c757d', marginLeft: '10px', padding: '4px', borderRadius: '5px' }}\r\n//         >\r\n//           +\r\n//         </button>\r\n//       </td>\r\n//       <td>{product.price * product.qty}.00 ₹</td>\r\n//       <td>\r\n//         <button className=\"remove-btn\" onClick={() => removeProduct(product.id)}>✖</button>\r\n//       </td>\r\n//     </tr>\r\n//   ))}\r\n// </tbody>\r\n// </table>\r\n\r\n// <div className=\"billing-summary\">\r\n// <div className=\"summary-item\">Total Item(s): {totalItems}</div>\r\n// {/* <div className=\"summary-item\">\r\n//   Discount:\r\n//   <input type=\"text\" placeholder=\"Enter Discount\" />\r\n// </div> */}\r\n// <div className=\"summary-item\" style={{ display: 'flex' }}>\r\n//   Price: {totalAmount}.00 ₹\r\n// </div>\r\n// <div className=\"summary-total\">Gross Price: {totalAmount}.00 ₹</div>\r\n// </div>\r\n//       <div className=\"billing-actions\">\r\n//         <button className=\"action-btn print-btn\">🖨️ Print</button>\r\n//         <button className=\"action-btn cancel-btn\" onClick={clearBill}>✖ Cancel</button>\r\n//         <button className=\"action-btn hold-btn\">{'\\u270B'} Hold</button>\r\n//         <button className=\"action-btn pay-btn\" onClick={handlePay}>💵 Pay</button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BillingSection;\r\n\r\n\r\n\r\n\r\n"],"mappings":"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;;AAK7B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA+E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}