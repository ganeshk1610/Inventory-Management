{"ast":null,"code":"import _objectSpread from \"C:/Users/FEROZ RAHIL/Desktop/capston/React-Inventory-Management-System/Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _assertThisInitialized from \"C:/Users/FEROZ RAHIL/Desktop/capston/React-Inventory-Management-System/Frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"C:/Users/FEROZ RAHIL/Desktop/capston/React-Inventory-Management-System/Frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/FEROZ RAHIL/Desktop/capston/React-Inventory-Management-System/Frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/FEROZ RAHIL/Desktop/capston/React-Inventory-Management-System/Frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/FEROZ RAHIL/Desktop/capston/React-Inventory-Management-System/Frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _slicedToArray from \"C:/Users/FEROZ RAHIL/Desktop/capston/React-Inventory-Management-System/Frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"C:/Users/FEROZ RAHIL/Desktop/capston/React-Inventory-Management-System/Frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _createForOfIteratorHelper from \"C:/Users/FEROZ RAHIL/Desktop/capston/React-Inventory-Management-System/Frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"C:/Users/FEROZ RAHIL/Desktop/capston/React-Inventory-Management-System/Frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"C:/Users/FEROZ RAHIL/Desktop/capston/React-Inventory-Management-System/Frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/FEROZ RAHIL/Desktop/capston/React-Inventory-Management-System/Frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/*!\n * Chart.js v4.2.1\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as _color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as _getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nexport { aL as Ticks, d as defaults } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\nvar Animator = /*#__PURE__*/function () {\n  function Animator() {\n    _classCallCheck(this, Animator);\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _createClass(Animator, [{\n    key: \"_notify\",\n    value: function _notify(chart, anims, date, type) {\n      var callbacks = anims.listeners[type];\n      var numSteps = anims.duration;\n      callbacks.forEach(function (fn) {\n        return fn({\n          chart: chart,\n          initial: anims.initial,\n          numSteps: numSteps,\n          currentStep: Math.min(date - anims.start, numSteps)\n        });\n      });\n    }\n  }, {\n    key: \"_refresh\",\n    value: function _refresh() {\n      var _this = this;\n      if (this._request) {\n        return;\n      }\n      this._running = true;\n      this._request = requestAnimFrame.call(window, function () {\n        _this._update();\n        _this._request = null;\n        if (_this._running) {\n          _this._refresh();\n        }\n      });\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      var _this2 = this;\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n      var remaining = 0;\n      this._charts.forEach(function (anims, chart) {\n        if (!anims.running || !anims.items.length) {\n          return;\n        }\n        var items = anims.items;\n        var i = items.length - 1;\n        var draw = false;\n        var item;\n        for (; i >= 0; --i) {\n          item = items[i];\n          if (item._active) {\n            if (item._total > anims.duration) {\n              anims.duration = item._total;\n            }\n            item.tick(date);\n            draw = true;\n          } else {\n            items[i] = items[items.length - 1];\n            items.pop();\n          }\n        }\n        if (draw) {\n          chart.draw();\n          _this2._notify(chart, anims, date, 'progress');\n        }\n        if (!items.length) {\n          anims.running = false;\n          _this2._notify(chart, anims, date, 'complete');\n          anims.initial = false;\n        }\n        remaining += items.length;\n      });\n      this._lastDate = date;\n      if (remaining === 0) {\n        this._running = false;\n      }\n    }\n  }, {\n    key: \"_getAnims\",\n    value: function _getAnims(chart) {\n      var charts = this._charts;\n      var anims = charts.get(chart);\n      if (!anims) {\n        anims = {\n          running: false,\n          initial: true,\n          items: [],\n          listeners: {\n            complete: [],\n            progress: []\n          }\n        };\n        charts.set(chart, anims);\n      }\n      return anims;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(chart, event, cb) {\n      this._getAnims(chart).listeners[event].push(cb);\n    }\n  }, {\n    key: \"add\",\n    value: function add(chart, items) {\n      var _this$_getAnims$items;\n      if (!items || !items.length) {\n        return;\n      }\n      (_this$_getAnims$items = this._getAnims(chart).items).push.apply(_this$_getAnims$items, _toConsumableArray(items));\n    }\n  }, {\n    key: \"has\",\n    value: function has(chart) {\n      return this._getAnims(chart).items.length > 0;\n    }\n  }, {\n    key: \"start\",\n    value: function start(chart) {\n      var anims = this._charts.get(chart);\n      if (!anims) {\n        return;\n      }\n      anims.running = true;\n      anims.start = Date.now();\n      anims.duration = anims.items.reduce(function (acc, cur) {\n        return Math.max(acc, cur._duration);\n      }, 0);\n      this._refresh();\n    }\n  }, {\n    key: \"running\",\n    value: function running(chart) {\n      if (!this._running) {\n        return false;\n      }\n      var anims = this._charts.get(chart);\n      if (!anims || !anims.running || !anims.items.length) {\n        return false;\n      }\n      return true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(chart) {\n      var anims = this._charts.get(chart);\n      if (!anims || !anims.items.length) {\n        return;\n      }\n      var items = anims.items;\n      var i = items.length - 1;\n      for (; i >= 0; --i) {\n        items[i].cancel();\n      }\n      anims.items = [];\n      this._notify(chart, anims, Date.now(), 'complete');\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(chart) {\n      return this._charts.delete(chart);\n    }\n  }]);\n  return Animator;\n}();\nvar animator = /* #__PURE__ */new Animator();\nvar transparent = 'transparent';\nvar interpolators = {\n  boolean: function boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color: function color(from, to, factor) {\n    var c0 = _color(from || transparent);\n    var c1 = c0.valid && _color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number: function number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nvar Animation = /*#__PURE__*/function () {\n  function Animation(cfg, target, prop, to) {\n    _classCallCheck(this, Animation);\n    var currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    var from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  _createClass(Animation, [{\n    key: \"active\",\n    value: function active() {\n      return this._active;\n    }\n  }, {\n    key: \"update\",\n    value: function update(cfg, to, date) {\n      if (this._active) {\n        this._notify(false);\n        var currentValue = this._target[this._prop];\n        var elapsed = date - this._start;\n        var remain = this._duration - elapsed;\n        this._start = date;\n        this._duration = Math.floor(Math.max(remain, cfg.duration));\n        this._total += elapsed;\n        this._loop = !!cfg.loop;\n        this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n        this._from = resolve([cfg.from, currentValue, to]);\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      if (this._active) {\n        this.tick(Date.now());\n        this._active = false;\n        this._notify(false);\n      }\n    }\n  }, {\n    key: \"tick\",\n    value: function tick(date) {\n      var elapsed = date - this._start;\n      var duration = this._duration;\n      var prop = this._prop;\n      var from = this._from;\n      var loop = this._loop;\n      var to = this._to;\n      var factor;\n      this._active = from !== to && (loop || elapsed < duration);\n      if (!this._active) {\n        this._target[prop] = to;\n        this._notify(true);\n        return;\n      }\n      if (elapsed < 0) {\n        this._target[prop] = from;\n        return;\n      }\n      factor = elapsed / duration % 2;\n      factor = loop && factor > 1 ? 2 - factor : factor;\n      factor = this._easing(Math.min(1, Math.max(0, factor)));\n      this._target[prop] = this._fn(from, to, factor);\n    }\n  }, {\n    key: \"wait\",\n    value: function wait() {\n      var promises = this._promises || (this._promises = []);\n      return new Promise(function (res, rej) {\n        promises.push({\n          res: res,\n          rej: rej\n        });\n      });\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(resolved) {\n      var method = resolved ? 'res' : 'rej';\n      var promises = this._promises || [];\n      for (var i = 0; i < promises.length; i++) {\n        promises[i][method]();\n      }\n    }\n  }]);\n  return Animation;\n}();\nvar Animations = /*#__PURE__*/function () {\n  function Animations(chart, config) {\n    _classCallCheck(this, Animations);\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  _createClass(Animations, [{\n    key: \"configure\",\n    value: function configure(config) {\n      if (!isObject(config)) {\n        return;\n      }\n      var animationOptions = Object.keys(defaults.animation);\n      var animatedProps = this._properties;\n      Object.getOwnPropertyNames(config).forEach(function (key) {\n        var cfg = config[key];\n        if (!isObject(cfg)) {\n          return;\n        }\n        var resolved = {};\n        for (var _i = 0, _animationOptions = animationOptions; _i < _animationOptions.length; _i++) {\n          var option = _animationOptions[_i];\n          resolved[option] = cfg[option];\n        }\n        (isArray(cfg.properties) && cfg.properties || [key]).forEach(function (prop) {\n          if (prop === key || !animatedProps.has(prop)) {\n            animatedProps.set(prop, resolved);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_animateOptions\",\n    value: function _animateOptions(target, values) {\n      var newOptions = values.options;\n      var options = resolveTargetOptions(target, newOptions);\n      if (!options) {\n        return [];\n      }\n      var animations = this._createAnimations(options, newOptions);\n      if (newOptions.$shared) {\n        awaitAll(target.options.$animations, newOptions).then(function () {\n          target.options = newOptions;\n        }, function () {});\n      }\n      return animations;\n    }\n  }, {\n    key: \"_createAnimations\",\n    value: function _createAnimations(target, values) {\n      var animatedProps = this._properties;\n      var animations = [];\n      var running = target.$animations || (target.$animations = {});\n      var props = Object.keys(values);\n      var date = Date.now();\n      var i;\n      for (i = props.length - 1; i >= 0; --i) {\n        var prop = props[i];\n        if (prop.charAt(0) === '$') {\n          continue;\n        }\n        if (prop === 'options') {\n          animations.push.apply(animations, _toConsumableArray(this._animateOptions(target, values)));\n          continue;\n        }\n        var value = values[prop];\n        var animation = running[prop];\n        var cfg = animatedProps.get(prop);\n        if (animation) {\n          if (cfg && animation.active()) {\n            animation.update(cfg, value, date);\n            continue;\n          } else {\n            animation.cancel();\n          }\n        }\n        if (!cfg || !cfg.duration) {\n          target[prop] = value;\n          continue;\n        }\n        running[prop] = animation = new Animation(cfg, target, prop, value);\n        animations.push(animation);\n      }\n      return animations;\n    }\n  }, {\n    key: \"update\",\n    value: function update(target, values) {\n      if (this._properties.size === 0) {\n        Object.assign(target, values);\n        return;\n      }\n      var animations = this._createAnimations(target, values);\n      if (animations.length) {\n        animator.add(this._chart, animations);\n        return true;\n      }\n    }\n  }]);\n  return Animations;\n}();\nfunction awaitAll(animations, properties) {\n  var running = [];\n  var keys = Object.keys(properties);\n  for (var i = 0; i < keys.length; i++) {\n    var anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  var options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n  return options;\n}\nfunction scaleClip(scale, allowedOverflow) {\n  var opts = scale && scale.options || {};\n  var reverse = opts.reverse;\n  var min = opts.min === undefined ? allowedOverflow : 0;\n  var max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  var x = scaleClip(xScale, allowedOverflow);\n  var y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  var t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  var keys = [];\n  var metasets = chart._getSortedDatasetMetas(filterVisible);\n  var i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction _applyStack(stack, value, dsIndex) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var keys = stack.keys;\n  var singleMode = options.mode === 'single';\n  var i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  var keys = Object.keys(data);\n  var adata = new Array(keys.length);\n  var i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  var stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return \"\".concat(indexScale.id, \".\").concat(valueScale.id, \".\").concat(meta.stack || meta.type);\n}\nfunction getUserBounds(scale) {\n  var _scale$getUserBounds = scale.getUserBounds(),\n    min = _scale$getUserBounds.min,\n    max = _scale$getUserBounds.max,\n    minDefined = _scale$getUserBounds.minDefined,\n    maxDefined = _scale$getUserBounds.maxDefined;\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  var subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  var _iterator = _createForOfIteratorHelper(vScale.getMatchingVisibleMetas(type).reverse()),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var meta = _step.value;\n      var value = stack[meta.index];\n      if (positive && value > 0 || !positive && value < 0) {\n        return meta.index;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  var chart = controller.chart,\n    meta = controller._cachedMeta;\n  var stacks = chart._stacks || (chart._stacks = {});\n  var iScale = meta.iScale,\n    vScale = meta.vScale,\n    datasetIndex = meta.index;\n  var iAxis = iScale.axis;\n  var vAxis = vScale.axis;\n  var key = getStackKey(iScale, vScale, meta);\n  var ilen = parsed.length;\n  var stack;\n  for (var i = 0; i < ilen; ++i) {\n    var item = parsed[i];\n    var _index = item[iAxis],\n      value = item[vAxis];\n    var itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, _index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n    var visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  var scales = chart.scales;\n  return Object.keys(scales).filter(function (key) {\n    return scales[key].axis === axis;\n  }).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent, {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index: index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element: element,\n    index: index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  var datasetIndex = meta.controller.index;\n  var axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  var _iterator2 = _createForOfIteratorHelper(items),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var parsed = _step2.value;\n      var stacks = parsed._stacks;\n      if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n        return;\n      }\n      delete stacks[axis][datasetIndex];\n      if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n        delete stacks[axis]._visualValues[datasetIndex];\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n}\nvar isDirectUpdateMode = function isDirectUpdateMode(mode) {\n  return mode === 'reset' || mode === 'none';\n};\nvar cloneIfNotShared = function cloneIfNotShared(cached, shared) {\n  return shared ? cached : Object.assign({}, cached);\n};\nvar createStack = function createStack(canStack, meta, chart) {\n  return canStack && !meta.hidden && meta._stacked && {\n    keys: getSortedDatasetIndices(chart, true),\n    values: null\n  };\n};\nvar DatasetController = /*#__PURE__*/function () {\n  function DatasetController(chart, datasetIndex) {\n    _classCallCheck(this, DatasetController);\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = (this instanceof DatasetController ? this.constructor : void 0).datasetElementType;\n    this.dataElementType = (this instanceof DatasetController ? this.constructor : void 0).dataElementType;\n    this.initialize();\n  }\n  _createClass(DatasetController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      var meta = this._cachedMeta;\n      this.configure();\n      this.linkScales();\n      meta._stacked = isStacked(meta.vScale, meta);\n      this.addElements();\n      if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n        console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n      }\n    }\n  }, {\n    key: \"updateIndex\",\n    value: function updateIndex(datasetIndex) {\n      if (this.index !== datasetIndex) {\n        clearStacks(this._cachedMeta);\n      }\n      this.index = datasetIndex;\n    }\n  }, {\n    key: \"linkScales\",\n    value: function linkScales() {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n      var chooseId = function chooseId(axis, x, y, r) {\n        return axis === 'x' ? x : axis === 'r' ? r : y;\n      };\n      var xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n      var yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n      var rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n      var indexAxis = meta.indexAxis;\n      var iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n      var vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n      meta.xScale = this.getScaleForId(xid);\n      meta.yScale = this.getScaleForId(yid);\n      meta.rScale = this.getScaleForId(rid);\n      meta.iScale = this.getScaleForId(iid);\n      meta.vScale = this.getScaleForId(vid);\n    }\n  }, {\n    key: \"getDataset\",\n    value: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    }\n  }, {\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    }\n  }, {\n    key: \"getScaleForId\",\n    value: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    }\n  }, {\n    key: \"_getOtherScale\",\n    value: function _getOtherScale(scale) {\n      var meta = this._cachedMeta;\n      return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._update('reset');\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      var meta = this._cachedMeta;\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n      if (meta._stacked) {\n        clearStacks(meta);\n      }\n    }\n  }, {\n    key: \"_dataCheck\",\n    value: function _dataCheck() {\n      var dataset = this.getDataset();\n      var data = dataset.data || (dataset.data = []);\n      var _data = this._data;\n      if (isObject(data)) {\n        this._data = convertObjectDataToArray(data);\n      } else if (_data !== data) {\n        if (_data) {\n          unlistenArrayEvents(_data, this);\n          var meta = this._cachedMeta;\n          clearStacks(meta);\n          meta._parsed = [];\n        }\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, this);\n        }\n        this._syncList = [];\n        this._data = data;\n      }\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var meta = this._cachedMeta;\n      this._dataCheck();\n      if (this.datasetElementType) {\n        meta.dataset = new this.datasetElementType();\n      }\n    }\n  }, {\n    key: \"buildOrUpdateElements\",\n    value: function buildOrUpdateElements(resetNewElements) {\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n      var stackChanged = false;\n      this._dataCheck();\n      var oldStacked = meta._stacked;\n      meta._stacked = isStacked(meta.vScale, meta);\n      if (meta.stack !== dataset.stack) {\n        stackChanged = true;\n        clearStacks(meta);\n        meta.stack = dataset.stack;\n      }\n      this._resyncElements(resetNewElements);\n      if (stackChanged || oldStacked !== meta._stacked) {\n        updateStacks(this, meta._parsed);\n      }\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var config = this.chart.config;\n      var scopeKeys = config.datasetScopeKeys(this._type);\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n      this.options = config.createResolver(scopes, this.getContext());\n      this._parsing = this.options.parsing;\n      this._cachedDataOpts = {};\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var meta = this._cachedMeta,\n        data = this._data;\n      var iScale = meta.iScale,\n        _stacked = meta._stacked;\n      var iAxis = iScale.axis;\n      var sorted = start === 0 && count === data.length ? true : meta._sorted;\n      var prev = start > 0 && meta._parsed[start - 1];\n      var i, cur, parsed;\n      if (this._parsing === false) {\n        meta._parsed = data;\n        meta._sorted = true;\n        parsed = data;\n      } else {\n        if (isArray(data[start])) {\n          parsed = this.parseArrayData(meta, data, start, count);\n        } else if (isObject(data[start])) {\n          parsed = this.parseObjectData(meta, data, start, count);\n        } else {\n          parsed = this.parsePrimitiveData(meta, data, start, count);\n        }\n        var isNotInOrderComparedToPrev = function isNotInOrderComparedToPrev() {\n          return cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n        };\n        for (i = 0; i < count; ++i) {\n          meta._parsed[i + start] = cur = parsed[i];\n          if (sorted) {\n            if (isNotInOrderComparedToPrev()) {\n              sorted = false;\n            }\n            prev = cur;\n          }\n        }\n        meta._sorted = sorted;\n      }\n      if (_stacked) {\n        updateStacks(this, parsed);\n      }\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var labels = iScale.getLabels();\n      var singleScale = iScale === vScale;\n      var parsed = new Array(count);\n      var i, ilen, index;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        var _parsed$i;\n        index = i + start;\n        parsed[i] = (_parsed$i = {}, _defineProperty(_parsed$i, iAxis, singleScale || iScale.parse(labels[index], index)), _defineProperty(_parsed$i, vAxis, vScale.parse(data[index], index)), _parsed$i);\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(item[0], index),\n          y: yScale.parse(item[1], index)\n        };\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var _this$_parsing = this._parsing,\n        _this$_parsing$xAxisK = _this$_parsing.xAxisKey,\n        xAxisKey = _this$_parsing$xAxisK === void 0 ? 'x' : _this$_parsing$xAxisK,\n        _this$_parsing$yAxisK = _this$_parsing.yAxisKey,\n        yAxisKey = _this$_parsing$yAxisK === void 0 ? 'y' : _this$_parsing$yAxisK;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n        };\n      }\n      return parsed;\n    }\n  }, {\n    key: \"getParsed\",\n    value: function getParsed(index) {\n      return this._cachedMeta._parsed[index];\n    }\n  }, {\n    key: \"getDataElement\",\n    value: function getDataElement(index) {\n      return this._cachedMeta.data[index];\n    }\n  }, {\n    key: \"applyStack\",\n    value: function applyStack(scale, parsed, mode) {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var value = parsed[scale.axis];\n      var stack = {\n        keys: getSortedDatasetIndices(chart, true),\n        values: parsed._stacks[scale.axis]._visualValues\n      };\n      return _applyStack(stack, value, meta.index, {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      var parsedValue = parsed[scale.axis];\n      var value = parsedValue === null ? NaN : parsedValue;\n      var values = stack && parsed._stacks[scale.axis];\n      if (stack && values) {\n        stack.values = values;\n        value = _applyStack(stack, parsedValue, this._cachedMeta.index);\n      }\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(scale, canStack) {\n      var meta = this._cachedMeta;\n      var _parsed = meta._parsed;\n      var sorted = meta._sorted && scale === meta.iScale;\n      var ilen = _parsed.length;\n      var otherScale = this._getOtherScale(scale);\n      var stack = createStack(canStack, meta, this.chart);\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      var _getUserBounds = getUserBounds(otherScale),\n        otherMin = _getUserBounds.min,\n        otherMax = _getUserBounds.max;\n      var i, parsed;\n      function _skip() {\n        parsed = _parsed[i];\n        var otherValue = parsed[otherScale.axis];\n        return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n      }\n      for (i = 0; i < ilen; ++i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        if (sorted) {\n          break;\n        }\n      }\n      if (sorted) {\n        for (i = ilen - 1; i >= 0; --i) {\n          if (_skip()) {\n            continue;\n          }\n          this.updateRangeFromParsed(range, scale, parsed, stack);\n          break;\n        }\n      }\n      return range;\n    }\n  }, {\n    key: \"getAllParsedValues\",\n    value: function getAllParsedValues(scale) {\n      var parsed = this._cachedMeta._parsed;\n      var values = [];\n      var i, ilen, value;\n      for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n        value = parsed[i][scale.axis];\n        if (isNumberFinite(value)) {\n          values.push(value);\n        }\n      }\n      return values;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return false;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n        value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n      };\n    }\n  }, {\n    key: \"_update\",\n    value: function _update(mode) {\n      var meta = this._cachedMeta;\n      this.update(mode || 'default');\n      meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {}\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this._ctx;\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var elements = meta.data || [];\n      var area = chart.chartArea;\n      var active = [];\n      var start = this._drawStart || 0;\n      var count = this._drawCount || elements.length - start;\n      var drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n      var i;\n      if (meta.dataset) {\n        meta.dataset.draw(ctx, area, start, count);\n      }\n      for (i = start; i < start + count; ++i) {\n        var element = elements[i];\n        if (element.hidden) {\n          continue;\n        }\n        if (element.active && drawActiveElementsOnTop) {\n          active.push(element);\n        } else {\n          element.draw(ctx, area);\n        }\n      }\n      for (i = 0; i < active.length; ++i) {\n        active[i].draw(ctx, area);\n      }\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(index, active) {\n      var mode = active ? 'active' : 'default';\n      return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index, active, mode) {\n      var dataset = this.getDataset();\n      var context;\n      if (index >= 0 && index < this._cachedMeta.data.length) {\n        var element = this._cachedMeta.data[index];\n        context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n        context.parsed = this.getParsed(index);\n        context.raw = dataset.data[index];\n        context.index = context.dataIndex = index;\n      } else {\n        context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n        context.dataset = dataset;\n        context.index = context.datasetIndex = this.index;\n      }\n      context.active = !!active;\n      context.mode = mode;\n      return context;\n    }\n  }, {\n    key: \"resolveDatasetElementOptions\",\n    value: function resolveDatasetElementOptions(mode) {\n      return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n  }, {\n    key: \"_resolveElementOptions\",\n    value: function _resolveElementOptions(elementType) {\n      var _this3 = this;\n      var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n      var index = arguments.length > 2 ? arguments[2] : undefined;\n      var active = mode === 'active';\n      var cache = this._cachedDataOpts;\n      var cacheKey = elementType + '-' + mode;\n      var cached = cache[cacheKey];\n      var sharing = this.enableOptionSharing && defined(index);\n      if (cached) {\n        return cloneIfNotShared(cached, sharing);\n      }\n      var config = this.chart.config;\n      var scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n      var prefixes = active ? [\"\".concat(elementType, \"Hover\"), 'hover', elementType, ''] : [elementType, ''];\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      var names = Object.keys(defaults.elements[elementType]);\n      var context = function context() {\n        return _this3.getContext(index, active, mode);\n      };\n      var values = config.resolveNamedOptions(scopes, names, context, prefixes);\n      if (values.$shared) {\n        values.$shared = sharing;\n        cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n      }\n      return values;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations(index, transition, active) {\n      var chart = this.chart;\n      var cache = this._cachedDataOpts;\n      var cacheKey = \"animation-\".concat(transition);\n      var cached = cache[cacheKey];\n      if (cached) {\n        return cached;\n      }\n      var options;\n      if (chart.options.animation !== false) {\n        var config = this.chart.config;\n        var scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n        var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        options = config.createResolver(scopes, this.getContext(index, active, transition));\n      }\n      var animations = new Animations(chart, options && options.animations);\n      if (options && options._cacheable) {\n        cache[cacheKey] = Object.freeze(animations);\n      }\n      return animations;\n    }\n  }, {\n    key: \"getSharedOptions\",\n    value: function getSharedOptions(options) {\n      if (!options.$shared) {\n        return;\n      }\n      return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n  }, {\n    key: \"includeOptions\",\n    value: function includeOptions(mode, sharedOptions) {\n      return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n  }, {\n    key: \"_getSharedOptions\",\n    value: function _getSharedOptions(start, mode) {\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var previouslySharedOptions = this._sharedOptions;\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n      return {\n        sharedOptions: sharedOptions,\n        includeOptions: includeOptions\n      };\n    }\n  }, {\n    key: \"updateElement\",\n    value: function updateElement(element, index, properties, mode) {\n      if (isDirectUpdateMode(mode)) {\n        Object.assign(element, properties);\n      } else {\n        this._resolveAnimations(index, mode).update(element, properties);\n      }\n    }\n  }, {\n    key: \"updateSharedOptions\",\n    value: function updateSharedOptions(sharedOptions, mode, newOptions) {\n      if (sharedOptions && !isDirectUpdateMode(mode)) {\n        this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n      }\n    }\n  }, {\n    key: \"_setStyle\",\n    value: function _setStyle(element, index, mode, active) {\n      element.active = active;\n      var options = this.getStyle(index, active);\n      this._resolveAnimations(index, mode, active).update(element, {\n        options: !active && this.getSharedOptions(options) || options\n      });\n    }\n  }, {\n    key: \"removeHoverStyle\",\n    value: function removeHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', false);\n    }\n  }, {\n    key: \"setHoverStyle\",\n    value: function setHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', true);\n    }\n  }, {\n    key: \"_removeDatasetHoverStyle\",\n    value: function _removeDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', false);\n      }\n    }\n  }, {\n    key: \"_setDatasetHoverStyle\",\n    value: function _setDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', true);\n      }\n    }\n  }, {\n    key: \"_resyncElements\",\n    value: function _resyncElements(resetNewElements) {\n      var data = this._data;\n      var elements = this._cachedMeta.data;\n      var _iterator3 = _createForOfIteratorHelper(this._syncList),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var _step3$value = _slicedToArray(_step3.value, 3),\n            method = _step3$value[0],\n            arg1 = _step3$value[1],\n            arg2 = _step3$value[2];\n          this[method](arg1, arg2);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      this._syncList = [];\n      var numMeta = elements.length;\n      var numData = data.length;\n      var count = Math.min(numData, numMeta);\n      if (count) {\n        this.parse(0, count);\n      }\n      if (numData > numMeta) {\n        this._insertElements(numMeta, numData - numMeta, resetNewElements);\n      } else if (numData < numMeta) {\n        this._removeElements(numData, numMeta - numData);\n      }\n    }\n  }, {\n    key: \"_insertElements\",\n    value: function _insertElements(start, count) {\n      var resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var meta = this._cachedMeta;\n      var data = meta.data;\n      var end = start + count;\n      var i;\n      var move = function move(arr) {\n        arr.length += count;\n        for (i = arr.length - 1; i >= end; i--) {\n          arr[i] = arr[i - count];\n        }\n      };\n      move(data);\n      for (i = start; i < end; ++i) {\n        data[i] = new this.dataElementType();\n      }\n      if (this._parsing) {\n        move(meta._parsed);\n      }\n      this.parse(start, count);\n      if (resetNewElements) {\n        this.updateElements(data, start, count, 'reset');\n      }\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(element, start, count, mode) {}\n  }, {\n    key: \"_removeElements\",\n    value: function _removeElements(start, count) {\n      var meta = this._cachedMeta;\n      if (this._parsing) {\n        var removed = meta._parsed.splice(start, count);\n        if (meta._stacked) {\n          clearStacks(meta, removed);\n        }\n      }\n      meta.data.splice(start, count);\n    }\n  }, {\n    key: \"_sync\",\n    value: function _sync(args) {\n      if (this._parsing) {\n        this._syncList.push(args);\n      } else {\n        var _args2 = _slicedToArray(args, 3),\n          method = _args2[0],\n          arg1 = _args2[1],\n          arg2 = _args2[2];\n        this[method](arg1, arg2);\n      }\n      this.chart._dataChanges.push([this.index].concat(_toConsumableArray(args)));\n    }\n  }, {\n    key: \"_onDataPush\",\n    value: function _onDataPush() {\n      var count = arguments.length;\n      this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n    }\n  }, {\n    key: \"_onDataPop\",\n    value: function _onDataPop() {\n      this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n    }\n  }, {\n    key: \"_onDataShift\",\n    value: function _onDataShift() {\n      this._sync(['_removeElements', 0, 1]);\n    }\n  }, {\n    key: \"_onDataSplice\",\n    value: function _onDataSplice(start, count) {\n      if (count) {\n        this._sync(['_removeElements', start, count]);\n      }\n      var newCount = arguments.length - 2;\n      if (newCount) {\n        this._sync(['_insertElements', start, newCount]);\n      }\n    }\n  }, {\n    key: \"_onDataUnshift\",\n    value: function _onDataUnshift() {\n      this._sync(['_insertElements', 0, arguments.length]);\n    }\n  }]);\n  return DatasetController;\n}();\n_defineProperty(DatasetController, \"defaults\", {});\n_defineProperty(DatasetController, \"datasetElementType\", null);\n_defineProperty(DatasetController, \"dataElementType\", null);\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    var visibleMetas = scale.getMatchingVisibleMetas(type);\n    var values = [];\n    for (var i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort(function (a, b) {\n      return a - b;\n    }));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  var scale = meta.iScale;\n  var values = getAllScaleValues(scale, meta.type);\n  var min = scale._length;\n  var i, ilen, curr, prev;\n  var updateMinAndPrev = function updateMinAndPrev() {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  var thickness = options.barThickness;\n  var size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio: ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  var start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  var size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  var startValue = vScale.parse(entry[0], i);\n  var endValue = vScale.parse(entry[1], i);\n  var min = Math.min(startValue, endValue);\n  var max = Math.max(startValue, endValue);\n  var barStart = min;\n  var barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart: barStart,\n    barEnd: barEnd,\n    start: startValue,\n    end: endValue,\n    min: min,\n    max: max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  var iScale = meta.iScale;\n  var vScale = meta.vScale;\n  var labels = iScale.getLabels();\n  var singleScale = iScale === vScale;\n  var parsed = [];\n  var i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  var reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {\n    start: start,\n    end: end,\n    reverse: reverse,\n    top: top,\n    bottom: bottom\n  };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  var edge = options.borderSkipped;\n  var res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {\n      top: true,\n      right: true,\n      bottom: true,\n      left: true\n    };\n    return;\n  }\n  var _borderProps = borderProps(properties),\n    start = _borderProps.start,\n    end = _borderProps.end,\n    reverse = _borderProps.reverse,\n    top = _borderProps.top,\n    bottom = _borderProps.bottom;\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, _ref, ratio) {\n  var inflateAmount = _ref.inflateAmount;\n  properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nvar BarController = /*#__PURE__*/function (_DatasetController) {\n  _inherits(BarController, _DatasetController);\n  var _super = _createSuper(BarController);\n  function BarController() {\n    _classCallCheck(this, BarController);\n    return _super.apply(this, arguments);\n  }\n  _createClass(BarController, [{\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var _this$_parsing2 = this._parsing,\n        _this$_parsing2$xAxis = _this$_parsing2.xAxisKey,\n        xAxisKey = _this$_parsing2$xAxis === void 0 ? 'x' : _this$_parsing2$xAxis,\n        _this$_parsing2$yAxis = _this$_parsing2.yAxisKey,\n        yAxisKey = _this$_parsing2$yAxis === void 0 ? 'y' : _this$_parsing2$yAxis;\n      var iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var parsed = [];\n      var i, ilen, item, obj;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        obj = data[i];\n        item = {};\n        item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n        parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n      }\n      return parsed;\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      _get(_getPrototypeOf(BarController.prototype), \"updateRangeFromParsed\", this).call(this, range, scale, parsed, stack);\n      var custom = parsed._custom;\n      if (custom && scale === this._cachedMeta.vScale) {\n        range.min = Math.min(range.min, custom.min);\n        range.max = Math.max(range.max, custom.max);\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n      return {\n        label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n        value: value\n      };\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      _get(_getPrototypeOf(BarController.prototype), \"initialize\", this).call(this);\n      var meta = this._cachedMeta;\n      meta.stack = this.getDataset().stack;\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(bars, start, count, mode) {\n      var reset = mode === 'reset';\n      var index = this.index,\n        vScale = this._cachedMeta.vScale;\n      var base = vScale.getBasePixel();\n      var horizontal = vScale.isHorizontal();\n      var ruler = this._getRuler();\n      var _this$_getSharedOptio = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio.sharedOptions,\n        includeOptions = _this$_getSharedOptio.includeOptions;\n      for (var i = start; i < start + count; i++) {\n        var parsed = this.getParsed(i);\n        var vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n          base: base,\n          head: base\n        } : this._calculateBarValuePixels(i);\n        var ipixels = this._calculateBarIndexPixels(i, ruler);\n        var stack = (parsed._stacks || {})[vScale.axis];\n        var properties = {\n          horizontal: horizontal,\n          base: vpixels.base,\n          enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n          x: horizontal ? vpixels.head : ipixels.center,\n          y: horizontal ? ipixels.center : vpixels.head,\n          height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n          width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n        }\n        var options = properties.options || bars[i].options;\n        setBorderSkipped(properties, options, stack, index);\n        setInflateAmount(properties, options, ruler.ratio);\n        this.updateElement(bars[i], i, properties, mode);\n      }\n    }\n  }, {\n    key: \"_getStacks\",\n    value: function _getStacks(last, dataIndex) {\n      var iScale = this._cachedMeta.iScale;\n      var metasets = iScale.getMatchingVisibleMetas(this._type).filter(function (meta) {\n        return meta.controller.options.grouped;\n      });\n      var stacked = iScale.options.stacked;\n      var stacks = [];\n      var skipNull = function skipNull(meta) {\n        var parsed = meta.controller.getParsed(dataIndex);\n        var val = parsed && parsed[meta.vScale.axis];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          return true;\n        }\n      };\n      var _iterator4 = _createForOfIteratorHelper(metasets),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var meta = _step4.value;\n          if (dataIndex !== undefined && skipNull(meta)) {\n            continue;\n          }\n          if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n            stacks.push(meta.stack);\n          }\n          if (meta.index === last) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      if (!stacks.length) {\n        stacks.push(undefined);\n      }\n      return stacks;\n    }\n  }, {\n    key: \"_getStackCount\",\n    value: function _getStackCount(index) {\n      return this._getStacks(undefined, index).length;\n    }\n  }, {\n    key: \"_getStackIndex\",\n    value: function _getStackIndex(datasetIndex, name, dataIndex) {\n      var stacks = this._getStacks(datasetIndex, dataIndex);\n      var index = name !== undefined ? stacks.indexOf(name) : -1;\n      return index === -1 ? stacks.length - 1 : index;\n    }\n  }, {\n    key: \"_getRuler\",\n    value: function _getRuler() {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var pixels = [];\n      var i, ilen;\n      for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n        pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n      }\n      var barThickness = opts.barThickness;\n      var min = barThickness || computeMinSampleSize(meta);\n      return {\n        min: min,\n        pixels: pixels,\n        start: iScale._startPixel,\n        end: iScale._endPixel,\n        stackCount: this._getStackCount(),\n        scale: iScale,\n        grouped: opts.grouped,\n        ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n      };\n    }\n  }, {\n    key: \"_calculateBarValuePixels\",\n    value: function _calculateBarValuePixels(index) {\n      var _this$_cachedMeta = this._cachedMeta,\n        vScale = _this$_cachedMeta.vScale,\n        _stacked = _this$_cachedMeta._stacked,\n        datasetIndex = _this$_cachedMeta.index,\n        _this$options = this.options,\n        baseValue = _this$options.base,\n        minBarLength = _this$options.minBarLength;\n      var actualBase = baseValue || 0;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var floating = isFloatBar(custom);\n      var value = parsed[vScale.axis];\n      var start = 0;\n      var length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n      var head, size;\n      if (length !== value) {\n        start = length - value;\n        length = value;\n      }\n      if (floating) {\n        value = custom.barStart;\n        length = custom.barEnd - custom.barStart;\n        if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n          start = 0;\n        }\n        start += value;\n      }\n      var startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n      var base = vScale.getPixelForValue(startValue);\n      if (this.chart.getDataVisibility(index)) {\n        head = vScale.getPixelForValue(start + length);\n      } else {\n        head = base;\n      }\n      size = head - base;\n      if (Math.abs(size) < minBarLength) {\n        size = barSign(size, vScale, actualBase) * minBarLength;\n        if (value === actualBase) {\n          base -= size / 2;\n        }\n        var startPixel = vScale.getPixelForDecimal(0);\n        var endPixel = vScale.getPixelForDecimal(1);\n        var min = Math.min(startPixel, endPixel);\n        var max = Math.max(startPixel, endPixel);\n        base = Math.max(Math.min(base, max), min);\n        head = base + size;\n        if (_stacked && !floating) {\n          parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n        }\n      }\n      if (base === vScale.getPixelForValue(actualBase)) {\n        var halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n        base += halfGrid;\n        size -= halfGrid;\n      }\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    }\n  }, {\n    key: \"_calculateBarIndexPixels\",\n    value: function _calculateBarIndexPixels(index, ruler) {\n      var scale = ruler.scale;\n      var options = this.options;\n      var skipNull = options.skipNull;\n      var maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n      var center, size;\n      if (ruler.grouped) {\n        var stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n        var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n        var stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n        center = range.start + range.chunk * stackIndex + range.chunk / 2;\n        size = Math.min(maxBarThickness, range.chunk * range.ratio);\n      } else {\n        center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n        size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n      }\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      var vScale = meta.vScale;\n      var rects = meta.data;\n      var ilen = rects.length;\n      var i = 0;\n      for (; i < ilen; ++i) {\n        if (this.getParsed(i)[vScale.axis] !== null) {\n          rects[i].draw(this._ctx);\n        }\n      }\n    }\n  }]);\n  return BarController;\n}(DatasetController);\n_defineProperty(BarController, \"id\", 'bar');\n_defineProperty(BarController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n});\n_defineProperty(BarController, \"overrides\", {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n});\nvar BubbleController = /*#__PURE__*/function (_DatasetController2) {\n  _inherits(BubbleController, _DatasetController2);\n  var _super2 = _createSuper(BubbleController);\n  function BubbleController() {\n    _classCallCheck(this, BubbleController);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(BubbleController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      _get(_getPrototypeOf(BubbleController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parsePrimitiveData\", this).call(this, meta, data, start, count);\n      for (var i = 0; i < parsed.length; i++) {\n        parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parseArrayData\", this).call(this, meta, data, start, count);\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parseObjectData\", this).call(this, meta, data, start, count);\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n      }\n      return parsed;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var data = this._cachedMeta.data;\n      var max = 0;\n      for (var i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var labels = this.chart.data.labels || [];\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = this.getParsed(index);\n      var x = xScale.getLabelForValue(parsed.x);\n      var y = yScale.getLabelForValue(parsed.y);\n      var r = parsed._custom;\n      return {\n        label: labels[index] || '',\n        value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var points = this._cachedMeta.data;\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta2 = this._cachedMeta,\n        iScale = _this$_cachedMeta2.iScale,\n        vScale = _this$_cachedMeta2.vScale;\n      var _this$_getSharedOptio2 = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio2.sharedOptions,\n        includeOptions = _this$_getSharedOptio2.includeOptions;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var parsed = !reset && this.getParsed(i);\n        var properties = {};\n        var iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n        var vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel);\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n          if (reset) {\n            properties.options.radius = 0;\n          }\n        }\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      var parsed = this.getParsed(index);\n      var values = _get(_getPrototypeOf(BubbleController.prototype), \"resolveDataElementOptions\", this).call(this, index, mode);\n      if (values.$shared) {\n        values = Object.assign({}, values, {\n          $shared: false\n        });\n      }\n      var radius = values.radius;\n      if (mode !== 'active') {\n        values.radius = 0;\n      }\n      values.radius += valueOrDefault(parsed && parsed._custom, radius);\n      return values;\n    }\n  }]);\n  return BubbleController;\n}(DatasetController);\n_defineProperty(BubbleController, \"id\", 'bubble');\n_defineProperty(BubbleController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n});\n_defineProperty(BubbleController, \"overrides\", {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n});\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  var ratioX = 1;\n  var ratioY = 1;\n  var offsetX = 0;\n  var offsetY = 0;\n  if (circumference < TAU) {\n    var startAngle = rotation;\n    var endAngle = startAngle + circumference;\n    var startX = Math.cos(startAngle);\n    var startY = Math.sin(startAngle);\n    var endX = Math.cos(endAngle);\n    var endY = Math.sin(endAngle);\n    var calcMax = function calcMax(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    };\n    var calcMin = function calcMin(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    };\n    var maxX = calcMax(0, startX, endX);\n    var maxY = calcMax(HALF_PI, startY, endY);\n    var minX = calcMin(PI, startX, endX);\n    var minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {\n    ratioX: ratioX,\n    ratioY: ratioY,\n    offsetX: offsetX,\n    offsetY: offsetY\n  };\n}\nvar DoughnutController = /*#__PURE__*/function (_DatasetController3) {\n  _inherits(DoughnutController, _DatasetController3);\n  var _super3 = _createSuper(DoughnutController);\n  function DoughnutController(chart, datasetIndex) {\n    var _this4;\n    _classCallCheck(this, DoughnutController);\n    _this4 = _super3.call(this, chart, datasetIndex);\n    _this4.enableOptionSharing = true;\n    _this4.innerRadius = undefined;\n    _this4.outerRadius = undefined;\n    _this4.offsetX = undefined;\n    _this4.offsetY = undefined;\n    return _this4;\n  }\n  _createClass(DoughnutController, [{\n    key: \"linkScales\",\n    value: function linkScales() {}\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var data = this.getDataset().data;\n      var meta = this._cachedMeta;\n      if (this._parsing === false) {\n        meta._parsed = data;\n      } else {\n        var getter = function getter(i) {\n          return +data[i];\n        };\n        if (isObject(data[start])) {\n          var _this$_parsing$key = this._parsing.key,\n            key = _this$_parsing$key === void 0 ? 'value' : _this$_parsing$key;\n          getter = function getter(i) {\n            return +resolveObjectKey(data[i], key);\n          };\n        }\n        var i, ilen;\n        for (i = start, ilen = start + count; i < ilen; ++i) {\n          meta._parsed[i] = getter(i);\n        }\n      }\n    }\n  }, {\n    key: \"_getRotation\",\n    value: function _getRotation() {\n      return toRadians(this.options.rotation - 90);\n    }\n  }, {\n    key: \"_getCircumference\",\n    value: function _getCircumference() {\n      return toRadians(this.options.circumference);\n    }\n  }, {\n    key: \"_getRotationExtents\",\n    value: function _getRotationExtents() {\n      var min = TAU;\n      var max = -TAU;\n      for (var i = 0; i < this.chart.data.datasets.length; ++i) {\n        if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n          var controller = this.chart.getDatasetMeta(i).controller;\n          var rotation = controller._getRotation();\n          var circumference = controller._getCircumference();\n          min = Math.min(min, rotation);\n          max = Math.max(max, rotation + circumference);\n        }\n      }\n      return {\n        rotation: min,\n        circumference: max - min\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var meta = this._cachedMeta;\n      var arcs = meta.data;\n      var spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n      var maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n      var cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n      var chartWeight = this._getRingWeight(this.index);\n      var _this$_getRotationExt = this._getRotationExtents(),\n        circumference = _this$_getRotationExt.circumference,\n        rotation = _this$_getRotationExt.rotation;\n      var _getRatioAndOffset = getRatioAndOffset(rotation, circumference, cutout),\n        ratioX = _getRatioAndOffset.ratioX,\n        ratioY = _getRatioAndOffset.ratioY,\n        offsetX = _getRatioAndOffset.offsetX,\n        offsetY = _getRatioAndOffset.offsetY;\n      var maxWidth = (chartArea.width - spacing) / ratioX;\n      var maxHeight = (chartArea.height - spacing) / ratioY;\n      var maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n      var outerRadius = toDimension(this.options.radius, maxRadius);\n      var innerRadius = Math.max(outerRadius * cutout, 0);\n      var radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n      this.offsetX = offsetX * outerRadius;\n      this.offsetY = offsetY * outerRadius;\n      meta.total = this.calculateTotal();\n      this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n      this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_circumference\",\n    value: function _circumference(i, reset) {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n      var circumference = this._getCircumference();\n      if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n        return 0;\n      }\n      return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var animateScale = reset && animationOpts.animateScale;\n      var innerRadius = animateScale ? 0 : this.innerRadius;\n      var outerRadius = animateScale ? 0 : this.outerRadius;\n      var _this$_getSharedOptio3 = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio3.sharedOptions,\n        includeOptions = _this$_getSharedOptio3.includeOptions;\n      var startAngle = this._getRotation();\n      var i;\n      for (i = 0; i < start; ++i) {\n        startAngle += this._circumference(i, reset);\n      }\n      for (i = start; i < start + count; ++i) {\n        var circumference = this._circumference(i, reset);\n        var arc = arcs[i];\n        var properties = {\n          x: centerX + this.offsetX,\n          y: centerY + this.offsetY,\n          startAngle: startAngle,\n          endAngle: startAngle + circumference,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n        }\n        startAngle += circumference;\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"calculateTotal\",\n    value: function calculateTotal() {\n      var meta = this._cachedMeta;\n      var metaData = meta.data;\n      var total = 0;\n      var i;\n      for (i = 0; i < metaData.length; i++) {\n        var value = meta._parsed[i];\n        if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n          total += Math.abs(value);\n        }\n      }\n      return total;\n    }\n  }, {\n    key: \"calculateCircumference\",\n    value: function calculateCircumference(value) {\n      var total = this._cachedMeta.total;\n      if (total > 0 && !isNaN(value)) {\n        return TAU * (Math.abs(value) / total);\n      }\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index], chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"getMaxBorderWidth\",\n    value: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var chart = this.chart;\n      var i, ilen, meta, controller, options;\n      if (!arcs) {\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n            controller = meta.controller;\n            break;\n          }\n        }\n      }\n      if (!arcs) {\n        return 0;\n      }\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        options = controller.resolveDataElementOptions(i);\n        if (options.borderAlign !== 'inner') {\n          max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n      }\n      return max;\n    }\n  }, {\n    key: \"getMaxOffset\",\n    value: function getMaxOffset(arcs) {\n      var max = 0;\n      for (var i = 0, ilen = arcs.length; i < ilen; ++i) {\n        var options = this.resolveDataElementOptions(i);\n        max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n      }\n      return max;\n    }\n  }, {\n    key: \"_getRingWeightOffset\",\n    value: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n      return ringWeightOffset;\n    }\n  }, {\n    key: \"_getRingWeight\",\n    value: function _getRingWeight(datasetIndex) {\n      return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n  }, {\n    key: \"_getVisibleDatasetWeightTotal\",\n    value: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n  }]);\n  return DoughnutController;\n}(DatasetController);\n_defineProperty(DoughnutController, \"id\", 'doughnut');\n_defineProperty(DoughnutController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n});\n_defineProperty(DoughnutController, \"descriptors\", {\n  _scriptable: function _scriptable(name) {\n    return name !== 'spacing';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'spacing';\n  }\n});\n_defineProperty(DoughnutController, \"overrides\", {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            var _chart$legend$options2 = chart.legend.options.labels,\n              pointStyle = _chart$legend$options2.pointStyle,\n              color = _chart$legend$options2.color;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                fontColor: color,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    }\n  }\n});\nvar LineController = /*#__PURE__*/function (_DatasetController4) {\n  _inherits(LineController, _DatasetController4);\n  var _super4 = _createSuper(LineController);\n  function LineController() {\n    _classCallCheck(this, LineController);\n    return _super4.apply(this, arguments);\n  }\n  _createClass(LineController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      this.supportsDecimation = true;\n      _get(_getPrototypeOf(LineController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset,\n        _meta$data = meta.data,\n        points = _meta$data === void 0 ? [] : _meta$data,\n        _dataset = meta._dataset;\n      var animationsDisabled = this.chart._animationsDisabled;\n      var _getStartAndCountOfVi = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled),\n        start = _getStartAndCountOfVi.start,\n        count = _getStartAndCountOfVi.count;\n      this._drawStart = start;\n      this._drawCount = count;\n      if (_scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      var options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options: options\n      }, mode);\n      this.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta3 = this._cachedMeta,\n        iScale = _this$_cachedMeta3.iScale,\n        vScale = _this$_cachedMeta3.vScale,\n        _stacked = _this$_cachedMeta3._stacked,\n        _dataset = _this$_cachedMeta3._dataset;\n      var _this$_getSharedOptio4 = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio4.sharedOptions,\n        includeOptions = _this$_getSharedOptio4.includeOptions;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var _this$options2 = this.options,\n        spanGaps = _this$options2.spanGaps,\n        segment = _this$options2.segment;\n      var maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      var end = start + count;\n      var pointsCount = points.length;\n      var prevParsed = start > 0 && this.getParsed(start - 1);\n      for (var i = 0; i < pointsCount; ++i) {\n        var point = points[i];\n        var properties = directUpdate ? point : {};\n        if (i < start || i >= end) {\n          properties.skip = true;\n          continue;\n        }\n        var parsed = this.getParsed(i);\n        var nullData = isNullOrUndef(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n        prevParsed = parsed;\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var meta = this._cachedMeta;\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      var data = meta.data || [];\n      if (!data.length) {\n        return border;\n      }\n      var firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n      _get(_getPrototypeOf(LineController.prototype), \"draw\", this).call(this);\n    }\n  }]);\n  return LineController;\n}(DatasetController);\n_defineProperty(LineController, \"id\", 'line');\n_defineProperty(LineController, \"defaults\", {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n});\n_defineProperty(LineController, \"overrides\", {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n});\nvar PolarAreaController = /*#__PURE__*/function (_DatasetController5) {\n  _inherits(PolarAreaController, _DatasetController5);\n  var _super5 = _createSuper(PolarAreaController);\n  function PolarAreaController(chart, datasetIndex) {\n    var _this5;\n    _classCallCheck(this, PolarAreaController);\n    _this5 = _super5.call(this, chart, datasetIndex);\n    _this5.innerRadius = undefined;\n    _this5.outerRadius = undefined;\n    return _this5;\n  }\n  _createClass(PolarAreaController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index].r, chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var arcs = this._cachedMeta.data;\n      this._updateRadius();\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax() {\n      var _this6 = this;\n      var meta = this._cachedMeta;\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      meta.data.forEach(function (element, index) {\n        var parsed = _this6.getParsed(index).r;\n        if (!isNaN(parsed) && _this6.chart.getDataVisibility(index)) {\n          if (parsed < range.min) {\n            range.min = parsed;\n          }\n          if (parsed > range.max) {\n            range.max = parsed;\n          }\n        }\n      });\n      return range;\n    }\n  }, {\n    key: \"_updateRadius\",\n    value: function _updateRadius() {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      var outerRadius = Math.max(minSize / 2, 0);\n      var innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      var radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n      this.outerRadius = outerRadius - radiusLength * this.index;\n      this.innerRadius = this.outerRadius - radiusLength;\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = this._cachedMeta.rScale;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter;\n      var datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n      var angle = datasetStartAngle;\n      var i;\n      var defaultAngle = 360 / this.countVisibleElements();\n      for (i = 0; i < start; ++i) {\n        angle += this._computeAngle(i, mode, defaultAngle);\n      }\n      for (i = start; i < start + count; i++) {\n        var arc = arcs[i];\n        var startAngle = angle;\n        var endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n        var outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n        angle = endAngle;\n        if (reset) {\n          if (animationOpts.animateScale) {\n            outerRadius = 0;\n          }\n          if (animationOpts.animateRotate) {\n            startAngle = endAngle = datasetStartAngle;\n          }\n        }\n        var properties = {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: outerRadius,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n        };\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"countVisibleElements\",\n    value: function countVisibleElements() {\n      var _this7 = this;\n      var meta = this._cachedMeta;\n      var count = 0;\n      meta.data.forEach(function (element, index) {\n        if (!isNaN(_this7.getParsed(index).r) && _this7.chart.getDataVisibility(index)) {\n          count++;\n        }\n      });\n      return count;\n    }\n  }, {\n    key: \"_computeAngle\",\n    value: function _computeAngle(index, mode, defaultAngle) {\n      return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n  }]);\n  return PolarAreaController;\n}(DatasetController);\n_defineProperty(PolarAreaController, \"id\", 'polarArea');\n_defineProperty(PolarAreaController, \"defaults\", {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n});\n_defineProperty(PolarAreaController, \"overrides\", {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            var _chart$legend$options3 = chart.legend.options.labels,\n              pointStyle = _chart$legend$options3.pointStyle,\n              color = _chart$legend$options3.color;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                fontColor: color,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n});\nvar PieController = /*#__PURE__*/function (_DoughnutController) {\n  _inherits(PieController, _DoughnutController);\n  var _super6 = _createSuper(PieController);\n  function PieController() {\n    _classCallCheck(this, PieController);\n    return _super6.apply(this, arguments);\n  }\n  return _createClass(PieController);\n}(DoughnutController);\n_defineProperty(PieController, \"id\", 'pie');\n_defineProperty(PieController, \"defaults\", {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n});\nvar RadarController = /*#__PURE__*/function (_DatasetController6) {\n  _inherits(RadarController, _DatasetController6);\n  var _super7 = _createSuper(RadarController);\n  function RadarController() {\n    _classCallCheck(this, RadarController);\n    return _super7.apply(this, arguments);\n  }\n  _createClass(RadarController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var vScale = this._cachedMeta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: vScale.getLabels()[index],\n        value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n      };\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var labels = meta.iScale.getLabels();\n      line.points = points;\n      if (mode !== 'resize') {\n        var options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n          options.borderWidth = 0;\n        }\n        var properties = {\n          _loop: true,\n          _fullLoop: labels.length === points.length,\n          options: options\n        };\n        this.updateElement(line, undefined, properties, mode);\n      }\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var scale = this._cachedMeta.rScale;\n      var reset = mode === 'reset';\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        var pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n        var x = reset ? scale.xCenter : pointPosition.x;\n        var y = reset ? scale.yCenter : pointPosition.y;\n        var properties = {\n          x: x,\n          y: y,\n          angle: pointPosition.angle,\n          skip: isNaN(x) || isNaN(y),\n          options: options\n        };\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n  }]);\n  return RadarController;\n}(DatasetController);\n_defineProperty(RadarController, \"id\", 'radar');\n_defineProperty(RadarController, \"defaults\", {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n});\n_defineProperty(RadarController, \"overrides\", {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n});\nvar ScatterController = /*#__PURE__*/function (_DatasetController7) {\n  _inherits(ScatterController, _DatasetController7);\n  var _super8 = _createSuper(ScatterController);\n  function ScatterController() {\n    _classCallCheck(this, ScatterController);\n    return _super8.apply(this, arguments);\n  }\n  _createClass(ScatterController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var labels = this.chart.data.labels || [];\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = this.getParsed(index);\n      var x = xScale.getLabelForValue(parsed.x);\n      var y = yScale.getLabelForValue(parsed.y);\n      return {\n        label: labels[index] || '',\n        value: '(' + x + ', ' + y + ')'\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var _meta$data2 = meta.data,\n        points = _meta$data2 === void 0 ? [] : _meta$data2;\n      var animationsDisabled = this.chart._animationsDisabled;\n      var _getStartAndCountOfVi2 = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled),\n        start = _getStartAndCountOfVi2.start,\n        count = _getStartAndCountOfVi2.count;\n      this._drawStart = start;\n      this._drawCount = count;\n      if (_scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n      if (this.options.showLine) {\n        var line = meta.dataset,\n          _dataset = meta._dataset;\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        var options = this.resolveDatasetElementOptions(mode);\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n          animated: !animationsDisabled,\n          options: options\n        }, mode);\n      }\n      this.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var showLine = this.options.showLine;\n      if (!this.datasetElementType && showLine) {\n        this.datasetElementType = this.chart.registry.getElement('line');\n      }\n      _get(_getPrototypeOf(ScatterController.prototype), \"addElements\", this).call(this);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta4 = this._cachedMeta,\n        iScale = _this$_cachedMeta4.iScale,\n        vScale = _this$_cachedMeta4.vScale,\n        _stacked = _this$_cachedMeta4._stacked,\n        _dataset = _this$_cachedMeta4._dataset;\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var _this$options3 = this.options,\n        spanGaps = _this$options3.spanGaps,\n        segment = _this$options3.segment;\n      var maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      var prevParsed = start > 0 && this.getParsed(start - 1);\n      for (var i = start; i < start + count; ++i) {\n        var point = points[i];\n        var parsed = this.getParsed(i);\n        var properties = directUpdate ? point : {};\n        var nullData = isNullOrUndef(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n        prevParsed = parsed;\n      }\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var meta = this._cachedMeta;\n      var data = meta.data || [];\n      if (!this.options.showLine) {\n        var max = 0;\n        for (var i = data.length - 1; i >= 0; --i) {\n          max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n      }\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      if (!data.length) {\n        return border;\n      }\n      var firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }]);\n  return ScatterController;\n}(DatasetController);\n_defineProperty(ScatterController, \"id\", 'scatter');\n_defineProperty(ScatterController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n});\n_defineProperty(ScatterController, \"overrides\", {\n  interaction: {\n    mode: 'point'\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n});\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nvar DateAdapterBase = /*#__PURE__*/function () {\n  function DateAdapterBase(options) {\n    _classCallCheck(this, DateAdapterBase);\n    this.options = options || {};\n  }\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  _createClass(DateAdapterBase, [{\n    key: \"init\",\n    value: function init() {}\n  }, {\n    key: \"formats\",\n    value: function formats() {\n      return abstract();\n    }\n  }, {\n    key: \"parse\",\n    value: function parse() {\n      return abstract();\n    }\n  }, {\n    key: \"format\",\n    value: function format() {\n      return abstract();\n    }\n  }, {\n    key: \"add\",\n    value: function add() {\n      return abstract();\n    }\n  }, {\n    key: \"diff\",\n    value: function diff() {\n      return abstract();\n    }\n  }, {\n    key: \"startOf\",\n    value: function startOf() {\n      return abstract();\n    }\n  }, {\n    key: \"endOf\",\n    value: function endOf() {\n      return abstract();\n    }\n  }], [{\n    key: \"override\",\n    value:\n    /**\n    * Override default date adapter methods.\n    * Accepts type parameter to define options type.\n    * @example\n    * Chart._adapters._date.override<{myAdapterOption: string}>({\n    *   init() {\n    *     console.log(this.options.myAdapterOption);\n    *   }\n    * })\n    */\n    function override(members) {\n      Object.assign(DateAdapterBase.prototype, members);\n    }\n  }]);\n  return DateAdapterBase;\n}();\nvar adapters = {\n  _date: DateAdapterBase\n};\nfunction binarySearch(metaset, axis, value, intersect) {\n  var controller = metaset.controller,\n    data = metaset.data,\n    _sorted = metaset._sorted;\n  var iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    var lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      var el = data[0];\n      var range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        var start = lookupMethod(data, axis, value - range);\n        var end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var value = position[axis];\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i = metasets[i],\n      _index2 = _metasets$i.index,\n      data = _metasets$i.data;\n    var _binarySearch = binarySearch(metasets[i], axis, value, intersect),\n      lo = _binarySearch.lo,\n      hi = _binarySearch.hi;\n    for (var j = lo; j <= hi; ++j) {\n      var element = data[j];\n      if (!element.skip) {\n        handler(element, _index2, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  var items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  var items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    var _element$getProps = element.getProps(['startAngle', 'endAngle'], useFinalPosition),\n      startAngle = _element$getProps.startAngle,\n      endAngle = _element$getProps.endAngle;\n    var _getAngleFromPoint = getAngleFromPoint(element, {\n        x: position.x,\n        y: position.y\n      }),\n      angle = _getAngleFromPoint.angle;\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  var items = [];\n  var distanceMetric = getDistanceMetricForAxis(axis);\n  var minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    var inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    var center = element.getCenterPoint(useFinalPosition);\n    var pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    var distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  var items = [];\n  var rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  var intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, function (element, datasetIndex, index) {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems: evaluateInteractionItems,\n  modes: {\n    index: function index(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'x';\n      var includeInvisible = options.includeInvisible || false;\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      var elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach(function (meta) {\n        var index = items[0].index;\n        var element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({\n            element: element,\n            datasetIndex: meta.index,\n            index: index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset: function dataset(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        var datasetIndex = items[0].datasetIndex;\n        var data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (var i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex: datasetIndex,\n            index: i\n          });\n        }\n      }\n      return items;\n    },\n    point: function point(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest: function nearest(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x: function x(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y: function y(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\nvar STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(function (v) {\n    return v.pos === position;\n  });\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(function (v) {\n    return STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis;\n  });\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  var layoutBoxes = [];\n  var i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    var _box = box;\n    pos = _box.position;\n    var _box$options = _box.options;\n    stack = _box$options.stack;\n    var _box$options$stackWei = _box$options.stackWeight;\n    stackWeight = _box$options$stackWei === void 0 ? 1 : _box$options$stackWei;\n    layoutBoxes.push({\n      index: i,\n      box: box,\n      pos: pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight: stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  var stacks = {};\n  var _iterator5 = _createForOfIteratorHelper(layouts),\n    _step5;\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var wrap = _step5.value;\n      var stack = wrap.stack,\n        pos = wrap.pos,\n        stackWeight = wrap.stackWeight;\n      if (!stack || !STATIC_POSITIONS.includes(pos)) {\n        continue;\n      }\n      var _stack = stacks[stack] || (stacks[stack] = {\n        count: 0,\n        placed: 0,\n        weight: 0,\n        size: 0\n      });\n      _stack.count++;\n      _stack.weight += stackWeight;\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  var stacks = buildStacks(layouts);\n  var vBoxMaxWidth = params.vBoxMaxWidth,\n    hBoxMaxHeight = params.hBoxMaxHeight;\n  var i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    var fullSize = layout.box.fullSize;\n    var stack = stacks[layout.stack];\n    var factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  var layoutBoxes = wrapBoxes(boxes);\n  var fullSize = sortByWeight(layoutBoxes.filter(function (wrap) {\n    return wrap.box.fullSize;\n  }), true);\n  var left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  var right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  var top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  var bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  var centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  var centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize: fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  var pos = layout.pos,\n    box = layout.box;\n  var maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    var stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  var newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  var newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  var widthChanged = newWidth !== chartArea.w;\n  var heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\nfunction handleMaxPadding(chartArea) {\n  var maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    var change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  var maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    var margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(function (pos) {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  var refitBoxes = [];\n  var i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    var _updateDims = updateDims(chartArea, params, layout, stacks),\n      same = _updateDims.same,\n      other = _updateDims.other;\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  var userPadding = params.padding;\n  var x = chartArea.x,\n    y = chartArea.y;\n  var _iterator6 = _createForOfIteratorHelper(boxes),\n    _step6;\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var layout = _step6.value;\n      var box = layout.box;\n      var stack = stacks[layout.stack] || {\n        count: 1,\n        placed: 0,\n        weight: 1\n      };\n      var weight = layout.stackWeight / stack.weight || 1;\n      if (layout.horizontal) {\n        var width = chartArea.w * weight;\n        var height = stack.size || box.height;\n        if (defined(stack.start)) {\n          y = stack.start;\n        }\n        if (box.fullSize) {\n          setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n        } else {\n          setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n        }\n        stack.start = y;\n        stack.placed += width;\n        y = box.bottom;\n      } else {\n        var height1 = chartArea.h * weight;\n        var width1 = stack.size || box.width;\n        if (defined(stack.start)) {\n          x = stack.start;\n        }\n        if (box.fullSize) {\n          setBoxDims(box, x, userPadding.top, width1, params.outerHeight - userPadding.bottom - userPadding.top);\n        } else {\n          setBoxDims(box, x, chartArea.top + stack.placed, width1, height1);\n        }\n        stack.start = x;\n        stack.placed += height1;\n        x = box.right;\n      }\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\nvar layouts = {\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw: function draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure: function configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update: function update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    var padding = toPadding(chart.options.layout.padding);\n    var availableWidth = Math.max(width - padding.width, 0);\n    var availableHeight = Math.max(height - padding.height, 0);\n    var boxes = buildLayoutBoxes(chart.boxes);\n    var verticalBoxes = boxes.vertical;\n    var horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, function (box) {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    var visibleVerticalBoxCount = verticalBoxes.reduce(function (total, wrap) {\n      return wrap.box.options && wrap.box.options.display === false ? total : total + 1;\n    }, 0) || 1;\n    var params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding: padding,\n      availableWidth: availableWidth,\n      availableHeight: availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    var maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    var chartArea = Object.assign({\n      maxPadding: maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    var stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, function (layout) {\n      var box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      });\n    });\n  }\n};\nvar BasePlatform = /*#__PURE__*/function () {\n  function BasePlatform() {\n    _classCallCheck(this, BasePlatform);\n  }\n  _createClass(BasePlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {}\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      return false;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {}\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type, listener) {}\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return 1;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(element, width, height, aspectRatio) {\n      width = Math.max(0, width || element.width);\n      height = height || element.height;\n      return {\n        width: width,\n        height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n      };\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      return true;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {}\n  }]);\n  return BasePlatform;\n}();\nvar BasicPlatform = /*#__PURE__*/function (_BasePlatform) {\n  _inherits(BasicPlatform, _BasePlatform);\n  var _super9 = _createSuper(BasicPlatform);\n  function BasicPlatform() {\n    _classCallCheck(this, BasicPlatform);\n    return _super9.apply(this, arguments);\n  }\n  _createClass(BasicPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(item) {\n      return item && item.getContext && item.getContext('2d') || null;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {\n      config.options.animation = false;\n    }\n  }]);\n  return BasicPlatform;\n}(BasePlatform);\nvar EXPANDO_KEY = '$chartjs';\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nvar isNullOrEmpty = function isNullOrEmpty(value) {\n  return value === null || value === '';\n};\nfunction initCanvas(canvas, aspectRatio) {\n  var style = canvas.style;\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    var displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n  var _getRelativePosition = getRelativePosition(event, chart),\n    x = _getRelativePosition.x,\n    y = _getRelativePosition.y;\n  return {\n    type: type,\n    chart: chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  var _iterator7 = _createForOfIteratorHelper(nodeList),\n    _step7;\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      var node = _step7.value;\n      if (node === canvas || node.contains(canvas)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n    var _iterator8 = _createForOfIteratorHelper(entries),\n      _step8;\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var entry = _step8.value;\n        trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n    var _iterator9 = _createForOfIteratorHelper(entries),\n      _step9;\n    try {\n      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n        var entry = _step9.value;\n        trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n      }\n    } catch (err) {\n      _iterator9.e(err);\n    } finally {\n      _iterator9.f();\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nvar drpListeningCharts = new Map();\nvar oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  var dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach(function (resize, chart) {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  var resize = throttled(function (width, height) {\n    var w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  var observer = new ResizeObserver(function (entries) {\n    var entry = entries[0];\n    var width = entry.contentRect.width;\n    var height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  var canvas = chart.canvas;\n  var proxy = throttled(function (event) {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nvar DomPlatform = /*#__PURE__*/function (_BasePlatform2) {\n  _inherits(DomPlatform, _BasePlatform2);\n  var _super10 = _createSuper(DomPlatform);\n  function DomPlatform() {\n    _classCallCheck(this, DomPlatform);\n    return _super10.apply(this, arguments);\n  }\n  _createClass(DomPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {\n      var context = canvas && canvas.getContext && canvas.getContext('2d');\n      if (context && context.canvas === canvas) {\n        initCanvas(canvas, aspectRatio);\n        return context;\n      }\n      return null;\n    }\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      var canvas = context.canvas;\n      if (!canvas[EXPANDO_KEY]) {\n        return false;\n      }\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n        if (isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      var style = initial.style || {};\n      Object.keys(style).forEach(function (key) {\n        canvas.style[key] = style[key];\n      });\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {\n      this.removeEventListener(chart, type);\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var handlers = {\n        attach: createAttachObserver,\n        detach: createDetachObserver,\n        resize: createResizeObserver\n      };\n      var handler = handlers[type] || createProxyAndListen;\n      proxies[type] = handler(chart, type, listener);\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type) {\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var proxy = proxies[type];\n      if (!proxy) {\n        return;\n      }\n      var handlers = {\n        attach: releaseObserver,\n        detach: releaseObserver,\n        resize: releaseObserver\n      };\n      var handler = handlers[type] || removeListener;\n      handler(chart, type, proxy);\n      proxies[type] = undefined;\n    }\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return window.devicePixelRatio;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(canvas, width, height, aspectRatio) {\n      return _getMaximumSize(canvas, width, height, aspectRatio);\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      var container = _getParentNode(canvas);\n      return !!(container && container.isConnected);\n    }\n  }]);\n  return DomPlatform;\n}(BasePlatform);\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\nvar Element = /*#__PURE__*/function () {\n  function Element() {\n    _classCallCheck(this, Element);\n    _defineProperty(this, \"active\", false);\n  }\n  _createClass(Element, [{\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      var _this$getProps = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps.x,\n        y = _this$getProps.y;\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"hasValue\",\n    value: function hasValue() {\n      return isNumber(this.x) && isNumber(this.y);\n    }\n  }, {\n    key: \"getProps\",\n    value: function getProps(props, final) {\n      var _this8 = this;\n      var anims = this.$animations;\n      if (!final || !anims) {\n        // let's not create an object, if not needed\n        return this;\n      }\n      var ret = {};\n      props.forEach(function (prop) {\n        ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : _this8[prop];\n      });\n      return ret;\n    }\n  }]);\n  return Element;\n}();\n_defineProperty(Element, \"defaults\", {});\n_defineProperty(Element, \"defaultRoutes\", undefined);\nfunction autoSkip(scale, ticks) {\n  var tickOpts = scale.options.ticks;\n  var determinedMaxTicks = determineMaxTicks(scale);\n  var ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  var majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  var numMajorIndices = majorIndices.length;\n  var first = majorIndices[0];\n  var last = majorIndices[numMajorIndices - 1];\n  var newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  var spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    var i, ilen;\n    var avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  var offset = scale.options.offset;\n  var tickLength = scale._tickSize();\n  var maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  var maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  var evenMajorSpacing = getEvenSpacing(majorIndices);\n  var spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  var factors = _factorize(evenMajorSpacing);\n  for (var i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    var factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  var result = [];\n  var i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  var count = 0;\n  var next = majorIndices[0];\n  var i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  var start = valueOrDefault(majorStart, 0);\n  var end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  var count = 0;\n  var length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  var len = arr.length;\n  var i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\nvar reverseAlign = function reverseAlign(align) {\n  return align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n};\nvar offsetFromEdge = function offsetFromEdge(scale, edge, offset) {\n  return edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n};\nvar getTicksLimit = function getTicksLimit(ticksLength, maxTicksLimit) {\n  return Math.min(maxTicksLimit || ticksLength, ticksLength);\n};\nfunction sample(arr, numItems) {\n  var result = [];\n  var increment = arr.length / numItems;\n  var len = arr.length;\n  var i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  var length = scale.ticks.length;\n  var validIndex = Math.min(index, length - 1);\n  var start = scale._startPixel;\n  var end = scale._endPixel;\n  var epsilon = 1e-6;\n  var lineValue = scale.getPixelForTick(validIndex);\n  var offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, function (cache) {\n    var gc = cache.gc;\n    var gcLen = gc.length / 2;\n    var i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  var font = toFont(options.font, fallback);\n  var padding = toPadding(options.padding);\n  var lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale: scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick: tick,\n    index: index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  var ret = _toLeftRightCenter(align);\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  var top = scale.top,\n    left = scale.left,\n    bottom = scale.bottom,\n    right = scale.right,\n    chart = scale.chart;\n  var chartArea = chart.chartArea,\n    scales = chart.scales;\n  var rotation = 0;\n  var maxWidth, titleX, titleY;\n  var height = bottom - top;\n  var width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      var positionAxisID = Object.keys(position)[0];\n      var value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      var positionAxisID1 = Object.keys(position)[0];\n      var value1 = position[positionAxisID1];\n      titleX = scales[positionAxisID1].getPixelForValue(value1) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {\n    titleX: titleX,\n    titleY: titleY,\n    maxWidth: maxWidth,\n    rotation: rotation\n  };\n}\nvar Scale = /*#__PURE__*/function (_Element) {\n  _inherits(Scale, _Element);\n  var _super11 = _createSuper(Scale);\n  function Scale(cfg) {\n    var _this9;\n    _classCallCheck(this, Scale);\n    _this9 = _super11.call(this);\n    _this9.id = cfg.id;\n    _this9.type = cfg.type;\n    _this9.options = undefined;\n    _this9.ctx = cfg.ctx;\n    _this9.chart = cfg.chart;\n    _this9.top = undefined;\n    _this9.bottom = undefined;\n    _this9.left = undefined;\n    _this9.right = undefined;\n    _this9.width = undefined;\n    _this9.height = undefined;\n    _this9._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    _this9.maxWidth = undefined;\n    _this9.maxHeight = undefined;\n    _this9.paddingTop = undefined;\n    _this9.paddingBottom = undefined;\n    _this9.paddingLeft = undefined;\n    _this9.paddingRight = undefined;\n    _this9.axis = undefined;\n    _this9.labelRotation = undefined;\n    _this9.min = undefined;\n    _this9.max = undefined;\n    _this9._range = undefined;\n    _this9.ticks = [];\n    _this9._gridLineItems = null;\n    _this9._labelItems = null;\n    _this9._labelSizes = null;\n    _this9._length = 0;\n    _this9._maxLength = 0;\n    _this9._longestTextCache = {};\n    _this9._startPixel = undefined;\n    _this9._endPixel = undefined;\n    _this9._reversePixels = false;\n    _this9._userMax = undefined;\n    _this9._userMin = undefined;\n    _this9._suggestedMax = undefined;\n    _this9._suggestedMin = undefined;\n    _this9._ticksLength = 0;\n    _this9._borderValue = 0;\n    _this9._cache = {};\n    _this9._dataLimitsCached = false;\n    _this9.$context = undefined;\n    return _this9;\n  }\n  _createClass(Scale, [{\n    key: \"init\",\n    value: function init(options) {\n      this.options = options.setContext(this.getContext());\n      this.axis = options.axis;\n      this._userMin = this.parse(options.min);\n      this._userMax = this.parse(options.max);\n      this._suggestedMin = this.parse(options.suggestedMin);\n      this._suggestedMax = this.parse(options.suggestedMax);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      return raw;\n    }\n  }, {\n    key: \"getUserBounds\",\n    value: function getUserBounds() {\n      var _userMin = this._userMin,\n        _userMax = this._userMax,\n        _suggestedMin = this._suggestedMin,\n        _suggestedMax = this._suggestedMax;\n      _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n      _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n      _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n      _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n      return {\n        min: finiteOrDefault(_userMin, _suggestedMin),\n        max: finiteOrDefault(_userMax, _suggestedMax),\n        minDefined: isNumberFinite(_userMin),\n        maxDefined: isNumberFinite(_userMax)\n      };\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(canStack) {\n      var _this$getUserBounds = this.getUserBounds(),\n        min = _this$getUserBounds.min,\n        max = _this$getUserBounds.max,\n        minDefined = _this$getUserBounds.minDefined,\n        maxDefined = _this$getUserBounds.maxDefined;\n      var range;\n      if (minDefined && maxDefined) {\n        return {\n          min: min,\n          max: max\n        };\n      }\n      var metas = this.getMatchingVisibleMetas();\n      for (var i = 0, ilen = metas.length; i < ilen; ++i) {\n        range = metas[i].controller.getMinMax(this, canStack);\n        if (!minDefined) {\n          min = Math.min(min, range.min);\n        }\n        if (!maxDefined) {\n          max = Math.max(max, range.max);\n        }\n      }\n      min = maxDefined && min > max ? max : min;\n      max = minDefined && min > max ? min : max;\n      return {\n        min: finiteOrDefault(min, finiteOrDefault(max, min)),\n        max: finiteOrDefault(max, finiteOrDefault(min, max))\n      };\n    }\n  }, {\n    key: \"getPadding\",\n    value: function getPadding() {\n      return {\n        left: this.paddingLeft || 0,\n        top: this.paddingTop || 0,\n        right: this.paddingRight || 0,\n        bottom: this.paddingBottom || 0\n      };\n    }\n  }, {\n    key: \"getTicks\",\n    value: function getTicks() {\n      return this.ticks;\n    }\n  }, {\n    key: \"getLabels\",\n    value: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n  }, {\n    key: \"getLabelItems\",\n    value: function getLabelItems() {\n      var chartArea = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.chart.chartArea;\n      var items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n      return items;\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      this._cache = {};\n      this._dataLimitsCached = false;\n    }\n  }, {\n    key: \"beforeUpdate\",\n    value: function beforeUpdate() {\n      callback(this.options.beforeUpdate, [this]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var _this$options4 = this.options,\n        beginAtZero = _this$options4.beginAtZero,\n        grace = _this$options4.grace,\n        tickOpts = _this$options4.ticks;\n      var sampleSize = tickOpts.sampleSize;\n      this.beforeUpdate();\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins = Object.assign({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      this.ticks = null;\n      this._labelSizes = null;\n      this._gridLineItems = null;\n      this._labelItems = null;\n      this.beforeSetDimensions();\n      this.setDimensions();\n      this.afterSetDimensions();\n      this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n      if (!this._dataLimitsCached) {\n        this.beforeDataLimits();\n        this.determineDataLimits();\n        this.afterDataLimits();\n        this._range = _addGrace(this, grace, beginAtZero);\n        this._dataLimitsCached = true;\n      }\n      this.beforeBuildTicks();\n      this.ticks = this.buildTicks() || [];\n      this.afterBuildTicks();\n      var samplingEnabled = sampleSize < this.ticks.length;\n      this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n      this.configure();\n      this.beforeCalculateLabelRotation();\n      this.calculateLabelRotation();\n      this.afterCalculateLabelRotation();\n      if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n        this.ticks = autoSkip(this, this.ticks);\n        this._labelSizes = null;\n        this.afterAutoSkip();\n      }\n      if (samplingEnabled) {\n        this._convertTicksToLabels(this.ticks);\n      }\n      this.beforeFit();\n      this.fit();\n      this.afterFit();\n      this.afterUpdate();\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var reversePixels = this.options.reverse;\n      var startPixel, endPixel;\n      if (this.isHorizontal()) {\n        startPixel = this.left;\n        endPixel = this.right;\n      } else {\n        startPixel = this.top;\n        endPixel = this.bottom;\n        reversePixels = !reversePixels;\n      }\n      this._startPixel = startPixel;\n      this._endPixel = endPixel;\n      this._reversePixels = reversePixels;\n      this._length = endPixel - startPixel;\n      this._alignToPixels = this.options.alignToPixels;\n    }\n  }, {\n    key: \"afterUpdate\",\n    value: function afterUpdate() {\n      callback(this.options.afterUpdate, [this]);\n    }\n  }, {\n    key: \"beforeSetDimensions\",\n    value: function beforeSetDimensions() {\n      callback(this.options.beforeSetDimensions, [this]);\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = 0;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = 0;\n        this.bottom = this.height;\n      }\n      this.paddingLeft = 0;\n      this.paddingTop = 0;\n      this.paddingRight = 0;\n      this.paddingBottom = 0;\n    }\n  }, {\n    key: \"afterSetDimensions\",\n    value: function afterSetDimensions() {\n      callback(this.options.afterSetDimensions, [this]);\n    }\n  }, {\n    key: \"_callHooks\",\n    value: function _callHooks(name) {\n      this.chart.notifyPlugins(name, this.getContext());\n      callback(this.options[name], [this]);\n    }\n  }, {\n    key: \"beforeDataLimits\",\n    value: function beforeDataLimits() {\n      this._callHooks('beforeDataLimits');\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {}\n  }, {\n    key: \"afterDataLimits\",\n    value: function afterDataLimits() {\n      this._callHooks('afterDataLimits');\n    }\n  }, {\n    key: \"beforeBuildTicks\",\n    value: function beforeBuildTicks() {\n      this._callHooks('beforeBuildTicks');\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      return [];\n    }\n  }, {\n    key: \"afterBuildTicks\",\n    value: function afterBuildTicks() {\n      this._callHooks('afterBuildTicks');\n    }\n  }, {\n    key: \"beforeTickToLabelConversion\",\n    value: function beforeTickToLabelConversion() {\n      callback(this.options.beforeTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var tickOpts = this.options.ticks;\n      var i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        tick = ticks[i];\n        tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n      }\n    }\n  }, {\n    key: \"afterTickToLabelConversion\",\n    value: function afterTickToLabelConversion() {\n      callback(this.options.afterTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"beforeCalculateLabelRotation\",\n    value: function beforeCalculateLabelRotation() {\n      callback(this.options.beforeCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"calculateLabelRotation\",\n    value: function calculateLabelRotation() {\n      var options = this.options;\n      var tickOpts = options.ticks;\n      var numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n      var minRotation = tickOpts.minRotation || 0;\n      var maxRotation = tickOpts.maxRotation;\n      var labelRotation = minRotation;\n      var tickWidth, maxHeight, maxLabelDiagonal;\n      if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n        this.labelRotation = minRotation;\n        return;\n      }\n      var labelSizes = this._getLabelSizes();\n      var maxLabelWidth = labelSizes.widest.width;\n      var maxLabelHeight = labelSizes.highest.height;\n      var maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n      tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n      if (maxLabelWidth + 6 > tickWidth) {\n        tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n        maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n        maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n        labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n        labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n      }\n      this.labelRotation = labelRotation;\n    }\n  }, {\n    key: \"afterCalculateLabelRotation\",\n    value: function afterCalculateLabelRotation() {\n      callback(this.options.afterCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"afterAutoSkip\",\n    value: function afterAutoSkip() {}\n  }, {\n    key: \"beforeFit\",\n    value: function beforeFit() {\n      callback(this.options.beforeFit, [this]);\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var minSize = {\n        width: 0,\n        height: 0\n      };\n      var chart = this.chart,\n        _this$options5 = this.options,\n        tickOpts = _this$options5.ticks,\n        titleOpts = _this$options5.title,\n        gridOpts = _this$options5.grid;\n      var display = this._isVisible();\n      var isHorizontal = this.isHorizontal();\n      if (display) {\n        var titleHeight = getTitleHeight(titleOpts, chart.options.font);\n        if (isHorizontal) {\n          minSize.width = this.maxWidth;\n          minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n        } else {\n          minSize.height = this.maxHeight;\n          minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n        }\n        if (tickOpts.display && this.ticks.length) {\n          var _this$_getLabelSizes = this._getLabelSizes(),\n            first = _this$_getLabelSizes.first,\n            last = _this$_getLabelSizes.last,\n            widest = _this$_getLabelSizes.widest,\n            highest = _this$_getLabelSizes.highest;\n          var tickPadding = tickOpts.padding * 2;\n          var angleRadians = toRadians(this.labelRotation);\n          var cos = Math.cos(angleRadians);\n          var sin = Math.sin(angleRadians);\n          if (isHorizontal) {\n            var labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n            minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n          } else {\n            var labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n            minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n          }\n          this._calculatePadding(first, last, sin, cos);\n        }\n      }\n      this._handleMargins();\n      if (isHorizontal) {\n        this.width = this._length = chart.width - this._margins.left - this._margins.right;\n        this.height = minSize.height;\n      } else {\n        this.width = minSize.width;\n        this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n      }\n    }\n  }, {\n    key: \"_calculatePadding\",\n    value: function _calculatePadding(first, last, sin, cos) {\n      var _this$options6 = this.options,\n        _this$options6$ticks = _this$options6.ticks,\n        align = _this$options6$ticks.align,\n        padding = _this$options6$ticks.padding,\n        position = _this$options6.position;\n      var isRotated = this.labelRotation !== 0;\n      var labelsBelowTicks = position !== 'top' && this.axis === 'x';\n      if (this.isHorizontal()) {\n        var offsetLeft = this.getPixelForTick(0) - this.left;\n        var offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n        var paddingLeft = 0;\n        var paddingRight = 0;\n        if (isRotated) {\n          if (labelsBelowTicks) {\n            paddingLeft = cos * first.width;\n            paddingRight = sin * last.height;\n          } else {\n            paddingLeft = sin * first.height;\n            paddingRight = cos * last.width;\n          }\n        } else if (align === 'start') {\n          paddingRight = last.width;\n        } else if (align === 'end') {\n          paddingLeft = first.width;\n        } else if (align !== 'inner') {\n          paddingLeft = first.width / 2;\n          paddingRight = last.width / 2;\n        }\n        this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n        this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n      } else {\n        var paddingTop = last.height / 2;\n        var paddingBottom = first.height / 2;\n        if (align === 'start') {\n          paddingTop = 0;\n          paddingBottom = first.height;\n        } else if (align === 'end') {\n          paddingTop = last.height;\n          paddingBottom = 0;\n        }\n        this.paddingTop = paddingTop + padding;\n        this.paddingBottom = paddingBottom + padding;\n      }\n    }\n  }, {\n    key: \"_handleMargins\",\n    value: function _handleMargins() {\n      if (this._margins) {\n        this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n        this._margins.top = Math.max(this.paddingTop, this._margins.top);\n        this._margins.right = Math.max(this.paddingRight, this._margins.right);\n        this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n      }\n    }\n  }, {\n    key: \"afterFit\",\n    value: function afterFit() {\n      callback(this.options.afterFit, [this]);\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var _this$options7 = this.options,\n        axis = _this$options7.axis,\n        position = _this$options7.position;\n      return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n  }, {\n    key: \"isFullSize\",\n    value: function isFullSize() {\n      return this.options.fullSize;\n    }\n  }, {\n    key: \"_convertTicksToLabels\",\n    value: function _convertTicksToLabels(ticks) {\n      this.beforeTickToLabelConversion();\n      this.generateTickLabels(ticks);\n      var i, ilen;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        if (isNullOrUndef(ticks[i].label)) {\n          ticks.splice(i, 1);\n          ilen--;\n          i--;\n        }\n      }\n      this.afterTickToLabelConversion();\n    }\n  }, {\n    key: \"_getLabelSizes\",\n    value: function _getLabelSizes() {\n      var labelSizes = this._labelSizes;\n      if (!labelSizes) {\n        var sampleSize = this.options.ticks.sampleSize;\n        var ticks = this.ticks;\n        if (sampleSize < ticks.length) {\n          ticks = sample(ticks, sampleSize);\n        }\n        this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n      }\n      return labelSizes;\n    }\n  }, {\n    key: \"_computeLabelSizes\",\n    value: function _computeLabelSizes(ticks, length, maxTicksLimit) {\n      var ctx = this.ctx,\n        caches = this._longestTextCache;\n      var widths = [];\n      var heights = [];\n      var increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n      var widestLabelSize = 0;\n      var highestLabelSize = 0;\n      var i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n      for (i = 0; i < length; i += increment) {\n        label = ticks[i].label;\n        tickFont = this._resolveTickFontOptions(i);\n        ctx.font = fontString = tickFont.string;\n        cache = caches[fontString] = caches[fontString] || {\n          data: {},\n          gc: []\n        };\n        lineHeight = tickFont.lineHeight;\n        width = height = 0;\n        if (!isNullOrUndef(label) && !isArray(label)) {\n          width = _measureText(ctx, cache.data, cache.gc, width, label);\n          height = lineHeight;\n        } else if (isArray(label)) {\n          for (j = 0, jlen = label.length; j < jlen; ++j) {\n            nestedLabel = label[j];\n            if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n              width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n              height += lineHeight;\n            }\n          }\n        }\n        widths.push(width);\n        heights.push(height);\n        widestLabelSize = Math.max(width, widestLabelSize);\n        highestLabelSize = Math.max(height, highestLabelSize);\n      }\n      garbageCollect(caches, length);\n      var widest = widths.indexOf(widestLabelSize);\n      var highest = heights.indexOf(highestLabelSize);\n      var valueAt = function valueAt(idx) {\n        return {\n          width: widths[idx] || 0,\n          height: heights[idx] || 0\n        };\n      };\n      return {\n        first: valueAt(0),\n        last: valueAt(length - 1),\n        widest: valueAt(widest),\n        highest: valueAt(highest),\n        widths: widths,\n        heights: heights\n      };\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value;\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value, index) {\n      return NaN;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {}\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getPixelForDecimal\",\n    value: function getPixelForDecimal(decimal) {\n      if (this._reversePixels) {\n        decimal = 1 - decimal;\n      }\n      var pixel = this._startPixel + decimal * this._length;\n      return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n  }, {\n    key: \"getDecimalForPixel\",\n    value: function getDecimalForPixel(pixel) {\n      var decimal = (pixel - this._startPixel) / this._length;\n      return this._reversePixels ? 1 - decimal : decimal;\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    }\n  }, {\n    key: \"getBaseValue\",\n    value: function getBaseValue() {\n      var min = this.min,\n        max = this.max;\n      return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index) {\n      var ticks = this.ticks || [];\n      if (index >= 0 && index < ticks.length) {\n        var tick = ticks[index];\n        return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n      }\n      return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n  }, {\n    key: \"_tickSize\",\n    value: function _tickSize() {\n      var optionTicks = this.options.ticks;\n      var rot = toRadians(this.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var labelSizes = this._getLabelSizes();\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = labelSizes ? labelSizes.widest.width + padding : 0;\n      var h = labelSizes ? labelSizes.highest.height + padding : 0;\n      return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n  }, {\n    key: \"_isVisible\",\n    value: function _isVisible() {\n      var display = this.options.display;\n      if (display !== 'auto') {\n        return !!display;\n      }\n      return this.getMatchingVisibleMetas().length > 0;\n    }\n  }, {\n    key: \"_computeGridLineItems\",\n    value: function _computeGridLineItems(chartArea) {\n      var axis = this.axis;\n      var chart = this.chart;\n      var options = this.options;\n      var grid = options.grid,\n        position = options.position,\n        border = options.border;\n      var offset = grid.offset;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var ticksLength = ticks.length + (offset ? 1 : 0);\n      var tl = getTickMarkLength(grid);\n      var items = [];\n      var borderOpts = border.setContext(this.getContext());\n      var axisWidth = borderOpts.display ? borderOpts.width : 0;\n      var axisHalfWidth = axisWidth / 2;\n      var alignBorderValue = function alignBorderValue(pixel) {\n        return _alignPixel(chart, pixel, axisWidth);\n      };\n      var borderValue, i, lineValue, alignedLineValue;\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n      if (position === 'top') {\n        borderValue = alignBorderValue(this.bottom);\n        ty1 = this.bottom - tl;\n        ty2 = borderValue - axisHalfWidth;\n        y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n        y2 = chartArea.bottom;\n      } else if (position === 'bottom') {\n        borderValue = alignBorderValue(this.top);\n        y1 = chartArea.top;\n        y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = this.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignBorderValue(this.right);\n        tx1 = this.right - tl;\n        tx2 = borderValue - axisHalfWidth;\n        x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n        x2 = chartArea.right;\n      } else if (position === 'right') {\n        borderValue = alignBorderValue(this.left);\n        x1 = chartArea.left;\n        x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n        tx1 = borderValue + axisHalfWidth;\n        tx2 = this.left + tl;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n        y1 = chartArea.top;\n        y2 = chartArea.bottom;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = ty1 + tl;\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n        } else if (isObject(position)) {\n          var positionAxisID1 = Object.keys(position)[0];\n          var value1 = position[positionAxisID1];\n          borderValue = alignBorderValue(this.chart.scales[positionAxisID1].getPixelForValue(value1));\n        }\n        tx1 = borderValue - axisHalfWidth;\n        tx2 = tx1 - tl;\n        x1 = chartArea.left;\n        x2 = chartArea.right;\n      }\n      var limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n      var step = Math.max(1, Math.ceil(ticksLength / limit));\n      for (i = 0; i < ticksLength; i += step) {\n        var context = this.getContext(i);\n        var optsAtIndex = grid.setContext(context);\n        var optsAtIndexBorder = border.setContext(context);\n        var lineWidth = optsAtIndex.lineWidth;\n        var lineColor = optsAtIndex.color;\n        var borderDash = optsAtIndexBorder.dash || [];\n        var borderDashOffset = optsAtIndexBorder.dashOffset;\n        var tickWidth = optsAtIndex.tickWidth;\n        var tickColor = optsAtIndex.tickColor;\n        var tickBorderDash = optsAtIndex.tickBorderDash || [];\n        var tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n        lineValue = getPixelForGridLine(this, i, offset);\n        if (lineValue === undefined) {\n          continue;\n        }\n        alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n        if (isHorizontal) {\n          tx1 = tx2 = x1 = x2 = alignedLineValue;\n        } else {\n          ty1 = ty2 = y1 = y2 = alignedLineValue;\n        }\n        items.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          width: lineWidth,\n          color: lineColor,\n          borderDash: borderDash,\n          borderDashOffset: borderDashOffset,\n          tickWidth: tickWidth,\n          tickColor: tickColor,\n          tickBorderDash: tickBorderDash,\n          tickBorderDashOffset: tickBorderDashOffset\n        });\n      }\n      this._ticksLength = ticksLength;\n      this._borderValue = borderValue;\n      return items;\n    }\n  }, {\n    key: \"_computeLabelItems\",\n    value: function _computeLabelItems(chartArea) {\n      var axis = this.axis;\n      var options = this.options;\n      var position = options.position,\n        optionTicks = options.ticks;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var align = optionTicks.align,\n        crossAlign = optionTicks.crossAlign,\n        padding = optionTicks.padding,\n        mirror = optionTicks.mirror;\n      var tl = getTickMarkLength(options.grid);\n      var tickAndPadding = tl + padding;\n      var hTickAndPadding = mirror ? -padding : tickAndPadding;\n      var rotation = -toRadians(this.labelRotation);\n      var items = [];\n      var i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n      var textBaseline = 'middle';\n      if (position === 'top') {\n        y = this.bottom - hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'bottom') {\n        y = this.top + hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'left') {\n        var ret = this._getYAxisLabelAlignment(tl);\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (position === 'right') {\n        var ret1 = this._getYAxisLabelAlignment(tl);\n        textAlign = ret1.textAlign;\n        x = ret1.x;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n        }\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n        } else if (isObject(position)) {\n          var positionAxisID1 = Object.keys(position)[0];\n          var value1 = position[positionAxisID1];\n          x = this.chart.scales[positionAxisID1].getPixelForValue(value1);\n        }\n        textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n      }\n      if (axis === 'y') {\n        if (align === 'start') {\n          textBaseline = 'top';\n        } else if (align === 'end') {\n          textBaseline = 'bottom';\n        }\n      }\n      var labelSizes = this._getLabelSizes();\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        label = tick.label;\n        var optsAtIndex = optionTicks.setContext(this.getContext(i));\n        pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n        font = this._resolveTickFontOptions(i);\n        lineHeight = font.lineHeight;\n        lineCount = isArray(label) ? label.length : 1;\n        var halfCount = lineCount / 2;\n        var color = optsAtIndex.color;\n        var strokeColor = optsAtIndex.textStrokeColor;\n        var strokeWidth = optsAtIndex.textStrokeWidth;\n        var tickTextAlign = textAlign;\n        if (isHorizontal) {\n          x = pixel;\n          if (textAlign === 'inner') {\n            if (i === ilen - 1) {\n              tickTextAlign = !this.options.reverse ? 'right' : 'left';\n            } else if (i === 0) {\n              tickTextAlign = !this.options.reverse ? 'left' : 'right';\n            } else {\n              tickTextAlign = 'center';\n            }\n          }\n          if (position === 'top') {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = -lineCount * lineHeight + lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n            } else {\n              textOffset = -labelSizes.highest.height + lineHeight / 2;\n            }\n          } else {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n            } else {\n              textOffset = labelSizes.highest.height - lineCount * lineHeight;\n            }\n          }\n          if (mirror) {\n            textOffset *= -1;\n          }\n          if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n            x += lineHeight / 2 * Math.sin(rotation);\n          }\n        } else {\n          y = pixel;\n          textOffset = (1 - lineCount) * lineHeight / 2;\n        }\n        var backdrop = void 0;\n        if (optsAtIndex.showLabelBackdrop) {\n          var labelPadding = toPadding(optsAtIndex.backdropPadding);\n          var height = labelSizes.heights[i];\n          var width = labelSizes.widths[i];\n          var top = textOffset - labelPadding.top;\n          var left = 0 - labelPadding.left;\n          switch (textBaseline) {\n            case 'middle':\n              top -= height / 2;\n              break;\n            case 'bottom':\n              top -= height;\n              break;\n          }\n          switch (textAlign) {\n            case 'center':\n              left -= width / 2;\n              break;\n            case 'right':\n              left -= width;\n              break;\n          }\n          backdrop = {\n            left: left,\n            top: top,\n            width: width + labelPadding.width,\n            height: height + labelPadding.height,\n            color: optsAtIndex.backdropColor\n          };\n        }\n        items.push({\n          label: label,\n          font: font,\n          textOffset: textOffset,\n          options: {\n            rotation: rotation,\n            color: color,\n            strokeColor: strokeColor,\n            strokeWidth: strokeWidth,\n            textAlign: tickTextAlign,\n            textBaseline: textBaseline,\n            translation: [x, y],\n            backdrop: backdrop\n          }\n        });\n      }\n      return items;\n    }\n  }, {\n    key: \"_getXAxisLabelAlignment\",\n    value: function _getXAxisLabelAlignment() {\n      var _this$options8 = this.options,\n        position = _this$options8.position,\n        ticks = _this$options8.ticks;\n      var rotation = -toRadians(this.labelRotation);\n      if (rotation) {\n        return position === 'top' ? 'left' : 'right';\n      }\n      var align = 'center';\n      if (ticks.align === 'start') {\n        align = 'left';\n      } else if (ticks.align === 'end') {\n        align = 'right';\n      } else if (ticks.align === 'inner') {\n        align = 'inner';\n      }\n      return align;\n    }\n  }, {\n    key: \"_getYAxisLabelAlignment\",\n    value: function _getYAxisLabelAlignment(tl) {\n      var _this$options9 = this.options,\n        position = _this$options9.position,\n        _this$options9$ticks = _this$options9.ticks,\n        crossAlign = _this$options9$ticks.crossAlign,\n        mirror = _this$options9$ticks.mirror,\n        padding = _this$options9$ticks.padding;\n      var labelSizes = this._getLabelSizes();\n      var tickAndPadding = tl + padding;\n      var widest = labelSizes.widest.width;\n      var textAlign;\n      var x;\n      if (position === 'left') {\n        if (mirror) {\n          x = this.right + padding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x += widest;\n          }\n        } else {\n          x = this.right - tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x = this.left;\n          }\n        }\n      } else if (position === 'right') {\n        if (mirror) {\n          x = this.left + padding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x -= widest;\n          }\n        } else {\n          x = this.left + tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x = this.right;\n          }\n        }\n      } else {\n        textAlign = 'right';\n      }\n      return {\n        textAlign: textAlign,\n        x: x\n      };\n    }\n  }, {\n    key: \"_computeLabelArea\",\n    value: function _computeLabelArea() {\n      if (this.options.ticks.mirror) {\n        return;\n      }\n      var chart = this.chart;\n      var position = this.options.position;\n      if (position === 'left' || position === 'right') {\n        return {\n          top: 0,\n          left: this.left,\n          bottom: chart.height,\n          right: this.right\n        };\n      }\n      if (position === 'top' || position === 'bottom') {\n        return {\n          top: this.top,\n          left: 0,\n          bottom: this.bottom,\n          right: chart.width\n        };\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var ctx = this.ctx,\n        backgroundColor = this.options.backgroundColor,\n        left = this.left,\n        top = this.top,\n        width = this.width,\n        height = this.height;\n      if (backgroundColor) {\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(left, top, width, height);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getLineWidthForValue\",\n    value: function getLineWidthForValue(value) {\n      var grid = this.options.grid;\n      if (!this._isVisible() || !grid.display) {\n        return 0;\n      }\n      var ticks = this.ticks;\n      var index = ticks.findIndex(function (t) {\n        return t.value === value;\n      });\n      if (index >= 0) {\n        var opts = grid.setContext(this.getContext(index));\n        return opts.lineWidth;\n      }\n      return 0;\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid(chartArea) {\n      var grid = this.options.grid;\n      var ctx = this.ctx;\n      var items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n      var i, ilen;\n      var drawLine = function drawLine(p1, p2, style) {\n        if (!style.width || !style.color) {\n          return;\n        }\n        ctx.save();\n        ctx.lineWidth = style.width;\n        ctx.strokeStyle = style.color;\n        ctx.setLineDash(style.borderDash || []);\n        ctx.lineDashOffset = style.borderDashOffset;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y);\n        ctx.lineTo(p2.x, p2.y);\n        ctx.stroke();\n        ctx.restore();\n      };\n      if (grid.display) {\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n          var item = items[i];\n          if (grid.drawOnChartArea) {\n            drawLine({\n              x: item.x1,\n              y: item.y1\n            }, {\n              x: item.x2,\n              y: item.y2\n            }, item);\n          }\n          if (grid.drawTicks) {\n            drawLine({\n              x: item.tx1,\n              y: item.ty1\n            }, {\n              x: item.tx2,\n              y: item.ty2\n            }, {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {\n      var chart = this.chart,\n        ctx = this.ctx,\n        _this$options10 = this.options,\n        border = _this$options10.border,\n        grid = _this$options10.grid;\n      var borderOpts = border.setContext(this.getContext());\n      var axisWidth = border.display ? borderOpts.width : 0;\n      if (!axisWidth) {\n        return;\n      }\n      var lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n      var borderValue = this._borderValue;\n      var x1, x2, y1, y2;\n      if (this.isHorizontal()) {\n        x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n      ctx.save();\n      ctx.lineWidth = borderOpts.width;\n      ctx.strokeStyle = borderOpts.color;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels(chartArea) {\n      var optionTicks = this.options.ticks;\n      if (!optionTicks.display) {\n        return;\n      }\n      var ctx = this.ctx;\n      var area = this._computeLabelArea();\n      if (area) {\n        clipArea(ctx, area);\n      }\n      var items = this.getLabelItems(chartArea);\n      var _iterator10 = _createForOfIteratorHelper(items),\n        _step10;\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var item = _step10.value;\n          var renderTextOptions = item.options;\n          var tickFont = item.font;\n          var label = item.label;\n          var y = item.textOffset;\n          renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n      if (area) {\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var ctx = this.ctx,\n        _this$options11 = this.options,\n        position = _this$options11.position,\n        title = _this$options11.title,\n        reverse = _this$options11.reverse;\n      if (!title.display) {\n        return;\n      }\n      var font = toFont(title.font);\n      var padding = toPadding(title.padding);\n      var align = title.align;\n      var offset = font.lineHeight / 2;\n      if (position === 'bottom' || position === 'center' || isObject(position)) {\n        offset += padding.bottom;\n        if (isArray(title.text)) {\n          offset += font.lineHeight * (title.text.length - 1);\n        }\n      } else {\n        offset += padding.top;\n      }\n      var _titleArgs = titleArgs(this, offset, position, align),\n        titleX = _titleArgs.titleX,\n        titleY = _titleArgs.titleY,\n        maxWidth = _titleArgs.maxWidth,\n        rotation = _titleArgs.rotation;\n      renderText(ctx, title.text, 0, 0, font, {\n        color: title.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: titleAlign(align, position, reverse),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(chartArea) {\n      if (!this._isVisible()) {\n        return;\n      }\n      this.drawBackground();\n      this.drawGrid(chartArea);\n      this.drawBorder();\n      this.drawTitle();\n      this.drawLabels(chartArea);\n    }\n  }, {\n    key: \"_layers\",\n    value: function _layers() {\n      var _this10 = this;\n      var opts = this.options;\n      var tz = opts.ticks && opts.ticks.z || 0;\n      var gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n      var bz = valueOrDefault(opts.border && opts.border.z, 0);\n      if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n        return [{\n          z: tz,\n          draw: function draw(chartArea) {\n            _this10.draw(chartArea);\n          }\n        }];\n      }\n      return [{\n        z: gz,\n        draw: function draw(chartArea) {\n          _this10.drawBackground();\n          _this10.drawGrid(chartArea);\n          _this10.drawTitle();\n        }\n      }, {\n        z: bz,\n        draw: function draw() {\n          _this10.drawBorder();\n        }\n      }, {\n        z: tz,\n        draw: function draw(chartArea) {\n          _this10.drawLabels(chartArea);\n        }\n      }];\n    }\n  }, {\n    key: \"getMatchingVisibleMetas\",\n    value: function getMatchingVisibleMetas(type) {\n      var metas = this.chart.getSortedVisibleDatasetMetas();\n      var axisID = this.axis + 'AxisID';\n      var result = [];\n      var i, ilen;\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        var meta = metas[i];\n        if (meta[axisID] === this.id && (!type || meta.type === type)) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"_resolveTickFontOptions\",\n    value: function _resolveTickFontOptions(index) {\n      var opts = this.options.ticks.setContext(this.getContext(index));\n      return toFont(opts.font);\n    }\n  }, {\n    key: \"_maxDigits\",\n    value: function _maxDigits() {\n      var fontSize = this._resolveTickFontOptions(0).lineHeight;\n      return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n  }]);\n  return Scale;\n}(Element);\nvar TypedRegistry = /*#__PURE__*/function () {\n  function TypedRegistry(type, scope, override) {\n    _classCallCheck(this, TypedRegistry);\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  _createClass(TypedRegistry, [{\n    key: \"isForType\",\n    value: function isForType(type) {\n      return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n  }, {\n    key: \"register\",\n    value: function register(item) {\n      var proto = Object.getPrototypeOf(item);\n      var parentScope;\n      if (isIChartComponent(proto)) {\n        parentScope = this.register(proto);\n      }\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope + '.' + id;\n      if (!id) {\n        throw new Error('class does not have id: ' + item);\n      }\n      if (id in items) {\n        return scope;\n      }\n      items[id] = item;\n      registerDefaults(item, scope, parentScope);\n      if (this.override) {\n        defaults.override(item.id, item.overrides);\n      }\n      return scope;\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      return this.items[id];\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister(item) {\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope;\n      if (id in items) {\n        delete items[id];\n      }\n      if (scope && id in defaults[scope]) {\n        delete defaults[scope][id];\n        if (this.override) {\n          delete overrides[id];\n        }\n      }\n    }\n  }]);\n  return TypedRegistry;\n}();\nfunction registerDefaults(item, scope, parentScope) {\n  var itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(function (property) {\n    var propertyParts = property.split('.');\n    var sourceName = propertyParts.pop();\n    var sourceScope = [scope].concat(propertyParts).join('.');\n    var parts = routes[property].split('.');\n    var targetName = parts.pop();\n    var targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\nvar Registry = /*#__PURE__*/function () {\n  function Registry() {\n    _classCallCheck(this, Registry);\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  _createClass(Registry, [{\n    key: \"add\",\n    value: function add() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      this._each('register', args);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      this._each('unregister', args);\n    }\n  }, {\n    key: \"addControllers\",\n    value: function addControllers() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      this._each('register', args, this.controllers);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      this._each('register', args, this.elements);\n    }\n  }, {\n    key: \"addPlugins\",\n    value: function addPlugins() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      this._each('register', args, this.plugins);\n    }\n  }, {\n    key: \"addScales\",\n    value: function addScales() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n      this._each('register', args, this.scales);\n    }\n  }, {\n    key: \"getController\",\n    value: function getController(id) {\n      return this._get(id, this.controllers, 'controller');\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement(id) {\n      return this._get(id, this.elements, 'element');\n    }\n  }, {\n    key: \"getPlugin\",\n    value: function getPlugin(id) {\n      return this._get(id, this.plugins, 'plugin');\n    }\n  }, {\n    key: \"getScale\",\n    value: function getScale(id) {\n      return this._get(id, this.scales, 'scale');\n    }\n  }, {\n    key: \"removeControllers\",\n    value: function removeControllers() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n      this._each('unregister', args, this.controllers);\n    }\n  }, {\n    key: \"removeElements\",\n    value: function removeElements() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n      this._each('unregister', args, this.elements);\n    }\n  }, {\n    key: \"removePlugins\",\n    value: function removePlugins() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n      this._each('unregister', args, this.plugins);\n    }\n  }, {\n    key: \"removeScales\",\n    value: function removeScales() {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n      this._each('unregister', args, this.scales);\n    }\n  }, {\n    key: \"_each\",\n    value: function _each(method, args, typedRegistry) {\n      var _this11 = this;\n      _toConsumableArray(args).forEach(function (arg) {\n        var reg = typedRegistry || _this11._getRegistryForType(arg);\n        if (typedRegistry || reg.isForType(arg) || reg === _this11.plugins && arg.id) {\n          _this11._exec(method, reg, arg);\n        } else {\n          each(arg, function (item) {\n            var itemReg = typedRegistry || _this11._getRegistryForType(item);\n            _this11._exec(method, itemReg, item);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_exec\",\n    value: function _exec(method, registry, component) {\n      var camelMethod = _capitalize(method);\n      callback(component['before' + camelMethod], [], component);\n      registry[method](component);\n      callback(component['after' + camelMethod], [], component);\n    }\n  }, {\n    key: \"_getRegistryForType\",\n    value: function _getRegistryForType(type) {\n      for (var i = 0; i < this._typedRegistries.length; i++) {\n        var reg = this._typedRegistries[i];\n        if (reg.isForType(type)) {\n          return reg;\n        }\n      }\n      return this.plugins;\n    }\n  }, {\n    key: \"_get\",\n    value: function _get(id, typedRegistry, type) {\n      var item = typedRegistry.get(id);\n      if (item === undefined) {\n        throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n      }\n      return item;\n    }\n  }]);\n  return Registry;\n}();\nvar registry = /* #__PURE__ */new Registry();\nvar PluginService = /*#__PURE__*/function () {\n  function PluginService() {\n    _classCallCheck(this, PluginService);\n    this._init = [];\n  }\n  _createClass(PluginService, [{\n    key: \"notify\",\n    value: function notify(chart, hook, args, filter) {\n      if (hook === 'beforeInit') {\n        this._init = this._createDescriptors(chart, true);\n        this._notify(this._init, chart, 'install');\n      }\n      var descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n      var result = this._notify(descriptors, chart, hook, args);\n      if (hook === 'afterDestroy') {\n        this._notify(descriptors, chart, 'stop');\n        this._notify(this._init, chart, 'uninstall');\n      }\n      return result;\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(descriptors, chart, hook, args) {\n      args = args || {};\n      var _iterator11 = _createForOfIteratorHelper(descriptors),\n        _step11;\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var descriptor = _step11.value;\n          var plugin = descriptor.plugin;\n          var method = plugin[hook];\n          var params = [chart, args, descriptor.options];\n          if (callback(method, params, plugin) === false && args.cancelable) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n      return true;\n    }\n  }, {\n    key: \"invalidate\",\n    value: function invalidate() {\n      if (!isNullOrUndef(this._cache)) {\n        this._oldCache = this._cache;\n        this._cache = undefined;\n      }\n    }\n  }, {\n    key: \"_descriptors\",\n    value: function _descriptors(chart) {\n      if (this._cache) {\n        return this._cache;\n      }\n      var descriptors = this._cache = this._createDescriptors(chart);\n      this._notifyStateChanges(chart);\n      return descriptors;\n    }\n  }, {\n    key: \"_createDescriptors\",\n    value: function _createDescriptors(chart, all) {\n      var config = chart && chart.config;\n      var options = valueOrDefault(config.options && config.options.plugins, {});\n      var plugins = allPlugins(config);\n      return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n  }, {\n    key: \"_notifyStateChanges\",\n    value: function _notifyStateChanges(chart) {\n      var previousDescriptors = this._oldCache || [];\n      var descriptors = this._cache;\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.plugin.id === y.plugin.id;\n          });\n        });\n      };\n      this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n      this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n  }]);\n  return PluginService;\n}();\nfunction allPlugins(config) {\n  var localIds = {};\n  var plugins = [];\n  var keys = Object.keys(registry.plugins.items);\n  for (var i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  var local = config.plugins || [];\n  for (var i1 = 0; i1 < local.length; i1++) {\n    var plugin = local[i1];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {\n    plugins: plugins,\n    localIds: localIds\n  };\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, _ref2, options, all) {\n  var plugins = _ref2.plugins,\n    localIds = _ref2.localIds;\n  var result = [];\n  var context = chart.getContext();\n  var _iterator12 = _createForOfIteratorHelper(plugins),\n    _step12;\n  try {\n    for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n      var plugin = _step12.value;\n      var id = plugin.id;\n      var opts = getOpts(options[id], all);\n      if (opts === null) {\n        continue;\n      }\n      result.push({\n        plugin: plugin,\n        options: pluginOpts(chart.config, {\n          plugin: plugin,\n          local: localIds[id]\n        }, opts, context)\n      });\n    }\n  } catch (err) {\n    _iterator12.e(err);\n  } finally {\n    _iterator12.f();\n  }\n  return result;\n}\nfunction pluginOpts(config, _ref3, opts, context) {\n  var plugin = _ref3.plugin,\n    local = _ref3.local;\n  var keys = config.pluginScopeKeys(plugin);\n  var scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\nfunction getIndexAxis(type, options) {\n  var datasetDefaults = defaults.datasets[type] || {};\n  var datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  var axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n  id = scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n  if (id) {\n    return id;\n  }\n  throw new Error(\"Cannot determine type of '\".concat(name, \"' axis. Please provide 'axis' or 'position' option.\"));\n}\nfunction mergeScaleConfig(config, options) {\n  var chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  var configScales = options.scales || {};\n  var chartIndexAxis = getIndexAxis(config.type, options);\n  var scales = Object.create(null);\n  Object.keys(configScales).forEach(function (id) {\n    var scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(\"Invalid scale configuration for scale: \".concat(id));\n    }\n    if (scaleConf._proxy) {\n      return console.warn(\"Ignoring resolver passed as options for scale: \".concat(id));\n    }\n    var axis = determineAxis(id, scaleConf);\n    var defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    var defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{\n      axis: axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(function (dataset) {\n    var type = dataset.type || config.type;\n    var indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    var datasetDefaults = overrides[type] || {};\n    var defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(function (defaultID) {\n      var axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      var id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis: axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(function (key) {\n    var scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  var options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nvar keyCache = new Map();\nvar keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  var keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nvar addIfFound = function addIfFound(set, obj, key) {\n  var opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nvar Config = /*#__PURE__*/function () {\n  function Config(config) {\n    _classCallCheck(this, Config);\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  _createClass(Config, [{\n    key: \"platform\",\n    get: function get() {\n      return this._config.platform;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._config.type;\n    },\n    set: function set(type) {\n      this._config.type = type;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._config.data;\n    },\n    set: function set(data) {\n      this._config.data = initData(data);\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._config.options;\n    },\n    set: function set(options) {\n      this._config.options = options;\n    }\n  }, {\n    key: \"plugins\",\n    get: function get() {\n      return this._config.plugins;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var config = this._config;\n      this.clearCache();\n      initOptions(config);\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this._scopeCache.clear();\n      this._resolverCache.clear();\n    }\n  }, {\n    key: \"datasetScopeKeys\",\n    value: function datasetScopeKeys(datasetType) {\n      return cachedKeys(datasetType, function () {\n        return [[\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetAnimationScopeKeys\",\n    value: function datasetAnimationScopeKeys(datasetType, transition) {\n      return cachedKeys(\"\".concat(datasetType, \".transition.\").concat(transition), function () {\n        return [[\"datasets.\".concat(datasetType, \".transitions.\").concat(transition), \"transitions.\".concat(transition)], [\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetElementScopeKeys\",\n    value: function datasetElementScopeKeys(datasetType, elementType) {\n      return cachedKeys(\"\".concat(datasetType, \"-\").concat(elementType), function () {\n        return [[\"datasets.\".concat(datasetType, \".elements.\").concat(elementType), \"datasets.\".concat(datasetType), \"elements.\".concat(elementType), '']];\n      });\n    }\n  }, {\n    key: \"pluginScopeKeys\",\n    value: function pluginScopeKeys(plugin) {\n      var id = plugin.id;\n      var type = this.type;\n      return cachedKeys(\"\".concat(type, \"-plugin-\").concat(id), function () {\n        return [[\"plugins.\".concat(id)].concat(_toConsumableArray(plugin.additionalOptionScopes || []))];\n      });\n    }\n  }, {\n    key: \"_cachedScopes\",\n    value: function _cachedScopes(mainScope, resetCache) {\n      var _scopeCache = this._scopeCache;\n      var cache = _scopeCache.get(mainScope);\n      if (!cache || resetCache) {\n        cache = new Map();\n        _scopeCache.set(mainScope, cache);\n      }\n      return cache;\n    }\n  }, {\n    key: \"getOptionScopes\",\n    value: function getOptionScopes(mainScope, keyLists, resetCache) {\n      var options = this.options,\n        type = this.type;\n      var cache = this._cachedScopes(mainScope, resetCache);\n      var cached = cache.get(keyLists);\n      if (cached) {\n        return cached;\n      }\n      var scopes = new Set();\n      keyLists.forEach(function (keys) {\n        if (mainScope) {\n          scopes.add(mainScope);\n          keys.forEach(function (key) {\n            return addIfFound(scopes, mainScope, key);\n          });\n        }\n        keys.forEach(function (key) {\n          return addIfFound(scopes, options, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, overrides[type] || {}, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, defaults, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, descriptors, key);\n        });\n      });\n      var array = Array.from(scopes);\n      if (array.length === 0) {\n        array.push(Object.create(null));\n      }\n      if (keysCached.has(keyLists)) {\n        cache.set(keyLists, array);\n      }\n      return array;\n    }\n  }, {\n    key: \"chartOptionScopes\",\n    value: function chartOptionScopes() {\n      var options = this.options,\n        type = this.type;\n      return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n        type: type\n      }, defaults, descriptors];\n    }\n  }, {\n    key: \"resolveNamedOptions\",\n    value: function resolveNamedOptions(scopes, names, context) {\n      var prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n      var result = {\n        $shared: true\n      };\n      var _getResolver = getResolver(this._resolverCache, scopes, prefixes),\n        resolver = _getResolver.resolver,\n        subPrefixes = _getResolver.subPrefixes;\n      var options = resolver;\n      if (needContext(resolver, names)) {\n        result.$shared = false;\n        context = isFunction(context) ? context() : context;\n        var subResolver = this.createResolver(scopes, context, subPrefixes);\n        options = _attachContext(resolver, context, subResolver);\n      }\n      var _iterator13 = _createForOfIteratorHelper(names),\n        _step13;\n      try {\n        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n          var prop = _step13.value;\n          result[prop] = options[prop];\n        }\n      } catch (err) {\n        _iterator13.e(err);\n      } finally {\n        _iterator13.f();\n      }\n      return result;\n    }\n  }, {\n    key: \"createResolver\",\n    value: function createResolver(scopes, context) {\n      var prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n      var descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n      var _getResolver2 = getResolver(this._resolverCache, scopes, prefixes),\n        resolver = _getResolver2.resolver;\n      return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n  }]);\n  return Config;\n}();\nfunction getResolver(resolverCache, scopes, prefixes) {\n  var cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  var cacheKey = prefixes.join();\n  var cached = cache.get(cacheKey);\n  if (!cached) {\n    var resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver: resolver,\n      subPrefixes: prefixes.filter(function (p) {\n        return !p.toLowerCase().includes('hover');\n      })\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nvar hasFunction = function hasFunction(value) {\n  return isObject(value) && Object.getOwnPropertyNames(value).reduce(function (acc, key) {\n    return acc || isFunction(value[key]);\n  }, false);\n};\nfunction needContext(proxy, names) {\n  var _descriptors2 = _descriptors(proxy),\n    isScriptable = _descriptors2.isScriptable,\n    isIndexable = _descriptors2.isIndexable;\n  var _iterator14 = _createForOfIteratorHelper(names),\n    _step14;\n  try {\n    for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n      var prop = _step14.value;\n      var scriptable = isScriptable(prop);\n      var indexable = isIndexable(prop);\n      var value = (indexable || scriptable) && proxy[prop];\n      if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator14.e(err);\n  } finally {\n    _iterator14.f();\n  }\n  return false;\n}\nvar version = \"4.2.1\";\nvar KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nvar instances = {};\nvar getChart = function getChart(key) {\n  var canvas = getCanvas(key);\n  return Object.values(instances).filter(function (c) {\n    return c.canvas === canvas;\n  }).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  var keys = Object.keys(obj);\n  for (var _i2 = 0, _keys = keys; _i2 < _keys.length; _i2++) {\n    var key = _keys[_i2];\n    var intKey = +key;\n    if (intKey >= start) {\n      var value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nfunction getDatasetArea(meta) {\n  var xScale = meta.xScale,\n    yScale = meta.yScale;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\nvar Chart = /*#__PURE__*/function () {\n  function Chart(item, userConfig) {\n    var _this12 = this;\n    _classCallCheck(this, Chart);\n    var config = this.config = new Config(userConfig);\n    var initialCanvas = getCanvas(item);\n    var existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n    }\n    var options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    var context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    var canvas = context && context.canvas;\n    var height = canvas && canvas.height;\n    var width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(function (mode) {\n      return _this12.update(mode);\n    }, options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  _createClass(Chart, [{\n    key: \"aspectRatio\",\n    get: function get() {\n      var _this$options12 = this.options,\n        aspectRatio = _this$options12.aspectRatio,\n        maintainAspectRatio = _this$options12.maintainAspectRatio,\n        width = this.width,\n        height = this.height,\n        _aspectRatio = this._aspectRatio;\n      if (!isNullOrUndef(aspectRatio)) {\n        return aspectRatio;\n      }\n      if (maintainAspectRatio && _aspectRatio) {\n        return _aspectRatio;\n      }\n      return height ? width / height : null;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this.config.data;\n    },\n    set: function set(data) {\n      this.config.data = data;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._options;\n    },\n    set: function set(options) {\n      this.config.options = options;\n    }\n  }, {\n    key: \"registry\",\n    get: function get() {\n      return registry;\n    }\n  }, {\n    key: \"_initialize\",\n    value: function _initialize() {\n      this.notifyPlugins('beforeInit');\n      if (this.options.responsive) {\n        this.resize();\n      } else {\n        retinaScale(this, this.options.devicePixelRatio);\n      }\n      this.bindEvents();\n      this.notifyPlugins('afterInit');\n      return this;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      clearCanvas(this.canvas, this.ctx);\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      animator.stop(this);\n      return this;\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      if (!animator.running(this)) {\n        this._resize(width, height);\n      } else {\n        this._resizeBeforeDraw = {\n          width: width,\n          height: height\n        };\n      }\n    }\n  }, {\n    key: \"_resize\",\n    value: function _resize(width, height) {\n      var options = this.options;\n      var canvas = this.canvas;\n      var aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n      var newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n      var newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n      var mode = this.width ? 'resize' : 'attach';\n      this.width = newSize.width;\n      this.height = newSize.height;\n      this._aspectRatio = this.aspectRatio;\n      if (!retinaScale(this, newRatio, true)) {\n        return;\n      }\n      this.notifyPlugins('resize', {\n        size: newSize\n      });\n      callback(options.onResize, [this, newSize], this);\n      if (this.attached) {\n        if (this._doResize(mode)) {\n          this.render();\n        }\n      }\n    }\n  }, {\n    key: \"ensureScalesHaveIDs\",\n    value: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      each(scalesOptions, function (axisOptions, axisID) {\n        axisOptions.id = axisID;\n      });\n    }\n  }, {\n    key: \"buildOrUpdateScales\",\n    value: function buildOrUpdateScales() {\n      var _this13 = this;\n      var options = this.options;\n      var scaleOpts = options.scales;\n      var scales = this.scales;\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n      var items = [];\n      if (scaleOpts) {\n        items = items.concat(Object.keys(scaleOpts).map(function (id) {\n          var scaleOptions = scaleOpts[id];\n          var axis = determineAxis(id, scaleOptions);\n          var isRadial = axis === 'r';\n          var isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        }));\n      }\n      each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var axis = determineAxis(id, scaleOptions);\n        var scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n        if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n        updated[id] = true;\n        var scale = null;\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n        } else {\n          var scaleClass = registry.getScale(scaleType);\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            ctx: _this13.ctx,\n            chart: _this13\n          });\n          scales[scale.id] = scale;\n        }\n        scale.init(scaleOptions, options);\n      });\n      each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      each(scales, function (scale) {\n        layouts.configure(_this13, scale, scale.options);\n        layouts.addBox(_this13, scale);\n      });\n    }\n  }, {\n    key: \"_updateMetasets\",\n    value: function _updateMetasets() {\n      var metasets = this._metasets;\n      var numData = this.data.datasets.length;\n      var numMeta = metasets.length;\n      metasets.sort(function (a, b) {\n        return a.index - b.index;\n      });\n      if (numMeta > numData) {\n        for (var i = numData; i < numMeta; ++i) {\n          this._destroyDatasetMeta(i);\n        }\n        metasets.splice(numData, numMeta - numData);\n      }\n      this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n  }, {\n    key: \"_removeUnreferencedMetasets\",\n    value: function _removeUnreferencedMetasets() {\n      var _this14 = this;\n      var metasets = this._metasets,\n        datasets = this.data.datasets;\n      if (metasets.length > datasets.length) {\n        delete this._stacks;\n      }\n      metasets.forEach(function (meta, index) {\n        if (datasets.filter(function (x) {\n          return x === meta._dataset;\n        }).length === 0) {\n          _this14._destroyDatasetMeta(index);\n        }\n      });\n    }\n  }, {\n    key: \"buildOrUpdateControllers\",\n    value: function buildOrUpdateControllers() {\n      var newControllers = [];\n      var datasets = this.data.datasets;\n      var i, ilen;\n      this._removeUnreferencedMetasets();\n      for (i = 0, ilen = datasets.length; i < ilen; i++) {\n        var dataset = datasets[i];\n        var meta = this.getDatasetMeta(i);\n        var type = dataset.type || this.config.type;\n        if (meta.type && meta.type !== type) {\n          this._destroyDatasetMeta(i);\n          meta = this.getDatasetMeta(i);\n        }\n        meta.type = type;\n        meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n        meta.order = dataset.order || 0;\n        meta.index = i;\n        meta.label = '' + dataset.label;\n        meta.visible = this.isDatasetVisible(i);\n        if (meta.controller) {\n          meta.controller.updateIndex(i);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = registry.getController(type);\n          var _defaults$datasets$ty = defaults.datasets[type],\n            datasetElementType = _defaults$datasets$ty.datasetElementType,\n            dataElementType = _defaults$datasets$ty.dataElementType;\n          Object.assign(ControllerClass, {\n            dataElementType: registry.getElement(dataElementType),\n            datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n          });\n          meta.controller = new ControllerClass(this, i);\n          newControllers.push(meta.controller);\n        }\n      }\n      this._updateMetasets();\n      return newControllers;\n    }\n  }, {\n    key: \"_resetElements\",\n    value: function _resetElements() {\n      var _this15 = this;\n      each(this.data.datasets, function (dataset, datasetIndex) {\n        _this15.getDatasetMeta(datasetIndex).controller.reset();\n      }, this);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._resetElements();\n      this.notifyPlugins('reset');\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var config = this.config;\n      config.update();\n      var options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n      var animsDisabled = this._animationsDisabled = !options.animation;\n      this._updateScales();\n      this._checkEventBindings();\n      this._updateHiddenIndices();\n      this._plugins.invalidate();\n      if (this.notifyPlugins('beforeUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var newControllers = this.buildOrUpdateControllers();\n      this.notifyPlugins('beforeElementsUpdate');\n      var minPadding = 0;\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n        var _this$getDatasetMeta = this.getDatasetMeta(i),\n          controller = _this$getDatasetMeta.controller;\n        var reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n        controller.buildOrUpdateElements(reset);\n        minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n      }\n      minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n      this._updateLayout(minPadding);\n      if (!animsDisabled) {\n        each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n      this._updateDatasets(mode);\n      this.notifyPlugins('afterUpdate', {\n        mode: mode\n      });\n      this._layers.sort(compare2Level('z', '_idx'));\n      var _active = this._active,\n        _lastEvent = this._lastEvent;\n      if (_lastEvent) {\n        this._eventHandler(_lastEvent, true);\n      } else if (_active.length) {\n        this._updateHoverStyles(_active, _active, true);\n      }\n      this.render();\n    }\n  }, {\n    key: \"_updateScales\",\n    value: function _updateScales() {\n      var _this16 = this;\n      each(this.scales, function (scale) {\n        layouts.removeBox(_this16, scale);\n      });\n      this.ensureScalesHaveIDs();\n      this.buildOrUpdateScales();\n    }\n  }, {\n    key: \"_checkEventBindings\",\n    value: function _checkEventBindings() {\n      var options = this.options;\n      var existingEvents = new Set(Object.keys(this._listeners));\n      var newEvents = new Set(options.events);\n      if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n        this.unbindEvents();\n        this.bindEvents();\n      }\n    }\n  }, {\n    key: \"_updateHiddenIndices\",\n    value: function _updateHiddenIndices() {\n      var _hiddenIndices = this._hiddenIndices;\n      var changes = this._getUniformDataChanges() || [];\n      var _iterator15 = _createForOfIteratorHelper(changes),\n        _step15;\n      try {\n        for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n          var _step15$value = _step15.value,\n            method = _step15$value.method,\n            start = _step15$value.start,\n            count = _step15$value.count;\n          var move = method === '_removeElements' ? -count : count;\n          moveNumericKeys(_hiddenIndices, start, move);\n        }\n      } catch (err) {\n        _iterator15.e(err);\n      } finally {\n        _iterator15.f();\n      }\n    }\n  }, {\n    key: \"_getUniformDataChanges\",\n    value: function _getUniformDataChanges() {\n      var _dataChanges = this._dataChanges;\n      if (!_dataChanges || !_dataChanges.length) {\n        return;\n      }\n      this._dataChanges = [];\n      var datasetCount = this.data.datasets.length;\n      var makeSet = function makeSet(idx) {\n        return new Set(_dataChanges.filter(function (c) {\n          return c[0] === idx;\n        }).map(function (c, i) {\n          return i + ',' + c.splice(1).join(',');\n        }));\n      };\n      var changeSet = makeSet(0);\n      for (var i = 1; i < datasetCount; i++) {\n        if (!setsEqual(changeSet, makeSet(i))) {\n          return;\n        }\n      }\n      return Array.from(changeSet).map(function (c) {\n        return c.split(',');\n      }).map(function (a) {\n        return {\n          method: a[1],\n          start: +a[2],\n          count: +a[3]\n        };\n      });\n    }\n  }, {\n    key: \"_updateLayout\",\n    value: function _updateLayout(minPadding) {\n      var _this17 = this;\n      if (this.notifyPlugins('beforeLayout', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      layouts.update(this, this.width, this.height, minPadding);\n      var area = this.chartArea;\n      var noArea = area.width <= 0 || area.height <= 0;\n      this._layers = [];\n      each(this.boxes, function (box) {\n        var _this17$_layers;\n        if (noArea && box.position === 'chartArea') {\n          return;\n        }\n        if (box.configure) {\n          box.configure();\n        }\n        (_this17$_layers = _this17._layers).push.apply(_this17$_layers, _toConsumableArray(box._layers()));\n      }, this);\n      this._layers.forEach(function (item, index) {\n        item._idx = index;\n      });\n      this.notifyPlugins('afterLayout');\n    }\n  }, {\n    key: \"_updateDatasets\",\n    value: function _updateDatasets(mode) {\n      if (this.notifyPlugins('beforeDatasetsUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this.getDatasetMeta(i).controller.configure();\n      }\n      for (var i1 = 0, ilen1 = this.data.datasets.length; i1 < ilen1; ++i1) {\n        this._updateDataset(i1, isFunction(mode) ? mode({\n          datasetIndex: i1\n        }) : mode);\n      }\n      this.notifyPlugins('afterDatasetsUpdate', {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"_updateDataset\",\n    value: function _updateDataset(index, mode) {\n      var meta = this.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        mode: mode,\n        cancelable: true\n      };\n      if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n        return;\n      }\n      meta.controller._update(mode);\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetUpdate', args);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.notifyPlugins('beforeRender', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      if (animator.has(this)) {\n        if (this.attached && !animator.running(this)) {\n          animator.start(this);\n        }\n      } else {\n        this.draw();\n        onAnimationsComplete({\n          chart: this\n        });\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var i;\n      if (this._resizeBeforeDraw) {\n        var _this$_resizeBeforeDr = this._resizeBeforeDraw,\n          width = _this$_resizeBeforeDr.width,\n          height = _this$_resizeBeforeDr.height;\n        this._resize(width, height);\n        this._resizeBeforeDraw = null;\n      }\n      this.clear();\n      if (this.width <= 0 || this.height <= 0) {\n        return;\n      }\n      if (this.notifyPlugins('beforeDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var layers = this._layers;\n      for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n      this._drawDatasets();\n      for (; i < layers.length; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n      this.notifyPlugins('afterDraw');\n    }\n  }, {\n    key: \"_getSortedDatasetMetas\",\n    value: function _getSortedDatasetMetas(filterVisible) {\n      var metasets = this._sortedMetasets;\n      var result = [];\n      var i, ilen;\n      for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n        var meta = metasets[i];\n        if (!filterVisible || meta.visible) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"getSortedVisibleDatasetMetas\",\n    value: function getSortedVisibleDatasetMetas() {\n      return this._getSortedDatasetMetas(true);\n    }\n  }, {\n    key: \"_drawDatasets\",\n    value: function _drawDatasets() {\n      if (this.notifyPlugins('beforeDatasetsDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var metasets = this.getSortedVisibleDatasetMetas();\n      for (var i = metasets.length - 1; i >= 0; --i) {\n        this._drawDataset(metasets[i]);\n      }\n      this.notifyPlugins('afterDatasetsDraw');\n    }\n  }, {\n    key: \"_drawDataset\",\n    value: function _drawDataset(meta) {\n      var ctx = this.ctx;\n      var clip = meta._clip;\n      var useClip = !clip.disabled;\n      var area = getDatasetArea(meta) || this.chartArea;\n      var args = {\n        meta: meta,\n        index: meta.index,\n        cancelable: true\n      };\n      if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n        return;\n      }\n      if (useClip) {\n        clipArea(ctx, {\n          left: clip.left === false ? 0 : area.left - clip.left,\n          right: clip.right === false ? this.width : area.right + clip.right,\n          top: clip.top === false ? 0 : area.top - clip.top,\n          bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n        });\n      }\n      meta.controller.draw();\n      if (useClip) {\n        unclipArea(ctx);\n      }\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetDraw', args);\n    }\n  }, {\n    key: \"isPointInArea\",\n    value: function isPointInArea(point) {\n      return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n  }, {\n    key: \"getElementsAtEventForMode\",\n    value: function getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n      var method = Interaction.modes[mode];\n      if (typeof method === 'function') {\n        return method(this, e, options, useFinalPosition);\n      }\n      return [];\n    }\n  }, {\n    key: \"getDatasetMeta\",\n    value: function getDatasetMeta(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n      var metasets = this._metasets;\n      var meta = metasets.filter(function (x) {\n        return x && x._dataset === dataset;\n      }).pop();\n      if (!meta) {\n        meta = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          xAxisID: null,\n          yAxisID: null,\n          order: dataset && dataset.order || 0,\n          index: datasetIndex,\n          _dataset: dataset,\n          _parsed: [],\n          _sorted: false\n        };\n        metasets.push(meta);\n      }\n      return meta;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = createContext(null, {\n        chart: this,\n        type: 'chart'\n      }));\n    }\n  }, {\n    key: \"getVisibleDatasetCount\",\n    value: function getVisibleDatasetCount() {\n      return this.getSortedVisibleDatasetMetas().length;\n    }\n  }, {\n    key: \"isDatasetVisible\",\n    value: function isDatasetVisible(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n      if (!dataset) {\n        return false;\n      }\n      var meta = this.getDatasetMeta(datasetIndex);\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n  }, {\n    key: \"setDatasetVisibility\",\n    value: function setDatasetVisibility(datasetIndex, visible) {\n      var meta = this.getDatasetMeta(datasetIndex);\n      meta.hidden = !visible;\n    }\n  }, {\n    key: \"toggleDataVisibility\",\n    value: function toggleDataVisibility(index) {\n      this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"getDataVisibility\",\n    value: function getDataVisibility(index) {\n      return !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"_updateVisibility\",\n    value: function _updateVisibility(datasetIndex, dataIndex, visible) {\n      var mode = visible ? 'show' : 'hide';\n      var meta = this.getDatasetMeta(datasetIndex);\n      var anims = meta.controller._resolveAnimations(undefined, mode);\n      if (defined(dataIndex)) {\n        meta.data[dataIndex].hidden = !visible;\n        this.update();\n      } else {\n        this.setDatasetVisibility(datasetIndex, visible);\n        anims.update(meta, {\n          visible: visible\n        });\n        this.update(function (ctx) {\n          return ctx.datasetIndex === datasetIndex ? mode : undefined;\n        });\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n  }, {\n    key: \"show\",\n    value: function show(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n  }, {\n    key: \"_destroyDatasetMeta\",\n    value: function _destroyDatasetMeta(datasetIndex) {\n      var meta = this._metasets[datasetIndex];\n      if (meta && meta.controller) {\n        meta.controller._destroy();\n      }\n      delete this._metasets[datasetIndex];\n    }\n  }, {\n    key: \"_stop\",\n    value: function _stop() {\n      var i, ilen;\n      this.stop();\n      animator.remove(this);\n      for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.notifyPlugins('beforeDestroy');\n      var canvas = this.canvas,\n        ctx = this.ctx;\n      this._stop();\n      this.config.clearCache();\n      if (canvas) {\n        this.unbindEvents();\n        clearCanvas(canvas, ctx);\n        this.platform.releaseContext(ctx);\n        this.canvas = null;\n        this.ctx = null;\n      }\n      delete instances[this.id];\n      this.notifyPlugins('afterDestroy');\n    }\n  }, {\n    key: \"toBase64Image\",\n    value: function toBase64Image() {\n      var _this$canvas;\n      return (_this$canvas = this.canvas).toDataURL.apply(_this$canvas, arguments);\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      this.bindUserEvents();\n      if (this.options.responsive) {\n        this.bindResponsiveEvents();\n      } else {\n        this.attached = true;\n      }\n    }\n  }, {\n    key: \"bindUserEvents\",\n    value: function bindUserEvents() {\n      var _this18 = this;\n      var listeners = this._listeners;\n      var platform = this.platform;\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this18, type, listener);\n        listeners[type] = listener;\n      };\n      var listener = function listener(e, x, y) {\n        e.offsetX = x;\n        e.offsetY = y;\n        _this18._eventHandler(e);\n      };\n      each(this.options.events, function (type) {\n        return _add(type, listener);\n      });\n    }\n  }, {\n    key: \"bindResponsiveEvents\",\n    value: function bindResponsiveEvents() {\n      var _this19 = this;\n      if (!this._responsiveListeners) {\n        this._responsiveListeners = {};\n      }\n      var listeners = this._responsiveListeners;\n      var platform = this.platform;\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this19, type, listener);\n        listeners[type] = listener;\n      };\n      var _remove = function _remove(type, listener) {\n        if (listeners[type]) {\n          platform.removeEventListener(_this19, type, listener);\n          delete listeners[type];\n        }\n      };\n      var listener = function listener(width, height) {\n        if (_this19.canvas) {\n          _this19.resize(width, height);\n        }\n      };\n      var detached;\n      var attached = function attached() {\n        _remove('attach', attached);\n        _this19.attached = true;\n        _this19.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = function detached() {\n        _this19.attached = false;\n        _remove('resize', listener);\n        _this19._stop();\n        _this19._resize(0, 0);\n        _add('attach', attached);\n      };\n      if (platform.isAttached(this.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      var _this20 = this;\n      each(this._listeners, function (listener, type) {\n        _this20.platform.removeEventListener(_this20, type, listener);\n      });\n      this._listeners = {};\n      each(this._responsiveListeners, function (listener, type) {\n        _this20.platform.removeEventListener(_this20, type, listener);\n      });\n      this._responsiveListeners = undefined;\n    }\n  }, {\n    key: \"updateHoverStyle\",\n    value: function updateHoverStyle(items, mode, enabled) {\n      var prefix = enabled ? 'set' : 'remove';\n      var meta, item, i, ilen;\n      if (mode === 'dataset') {\n        meta = this.getDatasetMeta(items[0].datasetIndex);\n        meta.controller['_' + prefix + 'DatasetHoverStyle']();\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        var controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n        if (controller) {\n          controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements) {\n      var _this21 = this;\n      var lastActive = this._active || [];\n      var active = activeElements.map(function (_ref4) {\n        var datasetIndex = _ref4.datasetIndex,\n          index = _ref4.index;\n        var meta = _this21.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('No dataset found at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(active, lastActive);\n      if (changed) {\n        this._active = active;\n        this._lastEvent = null;\n        this._updateHoverStyles(active, lastActive);\n      }\n    }\n  }, {\n    key: \"notifyPlugins\",\n    value: function notifyPlugins(hook, args, filter) {\n      return this._plugins.notify(this, hook, args, filter);\n    }\n  }, {\n    key: \"isPluginEnabled\",\n    value: function isPluginEnabled(pluginId) {\n      return this._plugins._cache.filter(function (p) {\n        return p.plugin.id === pluginId;\n      }).length === 1;\n    }\n  }, {\n    key: \"_updateHoverStyles\",\n    value: function _updateHoverStyles(active, lastActive, replay) {\n      var hoverOptions = this.options.hover;\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.datasetIndex === y.datasetIndex && x.index === y.index;\n          });\n        });\n      };\n      var deactivated = diff(lastActive, active);\n      var activated = replay ? active : diff(active, lastActive);\n      if (deactivated.length) {\n        this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n      }\n      if (activated.length && hoverOptions.mode) {\n        this.updateHoverStyle(activated, hoverOptions.mode, true);\n      }\n    }\n  }, {\n    key: \"_eventHandler\",\n    value: function _eventHandler(e, replay) {\n      var _this22 = this;\n      var args = {\n        event: e,\n        replay: replay,\n        cancelable: true,\n        inChartArea: this.isPointInArea(e)\n      };\n      var eventFilter = function eventFilter(plugin) {\n        return (plugin.options.events || _this22.options.events).includes(e.native.type);\n      };\n      if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n        return;\n      }\n      var changed = this._handleEvent(e, replay, args.inChartArea);\n      args.cancelable = false;\n      this.notifyPlugins('afterEvent', args, eventFilter);\n      if (changed || args.changed) {\n        this.render();\n      }\n      return this;\n    }\n  }, {\n    key: \"_handleEvent\",\n    value: function _handleEvent(e, replay, inChartArea) {\n      var _this$_active = this._active,\n        lastActive = _this$_active === void 0 ? [] : _this$_active,\n        options = this.options;\n      var useFinalPosition = replay;\n      var active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n      var isClick = _isClickEvent(e);\n      var lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n      if (inChartArea) {\n        this._lastEvent = null;\n        callback(options.onHover, [e, active, this], this);\n        if (isClick) {\n          callback(options.onClick, [e, active, this], this);\n        }\n      }\n      var changed = !_elementsEqual(active, lastActive);\n      if (changed || replay) {\n        this._active = active;\n        this._updateHoverStyles(active, lastActive, replay);\n      }\n      this._lastEvent = lastEvent;\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n      if (e.type === 'mouseout') {\n        return [];\n      }\n      if (!inChartArea) {\n        return lastActive;\n      }\n      var hoverOptions = this.options.hover;\n      return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n  }], [{\n    key: \"register\",\n    value: function register() {\n      registry.add.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister() {\n      registry.remove.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  }]);\n  return Chart;\n}();\n_defineProperty(Chart, \"defaults\", defaults);\n_defineProperty(Chart, \"instances\", instances);\n_defineProperty(Chart, \"overrides\", overrides);\n_defineProperty(Chart, \"registry\", registry);\n_defineProperty(Chart, \"version\", version);\n_defineProperty(Chart, \"getChart\", getChart);\nfunction invalidatePlugins() {\n  return each(Chart.instances, function (chart) {\n    return chart._plugins.invalidate();\n  });\n}\nfunction clipArc(ctx, element, endAngle) {\n  var startAngle = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    x = element.x,\n    y = element.y,\n    outerRadius = element.outerRadius,\n    innerRadius = element.innerRadius;\n  var angleMargin = pixelMargin / outerRadius;\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  var o = toRadiusCorners(arc.options.borderRadius);\n  var halfThickness = (outerRadius - innerRadius) / 2;\n  var innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  var computeOuterLimit = function computeOuterLimit(val) {\n    var outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  var x = element.x,\n    y = element.y,\n    start = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    innerR = element.innerRadius;\n  var outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  var innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  var spacingOffset = 0;\n  var alpha = end - start;\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    var noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    var noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    var avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    var adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  var beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  var angleOffset = (alpha - beta) / 2;\n  var startAngle = start + angleOffset + spacingOffset;\n  var endAngle = end - angleOffset - spacingOffset;\n  var _parseBorderRadius$ = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle),\n    outerStart = _parseBorderRadius$.outerStart,\n    outerEnd = _parseBorderRadius$.outerEnd,\n    innerStart = _parseBorderRadius$.innerStart,\n    innerEnd = _parseBorderRadius$.innerEnd;\n  var outerStartAdjustedRadius = outerRadius - outerStart;\n  var outerEndAdjustedRadius = outerRadius - outerEnd;\n  var outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  var outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  var innerStartAdjustedRadius = innerRadius + innerStart;\n  var innerEndAdjustedRadius = innerRadius + innerEnd;\n  var innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  var innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    var outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      var pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    // The line from point 3 to point 4\n    var p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      var pCenter1 = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter1.x, pCenter1.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    // The inner arc from point 5 to point b to point 6\n    var innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      var pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter2.x, pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    // The line from point 7 to point 8\n    var p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      var pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter3.x, pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    var outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    var outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    var outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    var outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  var fullCircles = element.fullCircles,\n    startAngle = element.startAngle,\n    circumference = element.circumference;\n  var endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (var i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n  var fullCircles = element.fullCircles,\n    startAngle = element.startAngle,\n    circumference = element.circumference,\n    options = element.options;\n  var borderWidth = options.borderWidth,\n    borderJoinStyle = options.borderJoinStyle;\n  var inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  var endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (var i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\nvar ArcElement = /*#__PURE__*/function (_Element2) {\n  _inherits(ArcElement, _Element2);\n  var _super12 = _createSuper(ArcElement);\n  function ArcElement(cfg) {\n    var _this23;\n    _classCallCheck(this, ArcElement);\n    _this23 = _super12.call(this);\n    _this23.options = undefined;\n    _this23.circumference = undefined;\n    _this23.startAngle = undefined;\n    _this23.endAngle = undefined;\n    _this23.innerRadius = undefined;\n    _this23.outerRadius = undefined;\n    _this23.pixelMargin = 0;\n    _this23.fullCircles = 0;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this23), cfg);\n    }\n    return _this23;\n  }\n  _createClass(ArcElement, [{\n    key: \"inRange\",\n    value: function inRange(chartX, chartY, useFinalPosition) {\n      var point = this.getProps(['x', 'y'], useFinalPosition);\n      var _getAngleFromPoint2 = getAngleFromPoint(point, {\n          x: chartX,\n          y: chartY\n        }),\n        angle = _getAngleFromPoint2.angle,\n        distance = _getAngleFromPoint2.distance;\n      var _this$getProps2 = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n        startAngle = _this$getProps2.startAngle,\n        endAngle = _this$getProps2.endAngle,\n        innerRadius = _this$getProps2.innerRadius,\n        outerRadius = _this$getProps2.outerRadius,\n        circumference = _this$getProps2.circumference;\n      var rAdjust = this.options.spacing / 2;\n      var _circumference = valueOrDefault(circumference, endAngle - startAngle);\n      var betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n      var withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n      return betweenAngles && withinRadius;\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps3 = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius'], useFinalPosition),\n        x = _this$getProps3.x,\n        y = _this$getProps3.y,\n        startAngle = _this$getProps3.startAngle,\n        endAngle = _this$getProps3.endAngle,\n        innerRadius = _this$getProps3.innerRadius,\n        outerRadius = _this$getProps3.outerRadius;\n      var _this$options13 = this.options,\n        offset = _this$options13.offset,\n        spacing = _this$options13.spacing;\n      var halfAngle = (startAngle + endAngle) / 2;\n      var halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n      return {\n        x: x + Math.cos(halfAngle) * halfRadius,\n        y: y + Math.sin(halfAngle) * halfRadius\n      };\n    }\n  }, {\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      return this.getCenterPoint(useFinalPosition);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options,\n        circumference = this.circumference;\n      var offset = (options.offset || 0) / 4;\n      var spacing = (options.spacing || 0) / 2;\n      var circular = options.circular;\n      this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n      this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n      if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n        return;\n      }\n      ctx.save();\n      var halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n      var fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n      var radiusOffset = offset * fix;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      drawArc(ctx, this, radiusOffset, spacing, circular);\n      drawBorder(ctx, this, radiusOffset, spacing, circular);\n      ctx.restore();\n    }\n  }]);\n  return ArcElement;\n}(Element);\n_defineProperty(ArcElement, \"id\", 'arc');\n_defineProperty(ArcElement, \"defaults\", {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true\n});\n_defineProperty(ArcElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor'\n});\nfunction setStyle(ctx, options) {\n  var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var count = points.length;\n  var _params$start = params.start,\n    paramsStart = _params$start === void 0 ? 0 : _params$start,\n    _params$end = params.end,\n    paramsEnd = _params$end === void 0 ? count - 1 : _params$end;\n  var segmentStart = segment.start,\n    segmentEnd = segment.end;\n  var start = Math.max(paramsStart, segmentStart);\n  var end = Math.min(paramsEnd, segmentEnd);\n  var outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count: count,\n    start: start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  var points = line.points,\n    options = line.options;\n  var _pathVars = pathVars(points, segment, params),\n    count = _pathVars.count,\n    start = _pathVars.start,\n    loop = _pathVars.loop,\n    ilen = _pathVars.ilen;\n  var lineMethod = getLineMethod(options);\n  var _ref5 = params || {},\n    _ref5$move = _ref5.move,\n    move = _ref5$move === void 0 ? true : _ref5$move,\n    reverse = _ref5.reverse;\n  var i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  var points = line.points;\n  var _pathVars2 = pathVars(points, segment, params),\n    count = _pathVars2.count,\n    start = _pathVars2.start,\n    ilen = _pathVars2.ilen;\n  var _ref6 = params || {},\n    _ref6$move = _ref6.move,\n    move = _ref6$move === void 0 ? true : _ref6$move,\n    reverse = _ref6.reverse;\n  var avgX = 0;\n  var countX = 0;\n  var i, point, prevX, minY, maxY, lastY;\n  var pointIndex = function pointIndex(index) {\n    return (start + (reverse ? ilen - index : index)) % count;\n  };\n  var drawX = function drawX() {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    var x = point.x;\n    var y = point.y;\n    var truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  var opts = line.options;\n  var borderDash = opts.borderDash && opts.borderDash.length;\n  var useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  var path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  var segments = line.segments,\n    options = line.options;\n  var segmentMethod = _getSegmentMethod(line);\n  var _iterator16 = _createForOfIteratorHelper(segments),\n    _step16;\n  try {\n    for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n      var segment = _step16.value;\n      setStyle(ctx, options, segment.style);\n      ctx.beginPath();\n      if (segmentMethod(ctx, line, segment, {\n        start: start,\n        end: start + count - 1\n      })) {\n        ctx.closePath();\n      }\n      ctx.stroke();\n    }\n  } catch (err) {\n    _iterator16.e(err);\n  } finally {\n    _iterator16.f();\n  }\n}\nvar usePath2D = typeof Path2D === 'function';\nfunction _draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nvar LineElement = /*#__PURE__*/function (_Element3) {\n  _inherits(LineElement, _Element3);\n  var _super13 = _createSuper(LineElement);\n  function LineElement(cfg) {\n    var _this24;\n    _classCallCheck(this, LineElement);\n    _this24 = _super13.call(this);\n    _this24.animated = true;\n    _this24.options = undefined;\n    _this24._chart = undefined;\n    _this24._loop = undefined;\n    _this24._fullLoop = undefined;\n    _this24._path = undefined;\n    _this24._points = undefined;\n    _this24._segments = undefined;\n    _this24._decimated = false;\n    _this24._pointsUpdated = false;\n    _this24._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this24), cfg);\n    }\n    return _this24;\n  }\n  _createClass(LineElement, [{\n    key: \"updateControlPoints\",\n    value: function updateControlPoints(chartArea, indexAxis) {\n      var options = this.options;\n      if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n        var loop = options.spanGaps ? this._loop : this._fullLoop;\n        _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n        this._pointsUpdated = true;\n      }\n    }\n  }, {\n    key: \"points\",\n    get: function get() {\n      return this._points;\n    },\n    set: function set(points) {\n      this._points = points;\n      delete this._segments;\n      delete this._path;\n      this._pointsUpdated = false;\n    }\n  }, {\n    key: \"segments\",\n    get: function get() {\n      return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      var segments = this.segments;\n      var points = this.points;\n      return segments.length && points[segments[0].start];\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      var segments = this.segments;\n      var points = this.points;\n      var count = segments.length;\n      return count && points[segments[count - 1].end];\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point, property) {\n      var options = this.options;\n      var value = point[property];\n      var points = this.points;\n      var segments = _boundSegments(this, {\n        property: property,\n        start: value,\n        end: value\n      });\n      if (!segments.length) {\n        return;\n      }\n      var result = [];\n      var _interpolate = _getInterpolationMethod(options);\n      var i, ilen;\n      for (i = 0, ilen = segments.length; i < ilen; ++i) {\n        var _segments$i = segments[i],\n          start = _segments$i.start,\n          end = _segments$i.end;\n        var p1 = points[start];\n        var p2 = points[end];\n        if (p1 === p2) {\n          result.push(p1);\n          continue;\n        }\n        var t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n        var interpolated = _interpolate(p1, p2, t, options.stepped);\n        interpolated[property] = point[property];\n        result.push(interpolated);\n      }\n      return result.length === 1 ? result[0] : result;\n    }\n  }, {\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, segment, params) {\n      var segmentMethod = _getSegmentMethod(this);\n      return segmentMethod(ctx, this, segment, params);\n    }\n  }, {\n    key: \"path\",\n    value: function path(ctx, start, count) {\n      var segments = this.segments;\n      var segmentMethod = _getSegmentMethod(this);\n      var loop = this._loop;\n      start = start || 0;\n      count = count || this.points.length - start;\n      var _iterator17 = _createForOfIteratorHelper(segments),\n        _step17;\n      try {\n        for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n          var segment = _step17.value;\n          loop &= segmentMethod(ctx, this, segment, {\n            start: start,\n            end: start + count - 1\n          });\n        }\n      } catch (err) {\n        _iterator17.e(err);\n      } finally {\n        _iterator17.f();\n      }\n      return !!loop;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, chartArea, start, count) {\n      var options = this.options || {};\n      var points = this.points || [];\n      if (points.length && options.borderWidth) {\n        ctx.save();\n        _draw(ctx, this, start, count);\n        ctx.restore();\n      }\n      if (this.animated) {\n        this._pointsUpdated = false;\n        this._path = undefined;\n      }\n    }\n  }]);\n  return LineElement;\n}(Element);\n_defineProperty(LineElement, \"id\", 'line');\n_defineProperty(LineElement, \"defaults\", {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n});\n_defineProperty(LineElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n});\n_defineProperty(LineElement, \"descriptors\", {\n  _scriptable: true,\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'fill';\n  }\n});\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  var options = el.options;\n  var _el$getProps = el.getProps([axis], useFinalPosition),\n    value = _el$getProps[axis];\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nvar PointElement = /*#__PURE__*/function (_Element4) {\n  _inherits(PointElement, _Element4);\n  var _super14 = _createSuper(PointElement);\n  /**\n  * @type {any}\n  */\n\n  /**\n  * @type {any}\n  */\n\n  function PointElement(cfg) {\n    var _this25;\n    _classCallCheck(this, PointElement);\n    _this25 = _super14.call(this);\n    _this25.options = undefined;\n    _this25.parsed = undefined;\n    _this25.skip = undefined;\n    _this25.stop = undefined;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this25), cfg);\n    }\n    return _this25;\n  }\n  _createClass(PointElement, [{\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      var options = this.options;\n      var _this$getProps4 = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps4.x,\n        y = _this$getProps4.y;\n      return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps5 = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps5.x,\n        y = _this$getProps5.y;\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"size\",\n    value: function size(options) {\n      options = options || this.options || {};\n      var radius = options.radius || 0;\n      radius = Math.max(radius, radius && options.hoverRadius || 0);\n      var borderWidth = radius && options.borderWidth || 0;\n      return (radius + borderWidth) * 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, area) {\n      var options = this.options;\n      if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n        return;\n      }\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.fillStyle = options.backgroundColor;\n      drawPoint(ctx, options, this.x, this.y);\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      var options = this.options || {};\n      // @ts-expect-error Fallbacks should never be hit in practice\n      return options.radius + options.hitRadius;\n    }\n  }]);\n  return PointElement;\n}(Element);\n_defineProperty(PointElement, \"id\", 'point');\n_defineProperty(PointElement, \"defaults\", {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n});\n_defineProperty(PointElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n});\nfunction getBarBounds(bar, useFinalPosition) {\n  var _bar$getProps = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition),\n    x = _bar$getProps.x,\n    y = _bar$getProps.y,\n    base = _bar$getProps.base,\n    width = _bar$getProps.width,\n    height = _bar$getProps.height;\n  var left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom\n  };\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  var value = bar.options.borderWidth;\n  var skip = bar.borderSkipped;\n  var o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  var _bar$getProps2 = bar.getProps(['enableBorderRadius']),\n    enableBorderRadius = _bar$getProps2.enableBorderRadius;\n  var value = bar.options.borderRadius;\n  var o = toTRBLCorners(value);\n  var maxR = Math.min(maxW, maxH);\n  var skip = bar.borderSkipped;\n  var enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  var bounds = getBarBounds(bar);\n  var width = bounds.right - bounds.left;\n  var height = bounds.bottom - bounds.top;\n  var border = parseBorderWidth(bar, width / 2, height / 2);\n  var radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius: radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\nfunction _inRange(bar, x, y, useFinalPosition) {\n  var skipX = x === null;\n  var skipY = y === null;\n  var skipBoth = skipX && skipY;\n  var bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount) {\n  var refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var x = rect.x !== refRect.x ? -amount : 0;\n  var y = rect.y !== refRect.y ? -amount : 0;\n  var w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  var h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nvar BarElement = /*#__PURE__*/function (_Element5) {\n  _inherits(BarElement, _Element5);\n  var _super15 = _createSuper(BarElement);\n  function BarElement(cfg) {\n    var _this26;\n    _classCallCheck(this, BarElement);\n    _this26 = _super15.call(this);\n    _this26.options = undefined;\n    _this26.horizontal = undefined;\n    _this26.base = undefined;\n    _this26.width = undefined;\n    _this26.height = undefined;\n    _this26.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this26), cfg);\n    }\n    return _this26;\n  }\n  _createClass(BarElement, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      var inflateAmount = this.inflateAmount,\n        _this$options14 = this.options,\n        borderColor = _this$options14.borderColor,\n        backgroundColor = _this$options14.backgroundColor;\n      var _boundingRects = boundingRects(this),\n        inner = _boundingRects.inner,\n        outer = _boundingRects.outer;\n      var addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n      ctx.save();\n      if (outer.w !== inner.w || outer.h !== inner.h) {\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n        ctx.clip();\n        addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n        ctx.fillStyle = borderColor;\n        ctx.fill('evenodd');\n      }\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(inner, inflateAmount));\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }, {\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      return _inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return _inRange(this, mouseX, null, useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return _inRange(this, null, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps6 = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition),\n        x = _this$getProps6.x,\n        y = _this$getProps6.y,\n        base = _this$getProps6.base,\n        horizontal = _this$getProps6.horizontal;\n      return {\n        x: horizontal ? (x + base) / 2 : x,\n        y: horizontal ? y : (y + base) / 2\n      };\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange(axis) {\n      return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n  }]);\n  return BarElement;\n}(Element);\n_defineProperty(BarElement, \"id\", 'bar');\n_defineProperty(BarElement, \"defaults\", {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n});\n_defineProperty(BarElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n});\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\nvar BORDER_COLORS = ['rgb(54, 162, 235)', 'rgb(255, 99, 132)', 'rgb(255, 159, 64)', 'rgb(255, 205, 86)', 'rgb(75, 192, 192)', 'rgb(153, 102, 255)', 'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nvar BACKGROUND_COLORS = /* #__PURE__ */BORDER_COLORS.map(function (color) {\n  return color.replace('rgb(', 'rgba(').replace(')', ', 0.5)');\n});\nfunction getBorderColor(i) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n  return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n  dataset.backgroundColor = dataset.data.map(function () {\n    return getBorderColor(i++);\n  });\n  return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n  dataset.backgroundColor = dataset.data.map(function () {\n    return getBackgroundColor(i++);\n  });\n  return i;\n}\nfunction getColorizer(chart) {\n  var i = 0;\n  return function (dataset, datasetIndex) {\n    var controller = chart.getDatasetMeta(datasetIndex).controller;\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\nfunction containsColorsDefinitions(descriptors) {\n  var k;\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction containsColorsDefinition(descriptor) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n  id: 'colors',\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  },\n  beforeLayout: function beforeLayout(chart, _args, options) {\n    if (!options.enabled) {\n      return;\n    }\n    var _chart$config = chart.config,\n      datasets = _chart$config.data.datasets,\n      chartOptions = _chart$config.options;\n    var elements = chartOptions.elements;\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n      return;\n    }\n    var colorizer = getColorizer(chart);\n    datasets.forEach(colorizer);\n  }\n};\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  var samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  var decimated = [];\n  var bucketWidth = (count - 2) / (samples - 2);\n  var sampledIndex = 0;\n  var endIndex = start + count - 1;\n  var a = start;\n  var i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    var avgX = 0;\n    var avgY = 0;\n    var j = void 0;\n    var avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    var avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    var avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    var rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    var rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    var _data$a = data[a],\n      pointAx = _data$a.x,\n      pointAy = _data$a.y;\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  var avgX = 0;\n  var countX = 0;\n  var i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  var decimated = [];\n  var endIndex = start + count - 1;\n  var xMin = data[start].x;\n  var xMax = data[endIndex].x;\n  var dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    var truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      var lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        var intermediateIndex1 = Math.min(minIndex, maxIndex);\n        var intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex1]), {}, {\n            x: avgX\n          }));\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex2]), {}, {\n            x: avgX\n          }));\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    var data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data\n    });\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(function (dataset) {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  var pointCount = points.length;\n  var start = 0;\n  var count;\n  var iScale = meta.iScale;\n  var _iScale$getUserBounds = iScale.getUserBounds(),\n    min = _iScale$getUserBounds.min,\n    max = _iScale$getUserBounds.max,\n    minDefined = _iScale$getUserBounds.minDefined,\n    maxDefined = _iScale$getUserBounds.maxDefined;\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {\n    start: start,\n    count: count\n  };\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: function beforeElementsUpdate(chart, args, options) {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    var availableWidth = chart.width;\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      var _data = dataset._data,\n        indexAxis = dataset.indexAxis;\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      var xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      var _getStartAndCountOfVi3 = getStartAndCountOfVisiblePointsSimplified(meta, data),\n        start = _getStartAndCountOfVi3.start,\n        count = _getStartAndCountOfVi3.count;\n      var threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function get() {\n            return this._decimated;\n          },\n          set: function set(d) {\n            this._data = d;\n          }\n        });\n      }\n      var decimated;\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n        default:\n          throw new Error(\"Unsupported decimation algorithm '\".concat(options.algorithm, \"'\"));\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy: function destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\nfunction _segments(line, target, property) {\n  var segments = line.segments;\n  var points = line.points;\n  var tpoints = target.points;\n  var parts = [];\n  var _iterator18 = _createForOfIteratorHelper(segments),\n    _step18;\n  try {\n    for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n      var segment = _step18.value;\n      var start = segment.start,\n        end = segment.end;\n      end = _findSegmentEnd(start, end, points);\n      var bounds = _getBounds(property, points[start], points[end], segment.loop);\n      if (!target.segments) {\n        parts.push({\n          source: segment,\n          target: bounds,\n          start: points[start],\n          end: points[end]\n        });\n        continue;\n      }\n      var targetSegments = _boundSegments(target, bounds);\n      var _iterator19 = _createForOfIteratorHelper(targetSegments),\n        _step19;\n      try {\n        for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n          var tgt = _step19.value;\n          var subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n          var fillSources = _boundSegment(segment, points, subBounds);\n          var _iterator20 = _createForOfIteratorHelper(fillSources),\n            _step20;\n          try {\n            for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n              var fillSource = _step20.value;\n              parts.push({\n                source: fillSource,\n                target: tgt,\n                start: _defineProperty({}, property, _getEdge(bounds, subBounds, 'start', Math.max)),\n                end: _defineProperty({}, property, _getEdge(bounds, subBounds, 'end', Math.min))\n              });\n            }\n          } catch (err) {\n            _iterator20.e(err);\n          } finally {\n            _iterator20.f();\n          }\n        }\n      } catch (err) {\n        _iterator19.e(err);\n      } finally {\n        _iterator19.f();\n      }\n    }\n  } catch (err) {\n    _iterator18.e(err);\n  } finally {\n    _iterator18.f();\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  var start = first[property];\n  var end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {\n    property: property,\n    start: start,\n    end: end\n  };\n}\nfunction _pointsFromSegments(boundary, line) {\n  var _ref7 = boundary || {},\n    _ref7$x = _ref7.x,\n    x = _ref7$x === void 0 ? null : _ref7$x,\n    _ref7$y = _ref7.y,\n    y = _ref7$y === void 0 ? null : _ref7$y;\n  var linePoints = line.points;\n  var points = [];\n  line.segments.forEach(function (_ref8) {\n    var start = _ref8.start,\n      end = _ref8.end;\n    end = _findSegmentEnd(start, end, linePoints);\n    var first = linePoints[start];\n    var last = linePoints[end];\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y: y\n      });\n      points.push({\n        x: last.x,\n        y: y\n      });\n    } else if (x !== null) {\n      points.push({\n        x: x,\n        y: first.y\n      });\n      points.push({\n        x: x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    var point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _createBoundaryLine(boundary, line) {\n  var points = [];\n  var _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points: points,\n    options: {\n      tension: 0\n    },\n    _loop: _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\nfunction _resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  var fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  var target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  var pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  var value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  var options = line.options;\n  var fillOption = options.fill;\n  var fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction _buildStackLine(source) {\n  var scale = source.scale,\n    index = source.index,\n    line = source.line;\n  var points = [];\n  var segments = line.segments;\n  var sourcePoints = line.points;\n  var linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    for (var j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({\n    points: points,\n    options: {}\n  });\n}\nfunction getLinesBelow(scale, index) {\n  var below = [];\n  var metas = scale.getMatchingVisibleMetas('line');\n  for (var i = 0; i < metas.length; i++) {\n    var meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  var postponed = [];\n  for (var j = 0; j < linesBelow.length; j++) {\n    var line = linesBelow[j];\n    var _findPoint = findPoint(line, sourcePoint, 'x'),\n      first = _findPoint.first,\n      last = _findPoint.last,\n      point = _findPoint.point;\n    if (!point || first && last) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push.apply(points, postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  var point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  var pointValue = point[property];\n  var segments = line.segments;\n  var linePoints = line.points;\n  var first = false;\n  var last = false;\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    var firstValue = linePoints[segment.start][property];\n    var lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {\n    first: first,\n    last: last,\n    point: point\n  };\n}\nvar simpleArc = /*#__PURE__*/function () {\n  function simpleArc(opts) {\n    _classCallCheck(this, simpleArc);\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  _createClass(simpleArc, [{\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, bounds, opts) {\n      var x = this.x,\n        y = this.y,\n        radius = this.radius;\n      bounds = bounds || {\n        start: 0,\n        end: TAU\n      };\n      ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n      return !opts.bounds;\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point) {\n      var x = this.x,\n        y = this.y,\n        radius = this.radius;\n      var angle = point.angle;\n      return {\n        x: x + Math.cos(angle) * radius,\n        y: y + Math.sin(angle) * radius,\n        angle: angle\n      };\n    }\n  }]);\n  return simpleArc;\n}();\nfunction _getTarget(source) {\n  var chart = source.chart,\n    fill = source.fill,\n    line = source.line;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  var boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  var meta = chart.getDatasetMeta(index);\n  var visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  var scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  var _source$scale = source.scale,\n    scale = _source$scale === void 0 ? {} : _source$scale,\n    fill = source.fill;\n  var pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    var horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  var scale = source.scale,\n    fill = source.fill;\n  var options = scale.options;\n  var length = scale.getLabels().length;\n  var start = options.reverse ? scale.max : scale.min;\n  var value = _getTargetValue(fill, scale, start);\n  var target = [];\n  if (options.grid.circular) {\n    var center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (var i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction _drawfill(ctx, source, area) {\n  var target = _getTarget(source);\n  var line = source.line,\n    scale = source.scale,\n    axis = source.axis;\n  var lineOpts = line.options;\n  var fillOption = lineOpts.fill;\n  var color = lineOpts.backgroundColor;\n  var _ref9 = fillOption || {},\n    _ref9$above = _ref9.above,\n    above = _ref9$above === void 0 ? color : _ref9$above,\n    _ref9$below = _ref9.below,\n    below = _ref9$below === void 0 ? color : _ref9$below;\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line: line,\n      target: target,\n      above: above,\n      below: below,\n      area: area,\n      scale: scale,\n      axis: axis\n    });\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  var line = cfg.line,\n    target = cfg.target,\n    above = cfg.above,\n    below = cfg.below,\n    area = cfg.area,\n    scale = cfg.scale;\n  var property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {\n      line: line,\n      target: target,\n      color: above,\n      scale: scale,\n      property: property\n    });\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {\n    line: line,\n    target: target,\n    color: below,\n    scale: scale,\n    property: property\n  });\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  var segments = target.segments,\n    points = target.points;\n  var first = true;\n  var lineLoop = false;\n  ctx.beginPath();\n  var _iterator21 = _createForOfIteratorHelper(segments),\n    _step21;\n  try {\n    for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n      var segment = _step21.value;\n      var start = segment.start,\n        end = segment.end;\n      var firstPoint = points[start];\n      var lastPoint = points[_findSegmentEnd(start, end, points)];\n      if (first) {\n        ctx.moveTo(firstPoint.x, firstPoint.y);\n        first = false;\n      } else {\n        ctx.lineTo(firstPoint.x, clipY);\n        ctx.lineTo(firstPoint.x, firstPoint.y);\n      }\n      lineLoop = !!target.pathSegment(ctx, segment, {\n        move: lineLoop\n      });\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        ctx.lineTo(lastPoint.x, clipY);\n      }\n    }\n  } catch (err) {\n    _iterator21.e(err);\n  } finally {\n    _iterator21.f();\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  var line = cfg.line,\n    target = cfg.target,\n    property = cfg.property,\n    color = cfg.color,\n    scale = cfg.scale;\n  var segments = _segments(line, target, property);\n  var _iterator22 = _createForOfIteratorHelper(segments),\n    _step22;\n  try {\n    for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n      var _step22$value = _step22.value,\n        src = _step22$value.source,\n        tgt = _step22$value.target,\n        start = _step22$value.start,\n        end = _step22$value.end;\n      var _src$style = src.style,\n        _src$style2 = _src$style === void 0 ? {} : _src$style,\n        _src$style2$backgroun = _src$style2.backgroundColor,\n        backgroundColor = _src$style2$backgroun === void 0 ? color : _src$style2$backgroun;\n      var notShape = target !== true;\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n      ctx.beginPath();\n      var lineLoop = !!line.pathSegment(ctx, src);\n      var loop = void 0;\n      if (notShape) {\n        if (lineLoop) {\n          ctx.closePath();\n        } else {\n          interpolatedLineTo(ctx, target, end, property);\n        }\n        var targetLoop = !!target.pathSegment(ctx, tgt, {\n          move: lineLoop,\n          reverse: true\n        });\n        loop = lineLoop && targetLoop;\n        if (!loop) {\n          interpolatedLineTo(ctx, target, start, property);\n        }\n      }\n      ctx.closePath();\n      ctx.fill(loop ? 'evenodd' : 'nonzero');\n      ctx.restore();\n    }\n  } catch (err) {\n    _iterator22.e(err);\n  } finally {\n    _iterator22.f();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  var _scale$chart$chartAre = scale.chart.chartArea,\n    top = _scale$chart$chartAre.top,\n    bottom = _scale$chart$chartAre.bottom;\n  var _ref10 = bounds || {},\n    property = _ref10.property,\n    start = _ref10.start,\n    end = _ref10.end;\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  var interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, _args, options) {\n    var count = (chart.data.datasets || []).length;\n    var sources = [];\n    var meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart: chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line: line\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw: function beforeDraw(chart, _args, options) {\n    var draw = options.drawTime === 'beforeDraw';\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    var area = chart.chartArea;\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw: function beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args, options) {\n    var source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\nvar getBoxSize = function getBoxSize(labelOpts, fontSize) {\n  var _labelOpts$boxHeight = labelOpts.boxHeight,\n    boxHeight = _labelOpts$boxHeight === void 0 ? fontSize : _labelOpts$boxHeight,\n    _labelOpts$boxWidth = labelOpts.boxWidth,\n    boxWidth = _labelOpts$boxWidth === void 0 ? fontSize : _labelOpts$boxWidth;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth: boxWidth,\n    boxHeight: boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nvar itemsEqual = function itemsEqual(a, b) {\n  return a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n};\nvar Legend = /*#__PURE__*/function (_Element6) {\n  _inherits(Legend, _Element6);\n  var _super16 = _createSuper(Legend);\n  function Legend(config) {\n    var _this27;\n    _classCallCheck(this, Legend);\n    _this27 = _super16.call(this);\n    _this27._added = false;\n    _this27.legendHitBoxes = [];\n    _this27._hoveredItem = null;\n    _this27.doughnutMode = false;\n    _this27.chart = config.chart;\n    _this27.options = config.options;\n    _this27.ctx = config.ctx;\n    _this27.legendItems = undefined;\n    _this27.columnSizes = undefined;\n    _this27.lineWidths = undefined;\n    _this27.maxHeight = undefined;\n    _this27.maxWidth = undefined;\n    _this27.top = undefined;\n    _this27.bottom = undefined;\n    _this27.left = undefined;\n    _this27.right = undefined;\n    _this27.height = undefined;\n    _this27.width = undefined;\n    _this27._margins = undefined;\n    _this27.position = undefined;\n    _this27.weight = undefined;\n    _this27.fullSize = undefined;\n    return _this27;\n  }\n  _createClass(Legend, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins;\n      this.setDimensions();\n      this.buildLabels();\n      this.fit();\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = this._margins.left;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = this._margins.top;\n        this.bottom = this.height;\n      }\n    }\n  }, {\n    key: \"buildLabels\",\n    value: function buildLabels() {\n      var _this28 = this;\n      var labelOpts = this.options.labels || {};\n      var legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, _this28.chart.data);\n        });\n      }\n      if (labelOpts.sort) {\n        legendItems = legendItems.sort(function (a, b) {\n          return labelOpts.sort(a, b, _this28.chart.data);\n        });\n      }\n      if (this.options.reverse) {\n        legendItems.reverse();\n      }\n      this.legendItems = legendItems;\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var options = this.options,\n        ctx = this.ctx;\n      if (!options.display) {\n        this.width = this.height = 0;\n        return;\n      }\n      var labelOpts = options.labels;\n      var labelFont = toFont(labelOpts.font);\n      var fontSize = labelFont.size;\n      var titleHeight = this._computeTitleHeight();\n      var _getBoxSize = getBoxSize(labelOpts, fontSize),\n        boxWidth = _getBoxSize.boxWidth,\n        itemHeight = _getBoxSize.itemHeight;\n      var width, height;\n      ctx.font = labelFont.string;\n      if (this.isHorizontal()) {\n        width = this.maxWidth;\n        height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      } else {\n        height = this.maxHeight;\n        width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n      }\n      this.width = Math.min(width, options.maxWidth || this.maxWidth);\n      this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n  }, {\n    key: \"_fitRows\",\n    value: function _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n      var ctx = this.ctx,\n        maxWidth = this.maxWidth,\n        padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var lineWidths = this.lineWidths = [0];\n      var lineHeight = itemHeight + padding;\n      var totalHeight = titleHeight;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      var row = -1;\n      var top = -lineHeight;\n      this.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n          totalHeight += lineHeight;\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n          top += lineHeight;\n          row++;\n        }\n        hitboxes[i] = {\n          left: 0,\n          top: top,\n          row: row,\n          width: itemWidth,\n          height: itemHeight\n        };\n        lineWidths[lineWidths.length - 1] += itemWidth + padding;\n      });\n      return totalHeight;\n    }\n  }, {\n    key: \"_fitCols\",\n    value: function _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n      var ctx = this.ctx,\n        maxHeight = this.maxHeight,\n        padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var columnSizes = this.columnSizes = [];\n      var heightLimit = maxHeight - titleHeight;\n      var totalWidth = padding;\n      var currentColWidth = 0;\n      var currentColHeight = 0;\n      var left = 0;\n      var col = 0;\n      this.legendItems.forEach(function (legendItem, i) {\n        var _calculateItemSize = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight),\n          itemWidth = _calculateItemSize.itemWidth,\n          itemHeight = _calculateItemSize.itemHeight;\n        if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n          totalWidth += currentColWidth + padding;\n          columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n          });\n          left += currentColWidth + padding;\n          col++;\n          currentColWidth = currentColHeight = 0;\n        }\n        hitboxes[i] = {\n          left: left,\n          top: currentColHeight,\n          col: col,\n          width: itemWidth,\n          height: itemHeight\n        };\n        currentColWidth = Math.max(currentColWidth, itemWidth);\n        currentColHeight += itemHeight + padding;\n      });\n      totalWidth += currentColWidth;\n      columnSizes.push({\n        width: currentColWidth,\n        height: currentColHeight\n      });\n      return totalWidth;\n    }\n  }, {\n    key: \"adjustHitBoxes\",\n    value: function adjustHitBoxes() {\n      if (!this.options.display) {\n        return;\n      }\n      var titleHeight = this._computeTitleHeight();\n      var hitboxes = this.legendHitBoxes,\n        _this$options15 = this.options,\n        align = _this$options15.align,\n        padding = _this$options15.labels.padding,\n        rtl = _this$options15.rtl;\n      var rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n      if (this.isHorizontal()) {\n        var row = 0;\n        var left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        var _iterator23 = _createForOfIteratorHelper(hitboxes),\n          _step23;\n        try {\n          for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n            var hitbox = _step23.value;\n            if (row !== hitbox.row) {\n              row = hitbox.row;\n              left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            }\n            hitbox.top += this.top + titleHeight + padding;\n            hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n            left += hitbox.width + padding;\n          }\n        } catch (err) {\n          _iterator23.e(err);\n        } finally {\n          _iterator23.f();\n        }\n      } else {\n        var col = 0;\n        var top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        var _iterator24 = _createForOfIteratorHelper(hitboxes),\n          _step24;\n        try {\n          for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n            var hitbox1 = _step24.value;\n            if (hitbox1.col !== col) {\n              col = hitbox1.col;\n              top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            }\n            hitbox1.top = top;\n            hitbox1.left += this.left + padding;\n            hitbox1.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox1.left), hitbox1.width);\n            top += hitbox1.height + padding;\n          }\n        } catch (err) {\n          _iterator24.e(err);\n        } finally {\n          _iterator24.f();\n        }\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      if (this.options.display) {\n        var ctx = this.ctx;\n        clipArea(ctx, this);\n        this._draw();\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"_draw\",\n    value: function _draw() {\n      var _this29 = this;\n      var opts = this.options,\n        columnSizes = this.columnSizes,\n        lineWidths = this.lineWidths,\n        ctx = this.ctx;\n      var align = opts.align,\n        labelOpts = opts.labels;\n      var defaultColor = defaults.color;\n      var rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      var labelFont = toFont(labelOpts.font);\n      var padding = labelOpts.padding;\n      var fontSize = labelFont.size;\n      var halfFontSize = fontSize / 2;\n      var cursor;\n      this.drawTitle();\n      ctx.textAlign = rtlHelper.textAlign('left');\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.font = labelFont.string;\n      var _getBoxSize2 = getBoxSize(labelOpts, fontSize),\n        boxWidth = _getBoxSize2.boxWidth,\n        boxHeight = _getBoxSize2.boxHeight,\n        itemHeight = _getBoxSize2.itemHeight;\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n          return;\n        }\n        ctx.save();\n        var lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n        ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n        if (labelOpts.usePointStyle) {\n          var drawOptions = {\n            radius: boxHeight * Math.SQRT2 / 2,\n            pointStyle: legendItem.pointStyle,\n            rotation: legendItem.rotation,\n            borderWidth: lineWidth\n          };\n          var centerX = rtlHelper.xPlus(x, boxWidth / 2);\n          var centerY = y + halfFontSize;\n          drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n        } else {\n          var yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n          var xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n          var borderRadius = toTRBLCorners(legendItem.borderRadius);\n          ctx.beginPath();\n          if (Object.values(borderRadius).some(function (v) {\n            return v !== 0;\n          })) {\n            addRoundedRectPath(ctx, {\n              x: xBoxLeft,\n              y: yBoxTop,\n              w: boxWidth,\n              h: boxHeight,\n              radius: borderRadius\n            });\n          } else {\n            ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n          }\n          ctx.fill();\n          if (lineWidth !== 0) {\n            ctx.stroke();\n          }\n        }\n        ctx.restore();\n      };\n      var fillText = function fillText(x, y, legendItem) {\n        renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n          strikethrough: legendItem.hidden,\n          textAlign: rtlHelper.textAlign(legendItem.textAlign)\n        });\n      };\n      var isHorizontal = this.isHorizontal();\n      var titleHeight = this._computeTitleHeight();\n      if (isHorizontal) {\n        cursor = {\n          x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n          y: this.top + padding + titleHeight,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: this.left + padding,\n          y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n          line: 0\n        };\n      }\n      overrideTextDirection(this.ctx, opts.textDirection);\n      var lineHeight = itemHeight + padding;\n      this.legendItems.forEach(function (legendItem, i) {\n        ctx.strokeStyle = legendItem.fontColor;\n        ctx.fillStyle = legendItem.fontColor;\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n        var width = boxWidth + halfFontSize + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n        rtlHelper.setWidth(_this29.width);\n        if (isHorizontal) {\n          if (i > 0 && x + width + padding > _this29.right) {\n            y = cursor.y += lineHeight;\n            cursor.line++;\n            x = cursor.x = _alignStartEnd(align, _this29.left + padding, _this29.right - lineWidths[cursor.line]);\n          }\n        } else if (i > 0 && y + lineHeight > _this29.bottom) {\n          x = cursor.x = x + columnSizes[cursor.line].width + padding;\n          cursor.line++;\n          y = cursor.y = _alignStartEnd(align, _this29.top + titleHeight + padding, _this29.bottom - columnSizes[cursor.line].height);\n        }\n        var realX = rtlHelper.x(x);\n        drawLegendBox(realX, y, legendItem);\n        x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : _this29.right, opts.rtl);\n        fillText(rtlHelper.x(x), y, legendItem);\n        if (isHorizontal) {\n          cursor.x += width + padding;\n        } else if (typeof legendItem.text !== 'string') {\n          var fontLineHeight = labelFont.lineHeight;\n          cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n        } else {\n          cursor.y += lineHeight;\n        }\n      });\n      restoreTextDirection(this.ctx, opts.textDirection);\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var opts = this.options;\n      var titleOpts = opts.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      if (!titleOpts.display) {\n        return;\n      }\n      var rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      var ctx = this.ctx;\n      var position = titleOpts.position;\n      var halfFontSize = titleFont.size / 2;\n      var topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n      var y;\n      var left = this.left;\n      var maxWidth = this.width;\n      if (this.isHorizontal()) {\n        maxWidth = Math.max.apply(Math, _toConsumableArray(this.lineWidths));\n        y = this.top + topPaddingPlusHalfFontSize;\n        left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n      } else {\n        var maxHeight = this.columnSizes.reduce(function (acc, size) {\n          return Math.max(acc, size.height);\n        }, 0);\n        y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n      }\n      var x = _alignStartEnd(position, left, left + maxWidth);\n      ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n      ctx.textBaseline = 'middle';\n      ctx.strokeStyle = titleOpts.color;\n      ctx.fillStyle = titleOpts.color;\n      ctx.font = titleFont.string;\n      renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n  }, {\n    key: \"_computeTitleHeight\",\n    value: function _computeTitleHeight() {\n      var titleOpts = this.options.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n  }, {\n    key: \"_getLegendItemAt\",\n    value: function _getLegendItemAt(x, y) {\n      var i, hitBox, lh;\n      if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n        lh = this.legendHitBoxes;\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n          if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n            return this.legendItems[i];\n          }\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e) {\n      var opts = this.options;\n      if (!isListened(e.type, opts)) {\n        return;\n      }\n      var hoveredItem = this._getLegendItemAt(e.x, e.y);\n      if (e.type === 'mousemove' || e.type === 'mouseout') {\n        var previous = this._hoveredItem;\n        var sameItem = itemsEqual(previous, hoveredItem);\n        if (previous && !sameItem) {\n          callback(opts.onLeave, [e, previous, this], this);\n        }\n        this._hoveredItem = hoveredItem;\n        if (hoveredItem && !sameItem) {\n          callback(opts.onHover, [e, hoveredItem, this], this);\n        }\n      } else if (hoveredItem) {\n        callback(opts.onClick, [e, hoveredItem, this], this);\n      }\n    }\n  }]);\n  return Legend;\n}(Element);\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  var itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  var itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {\n    itemWidth: itemWidth,\n    itemHeight: itemHeight\n  };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  var legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce(function (a, b) {\n      return a.length > b.length ? a : b;\n    });\n  }\n  return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  var itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  var labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start: function start(chart, _args, options) {\n    var legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate: function afterUpdate(chart) {\n    var legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick: function onClick(e, legendItem, legend) {\n      var index = legendItem.datasetIndex;\n      var ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      boxWidth: 40,\n      padding: 10,\n      generateLabels: function generateLabels(chart) {\n        var datasets = chart.data.datasets;\n        var _chart$legend$options = chart.legend.options.labels,\n          usePointStyle = _chart$legend$options.usePointStyle,\n          pointStyle = _chart$legend$options.pointStyle,\n          textAlign = _chart$legend$options.textAlign,\n          color = _chart$legend$options.color,\n          useBorderRadius = _chart$legend$options.useBorderRadius,\n          borderRadius = _chart$legend$options.borderRadius;\n        return chart._getSortedDatasetMetas().map(function (meta) {\n          var style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          var borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return !name.startsWith('on');\n    },\n    labels: {\n      _scriptable: function _scriptable(name) {\n        return !['generateLabels', 'filter', 'sort'].includes(name);\n      }\n    }\n  }\n};\nvar Title = /*#__PURE__*/function (_Element7) {\n  _inherits(Title, _Element7);\n  var _super17 = _createSuper(Title);\n  function Title(config) {\n    var _this30;\n    _classCallCheck(this, Title);\n    _this30 = _super17.call(this);\n    _this30.chart = config.chart;\n    _this30.options = config.options;\n    _this30.ctx = config.ctx;\n    _this30._padding = undefined;\n    _this30.top = undefined;\n    _this30.bottom = undefined;\n    _this30.left = undefined;\n    _this30.right = undefined;\n    _this30.width = undefined;\n    _this30.height = undefined;\n    _this30.position = undefined;\n    _this30.weight = undefined;\n    _this30.fullSize = undefined;\n    return _this30;\n  }\n  _createClass(Title, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight) {\n      var opts = this.options;\n      this.left = 0;\n      this.top = 0;\n      if (!opts.display) {\n        this.width = this.height = this.right = this.bottom = 0;\n        return;\n      }\n      this.width = this.right = maxWidth;\n      this.height = this.bottom = maxHeight;\n      var lineCount = isArray(opts.text) ? opts.text.length : 1;\n      this._padding = toPadding(opts.padding);\n      var textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n      if (this.isHorizontal()) {\n        this.height = textSize;\n      } else {\n        this.width = textSize;\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    }\n  }, {\n    key: \"_drawArgs\",\n    value: function _drawArgs(offset) {\n      var top = this.top,\n        left = this.left,\n        bottom = this.bottom,\n        right = this.right,\n        options = this.options;\n      var align = options.align;\n      var rotation = 0;\n      var maxWidth, titleX, titleY;\n      if (this.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        if (options.position === 'left') {\n          titleX = left + offset;\n          titleY = _alignStartEnd(align, bottom, top);\n          rotation = PI * -0.5;\n        } else {\n          titleX = right - offset;\n          titleY = _alignStartEnd(align, top, bottom);\n          rotation = PI * 0.5;\n        }\n        maxWidth = bottom - top;\n      }\n      return {\n        titleX: titleX,\n        titleY: titleY,\n        maxWidth: maxWidth,\n        rotation: rotation\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this.ctx;\n      var opts = this.options;\n      if (!opts.display) {\n        return;\n      }\n      var fontOpts = toFont(opts.font);\n      var lineHeight = fontOpts.lineHeight;\n      var offset = lineHeight / 2 + this._padding.top;\n      var _this$_drawArgs = this._drawArgs(offset),\n        titleX = _this$_drawArgs.titleX,\n        titleY = _this$_drawArgs.titleY,\n        maxWidth = _this$_drawArgs.maxWidth,\n        rotation = _this$_drawArgs.rotation;\n      renderText(ctx, opts.text, 0, 0, fontOpts, {\n        color: opts.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: _toLeftRightCenter(opts.align),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }]);\n  return Title;\n}(Element);\nfunction createTitle(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start: function start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop: function stop(chart) {\n    var titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start: function start(chart, _args, options) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar positioners = {\n  average: function average(items) {\n    if (!items.length) {\n      return false;\n    }\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest: function nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  var element = item.element,\n    datasetIndex = item.datasetIndex,\n    index = item.index;\n  var controller = chart.getDatasetMeta(datasetIndex).controller;\n  var _controller$getLabelA = controller.getLabelAndValue(index),\n    label = _controller$getLabelA.label,\n    value = _controller$getLabelA.value;\n  return {\n    chart: chart,\n    label: label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex: datasetIndex,\n    element: element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  var ctx = tooltip.chart.ctx;\n  var body = tooltip.body,\n    footer = tooltip.footer,\n    title = tooltip.title;\n  var boxWidth = options.boxWidth,\n    boxHeight = options.boxHeight;\n  var bodyFont = toFont(options.bodyFont);\n  var titleFont = toFont(options.titleFont);\n  var footerFont = toFont(options.footerFont);\n  var titleLineCount = title.length;\n  var footerLineCount = footer.length;\n  var bodyLineItemCount = body.length;\n  var padding = toPadding(options.padding);\n  var height = padding.height;\n  var width = 0;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    var bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n  var widthPadding = 0;\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n  each(body, function (bodyItem) {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width: width,\n    height: height\n  };\n}\nfunction determineYAlign(chart, size) {\n  var y = size.y,\n    height = size.height;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  var x = size.x,\n    width = size.width;\n  var caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  var x = size.x,\n    width = size.width;\n  var chartWidth = chart.width,\n    _chart$chartArea = chart.chartArea,\n    left = _chart$chartArea.left,\n    right = _chart$chartArea.right;\n  var xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  var yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign: yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  var x = size.x,\n    width = size.width;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  var y = size.y,\n    height = size.height;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  var caretSize = options.caretSize,\n    caretPadding = options.caretPadding,\n    cornerRadius = options.cornerRadius;\n  var xAlign = alignment.xAlign,\n    yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n  var _toTRBLCorners = toTRBLCorners(cornerRadius),\n    topLeft = _toTRBLCorners.topLeft,\n    topRight = _toTRBLCorners.topRight,\n    bottomLeft = _toTRBLCorners.bottomLeft,\n    bottomRight = _toTRBLCorners.bottomRight;\n  var x = alignX(size, xAlign);\n  var y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  var padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip: tooltip,\n    tooltipItems: tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  var override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nvar defaultCallbacks = {\n  beforeTitle: noop,\n  title: function title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      var item = tooltipItems[0];\n      var labels = item.chart.data.labels;\n      var labelCount = labels ? labels.length : 0;\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n    return '';\n  },\n  afterTitle: noop,\n  beforeBody: noop,\n  beforeLabel: noop,\n  label: function label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n    var label = tooltipItem.dataset.label || '';\n    if (label) {\n      label += ': ';\n    }\n    var value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor: function labelColor(tooltipItem) {\n    var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    var options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0\n    };\n  },\n  labelTextColor: function labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle: function labelPointStyle(tooltipItem) {\n    var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    var options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation\n    };\n  },\n  afterLabel: noop,\n  afterBody: noop,\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  var result = callbacks[name].call(ctx, arg);\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n  return result;\n}\nvar Tooltip = /*#__PURE__*/function (_Element8) {\n  _inherits(Tooltip, _Element8);\n  var _super18 = _createSuper(Tooltip);\n  function Tooltip(config) {\n    var _this31;\n    _classCallCheck(this, Tooltip);\n    _this31 = _super18.call(this);\n    _this31.opacity = 0;\n    _this31._active = [];\n    _this31._eventPosition = undefined;\n    _this31._size = undefined;\n    _this31._cachedAnimations = undefined;\n    _this31._tooltipItems = [];\n    _this31.$animations = undefined;\n    _this31.$context = undefined;\n    _this31.chart = config.chart;\n    _this31.options = config.options;\n    _this31.dataPoints = undefined;\n    _this31.title = undefined;\n    _this31.beforeBody = undefined;\n    _this31.body = undefined;\n    _this31.afterBody = undefined;\n    _this31.footer = undefined;\n    _this31.xAlign = undefined;\n    _this31.yAlign = undefined;\n    _this31.x = undefined;\n    _this31.y = undefined;\n    _this31.height = undefined;\n    _this31.width = undefined;\n    _this31.caretX = undefined;\n    _this31.caretY = undefined;\n    _this31.labelColors = undefined;\n    _this31.labelPointStyles = undefined;\n    _this31.labelTextColors = undefined;\n    return _this31;\n  }\n  _createClass(Tooltip, [{\n    key: \"initialize\",\n    value: function initialize(options) {\n      this.options = options;\n      this._cachedAnimations = undefined;\n      this.$context = undefined;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations() {\n      var cached = this._cachedAnimations;\n      if (cached) {\n        return cached;\n      }\n      var chart = this.chart;\n      var options = this.options.setContext(this.getContext());\n      var opts = options.enabled && chart.options.animation && options.animations;\n      var animations = new Animations(this.chart, opts);\n      if (opts._cacheable) {\n        this._cachedAnimations = Object.freeze(animations);\n      }\n      return animations;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle(context, options) {\n      var callbacks = options.callbacks;\n      var beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n      var title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n      var afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    }\n  }, {\n    key: \"getBeforeBody\",\n    value: function getBeforeBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n  }, {\n    key: \"getBody\",\n    value: function getBody(tooltipItems, options) {\n      var _this32 = this;\n      var callbacks = options.callbacks;\n      var bodyItems = [];\n      each(tooltipItems, function (context) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        var scoped = overrideCallbacks(callbacks, context);\n        pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', _this32, context)));\n        pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', _this32, context));\n        pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', _this32, context)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    }\n  }, {\n    key: \"getAfterBody\",\n    value: function getAfterBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n  }, {\n    key: \"getFooter\",\n    value: function getFooter(tooltipItems, options) {\n      var callbacks = options.callbacks;\n      var beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n      var footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n      var afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    }\n  }, {\n    key: \"_createItems\",\n    value: function _createItems(options) {\n      var _this33 = this;\n      var active = this._active;\n      var data = this.chart.data;\n      var labelColors = [];\n      var labelPointStyles = [];\n      var labelTextColors = [];\n      var tooltipItems = [];\n      var i, len;\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(this.chart, active[i]));\n      }\n      if (options.filter) {\n        tooltipItems = tooltipItems.filter(function (element, index, array) {\n          return options.filter(element, index, array, data);\n        });\n      }\n      if (options.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return options.itemSort(a, b, data);\n        });\n      }\n      each(tooltipItems, function (context) {\n        var scoped = overrideCallbacks(options.callbacks, context);\n        labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', _this33, context));\n        labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', _this33, context));\n        labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', _this33, context));\n      });\n      this.labelColors = labelColors;\n      this.labelPointStyles = labelPointStyles;\n      this.labelTextColors = labelTextColors;\n      this.dataPoints = tooltipItems;\n      return tooltipItems;\n    }\n  }, {\n    key: \"update\",\n    value: function update(changed, replay) {\n      var options = this.options.setContext(this.getContext());\n      var active = this._active;\n      var properties;\n      var tooltipItems = [];\n      if (!active.length) {\n        if (this.opacity !== 0) {\n          properties = {\n            opacity: 0\n          };\n        }\n      } else {\n        var position = positioners[options.position].call(this, active, this._eventPosition);\n        tooltipItems = this._createItems(options);\n        this.title = this.getTitle(tooltipItems, options);\n        this.beforeBody = this.getBeforeBody(tooltipItems, options);\n        this.body = this.getBody(tooltipItems, options);\n        this.afterBody = this.getAfterBody(tooltipItems, options);\n        this.footer = this.getFooter(tooltipItems, options);\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, size);\n        var alignment = determineAlignment(this.chart, options, positionAndSize);\n        var backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        properties = {\n          opacity: 1,\n          x: backgroundPoint.x,\n          y: backgroundPoint.y,\n          width: size.width,\n          height: size.height,\n          caretX: position.x,\n          caretY: position.y\n        };\n      }\n      this._tooltipItems = tooltipItems;\n      this.$context = undefined;\n      if (properties) {\n        this._resolveAnimations().update(this, properties);\n      }\n      if (changed && options.external) {\n        options.external.call(this, {\n          chart: this.chart,\n          tooltip: this,\n          replay: replay\n        });\n      }\n    }\n  }, {\n    key: \"drawCaret\",\n    value: function drawCaret(tooltipPoint, ctx, size, options) {\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n  }, {\n    key: \"getCaretPosition\",\n    value: function getCaretPosition(tooltipPoint, size, options) {\n      var xAlign = this.xAlign,\n        yAlign = this.yAlign;\n      var caretSize = options.caretSize,\n        cornerRadius = options.cornerRadius;\n      var _toTRBLCorners2 = toTRBLCorners(cornerRadius),\n        topLeft = _toTRBLCorners2.topLeft,\n        topRight = _toTRBLCorners2.topRight,\n        bottomLeft = _toTRBLCorners2.bottomLeft,\n        bottomRight = _toTRBLCorners2.bottomRight;\n      var ptX = tooltipPoint.x,\n        ptY = tooltipPoint.y;\n      var width = size.width,\n        height = size.height;\n      var x1, x2, x3, y1, y2, y3;\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n        x3 = x1;\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n        } else {\n          x2 = this.caretX;\n        }\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          x1 = x2 + caretSize;\n          x3 = x2 - caretSize;\n        }\n        y3 = y1;\n      }\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle(pt, ctx, options) {\n      var title = this.title;\n      var length = title.length;\n      var titleFont, titleSpacing, i;\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.titleAlign, options);\n        ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n        ctx.textBaseline = 'middle';\n        titleFont = toFont(options.titleFont);\n        titleSpacing = options.titleSpacing;\n        ctx.fillStyle = options.titleColor;\n        ctx.font = titleFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n          pt.y += titleFont.lineHeight + titleSpacing;\n          if (i + 1 === length) {\n            pt.y += options.titleMarginBottom - titleSpacing;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_drawColorBox\",\n    value: function _drawColorBox(ctx, pt, i, rtlHelper, options) {\n      var labelColors = this.labelColors[i];\n      var labelPointStyle = this.labelPointStyles[i];\n      var boxHeight = options.boxHeight,\n        boxWidth = options.boxWidth,\n        boxPadding = options.boxPadding;\n      var bodyFont = toFont(options.bodyFont);\n      var colorX = getAlignedX(this, 'left', options);\n      var rtlColorX = rtlHelper.x(colorX);\n      var yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n      var colorY = pt.y + yOffSet;\n      if (options.usePointStyle) {\n        var drawOptions = {\n          radius: Math.min(boxWidth, boxHeight) / 2,\n          pointStyle: labelPointStyle.pointStyle,\n          rotation: labelPointStyle.rotation,\n          borderWidth: 1\n        };\n        var centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n        var centerY = colorY + boxHeight / 2;\n        ctx.strokeStyle = options.multiKeyBackground;\n        ctx.fillStyle = options.multiKeyBackground;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.fillStyle = labelColors.backgroundColor;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max.apply(Math, _toConsumableArray(Object.values(labelColors.borderWidth))) : labelColors.borderWidth || 1;\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.setLineDash(labelColors.borderDash || []);\n        ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n        var outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n        var innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n        var borderRadius = toTRBLCorners(labelColors.borderRadius);\n        if (Object.values(borderRadius).some(function (v) {\n          return v !== 0;\n        })) {\n          ctx.beginPath();\n          ctx.fillStyle = options.multiKeyBackground;\n          addRoundedRectPath(ctx, {\n            x: outerX,\n            y: colorY,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n          ctx.stroke();\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.beginPath();\n          addRoundedRectPath(ctx, {\n            x: innerX,\n            y: colorY + 1,\n            w: boxWidth - 2,\n            h: boxHeight - 2,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillStyle = options.multiKeyBackground;\n          ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n        }\n      }\n      ctx.fillStyle = this.labelTextColors[i];\n    }\n  }, {\n    key: \"drawBody\",\n    value: function drawBody(pt, ctx, options) {\n      var body = this.body;\n      var bodySpacing = options.bodySpacing,\n        bodyAlign = options.bodyAlign,\n        displayColors = options.displayColors,\n        boxHeight = options.boxHeight,\n        boxWidth = options.boxWidth,\n        boxPadding = options.boxPadding;\n      var bodyFont = toFont(options.bodyFont);\n      var bodyLineHeight = bodyFont.lineHeight;\n      var xLinePadding = 0;\n      var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n        pt.y += bodyLineHeight + bodySpacing;\n      };\n      var bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n      var bodyItem, textColor, lines, i, j, ilen, jlen;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'middle';\n      ctx.font = bodyFont.string;\n      pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n      ctx.fillStyle = options.bodyColor;\n      each(this.beforeBody, fillLineOfText);\n      xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n      for (i = 0, ilen = body.length; i < ilen; ++i) {\n        bodyItem = body[i];\n        textColor = this.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        each(bodyItem.before, fillLineOfText);\n        lines = bodyItem.lines;\n        if (displayColors && lines.length) {\n          this._drawColorBox(ctx, pt, i, rtlHelper, options);\n          bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n        }\n        for (j = 0, jlen = lines.length; j < jlen; ++j) {\n          fillLineOfText(lines[j]);\n          bodyLineHeight = bodyFont.lineHeight;\n        }\n        each(bodyItem.after, fillLineOfText);\n      }\n      xLinePadding = 0;\n      bodyLineHeight = bodyFont.lineHeight;\n      each(this.afterBody, fillLineOfText);\n      pt.y -= bodySpacing;\n    }\n  }, {\n    key: \"drawFooter\",\n    value: function drawFooter(pt, ctx, options) {\n      var footer = this.footer;\n      var length = footer.length;\n      var footerFont, i;\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.footerAlign, options);\n        pt.y += options.footerMarginTop;\n        ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n        ctx.textBaseline = 'middle';\n        footerFont = toFont(options.footerFont);\n        ctx.fillStyle = options.footerColor;\n        ctx.font = footerFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n          pt.y += footerFont.lineHeight + options.footerSpacing;\n        }\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground(pt, ctx, tooltipSize, options) {\n      var xAlign = this.xAlign,\n        yAlign = this.yAlign;\n      var x = pt.x,\n        y = pt.y;\n      var width = tooltipSize.width,\n        height = tooltipSize.height;\n      var _toTRBLCorners3 = toTRBLCorners(options.cornerRadius),\n        topLeft = _toTRBLCorners3.topLeft,\n        topRight = _toTRBLCorners3.topRight,\n        bottomLeft = _toTRBLCorners3.bottomLeft,\n        bottomRight = _toTRBLCorners3.bottomRight;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.beginPath();\n      ctx.moveTo(x + topLeft, y);\n      if (yAlign === 'top') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width - topRight, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width, y + height - bottomRight);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + bottomLeft, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x, y + topLeft);\n      ctx.quadraticCurveTo(x, y, x + topLeft, y);\n      ctx.closePath();\n      ctx.fill();\n      if (options.borderWidth > 0) {\n        ctx.stroke();\n      }\n    }\n  }, {\n    key: \"_updateAnimationTarget\",\n    value: function _updateAnimationTarget(options) {\n      var chart = this.chart;\n      var anims = this.$animations;\n      var animX = anims && anims.x;\n      var animY = anims && anims.y;\n      if (animX || animY) {\n        var position = positioners[options.position].call(this, this._active, this._eventPosition);\n        if (!position) {\n          return;\n        }\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, this._size);\n        var alignment = determineAlignment(chart, options, positionAndSize);\n        var point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n        if (animX._to !== point.x || animY._to !== point.y) {\n          this.xAlign = alignment.xAlign;\n          this.yAlign = alignment.yAlign;\n          this.width = size.width;\n          this.height = size.height;\n          this.caretX = position.x;\n          this.caretY = position.y;\n          this._resolveAnimations().update(this, point);\n        }\n      }\n    }\n  }, {\n    key: \"_willRender\",\n    value: function _willRender() {\n      return !!this.opacity;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options.setContext(this.getContext());\n      var opacity = this.opacity;\n      if (!opacity) {\n        return;\n      }\n      this._updateAnimationTarget(options);\n      var tooltipSize = {\n        width: this.width,\n        height: this.height\n      };\n      var pt = {\n        x: this.x,\n        y: this.y\n      };\n      opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n      var padding = toPadding(options.padding);\n      var hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n      if (options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        this.drawBackground(pt, ctx, tooltipSize, options);\n        overrideTextDirection(ctx, options.textDirection);\n        pt.y += padding.top;\n        this.drawTitle(pt, ctx, options);\n        this.drawBody(pt, ctx, options);\n        this.drawFooter(pt, ctx, options);\n        restoreTextDirection(ctx, options.textDirection);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements, eventPosition) {\n      var _this34 = this;\n      var lastActive = this._active;\n      var active = activeElements.map(function (_ref11) {\n        var datasetIndex = _ref11.datasetIndex,\n          index = _ref11.index;\n        var meta = _this34.chart.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('Cannot find a dataset at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(lastActive, active);\n      var positionChanged = this._positionChanged(active, eventPosition);\n      if (changed || positionChanged) {\n        this._active = active;\n        this._eventPosition = eventPosition;\n        this._ignoreReplayEvents = true;\n        this.update(true);\n      }\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e, replay) {\n      var inChartArea = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      if (replay && this._ignoreReplayEvents) {\n        return false;\n      }\n      this._ignoreReplayEvents = false;\n      var options = this.options;\n      var lastActive = this._active || [];\n      var active = this._getActiveElements(e, lastActive, replay, inChartArea);\n      var positionChanged = this._positionChanged(active, e);\n      var changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n      if (changed) {\n        this._active = active;\n        if (options.enabled || options.external) {\n          this._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          this.update(true, replay);\n        }\n      }\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, replay, inChartArea) {\n      var options = this.options;\n      if (e.type === 'mouseout') {\n        return [];\n      }\n      if (!inChartArea) {\n        return lastActive;\n      }\n      var active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n      return active;\n    }\n  }, {\n    key: \"_positionChanged\",\n    value: function _positionChanged(active, e) {\n      var caretX = this.caretX,\n        caretY = this.caretY,\n        options = this.options;\n      var position = positioners[options.position].call(this, active, e);\n      return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n  }]);\n  return Tooltip;\n}(Element);\n_defineProperty(Tooltip, \"positioners\", positioners);\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners: positioners,\n  afterInit: function afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        chart: chart,\n        options: options\n      });\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset: function reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw: function afterDraw(chart) {\n    var tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      var args = {\n        tooltip: tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', _objectSpread(_objectSpread({}, args), {}, {\n        cancelable: true\n      })) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (chart.tooltip) {\n      var useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: function boxHeight(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    boxWidth: function boxWidth(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return name !== 'filter' && name !== 'itemSort' && name !== 'external';\n    },\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Colors: plugin_colors,\n  Decimation: plugin_decimation,\n  Filler: index,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\nvar addIfString = function addIfString(labels, raw, index, addedLabels) {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({\n      index: index,\n      label: raw\n    });\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  var first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  var last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nvar validIndex = function validIndex(index, max) {\n  return index === null ? null : _limitValue(Math.round(index), 0, max);\n};\nfunction _getLabelForValue(value) {\n  var labels = this.getLabels();\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\nvar CategoryScale = /*#__PURE__*/function (_Scale) {\n  _inherits(CategoryScale, _Scale);\n  var _super19 = _createSuper(CategoryScale);\n  function CategoryScale(cfg) {\n    var _this35;\n    _classCallCheck(this, CategoryScale);\n    _this35 = _super19.call(this, cfg);\n    _this35._startValue = undefined;\n    _this35._valueRange = 0;\n    _this35._addedLabels = [];\n    return _this35;\n  }\n  _createClass(CategoryScale, [{\n    key: \"init\",\n    value: function init(scaleOptions) {\n      var added = this._addedLabels;\n      if (added.length) {\n        var labels = this.getLabels();\n        var _iterator25 = _createForOfIteratorHelper(added),\n          _step25;\n        try {\n          for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {\n            var _step25$value = _step25.value,\n              _index3 = _step25$value.index,\n              label = _step25$value.label;\n            if (labels[_index3] === label) {\n              labels.splice(_index3, 1);\n            }\n          }\n        } catch (err) {\n          _iterator25.e(err);\n        } finally {\n          _iterator25.f();\n        }\n        this._addedLabels = [];\n      }\n      _get(_getPrototypeOf(CategoryScale.prototype), \"init\", this).call(this, scaleOptions);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      var labels = this.getLabels();\n      index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n      return validIndex(index, labels.length - 1);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getUserBounds2 = this.getUserBounds(),\n        minDefined = _this$getUserBounds2.minDefined,\n        maxDefined = _this$getUserBounds2.maxDefined;\n      var _this$getMinMax = this.getMinMax(true),\n        min = _this$getMinMax.min,\n        max = _this$getMinMax.max;\n      if (this.options.bounds === 'ticks') {\n        if (!minDefined) {\n          min = 0;\n        }\n        if (!maxDefined) {\n          max = this.getLabels().length - 1;\n        }\n      }\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var min = this.min;\n      var max = this.max;\n      var offset = this.options.offset;\n      var ticks = [];\n      var labels = this.getLabels();\n      labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n      this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n      this._startValue = this.min - (offset ? 0.5 : 0);\n      for (var value = min; value <= max; value++) {\n        ticks.push({\n          value: value\n        });\n      }\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return _getLabelForValue.call(this, value);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      _get(_getPrototypeOf(CategoryScale.prototype), \"configure\", this).call(this);\n      if (!this.isHorizontal()) {\n        this._reversePixels = !this._reversePixels;\n      }\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (typeof value !== 'number') {\n        value = this.parse(value);\n      }\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.bottom;\n    }\n  }]);\n  return CategoryScale;\n}(Scale);\n_defineProperty(CategoryScale, \"id\", 'category');\n_defineProperty(CategoryScale, \"defaults\", {\n  ticks: {\n    callback: _getLabelForValue\n  }\n});\nfunction generateTicks$1(generationOptions, dataRange) {\n  var ticks = [];\n  var MIN_SPACING = 1e-14;\n  var bounds = generationOptions.bounds,\n    step = generationOptions.step,\n    min = generationOptions.min,\n    max = generationOptions.max,\n    precision = generationOptions.precision,\n    count = generationOptions.count,\n    maxTicks = generationOptions.maxTicks,\n    maxDigits = generationOptions.maxDigits,\n    includeBounds = generationOptions.includeBounds;\n  var unit = step || 1;\n  var maxSpaces = maxTicks - 1;\n  var rmin = dataRange.min,\n    rmax = dataRange.max;\n  var minDefined = !isNullOrUndef(min);\n  var maxDefined = !isNullOrUndef(max);\n  var countDefined = !isNullOrUndef(count);\n  var minSpacing = (rmax - rmin) / (maxDigits + 1);\n  var spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  var factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  var decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  var j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, _ref12) {\n  var horizontal = _ref12.horizontal,\n    minRotation = _ref12.minRotation;\n  var rad = toRadians(minRotation);\n  var ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  var length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nvar LinearScaleBase = /*#__PURE__*/function (_Scale2) {\n  _inherits(LinearScaleBase, _Scale2);\n  var _super20 = _createSuper(LinearScaleBase);\n  function LinearScaleBase(cfg) {\n    var _this36;\n    _classCallCheck(this, LinearScaleBase);\n    _this36 = _super20.call(this, cfg);\n    _this36.start = undefined;\n    _this36.end = undefined;\n    _this36._startValue = undefined;\n    _this36._endValue = undefined;\n    _this36._valueRange = 0;\n    return _this36;\n  }\n  _createClass(LinearScaleBase, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n        return null;\n      }\n      return +raw;\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var beginAtZero = this.options.beginAtZero;\n      var _this$getUserBounds3 = this.getUserBounds(),\n        minDefined = _this$getUserBounds3.minDefined,\n        maxDefined = _this$getUserBounds3.maxDefined;\n      var min = this.min,\n        max = this.max;\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n      if (beginAtZero) {\n        var minSign = sign(min);\n        var maxSign = sign(max);\n        if (minSign < 0 && maxSign < 0) {\n          setMax(0);\n        } else if (minSign > 0 && maxSign > 0) {\n          setMin(0);\n        }\n      }\n      if (min === max) {\n        var offset = max === 0 ? 1 : Math.abs(max * 0.05);\n        setMax(max + offset);\n        if (!beginAtZero) {\n          setMin(min - offset);\n        }\n      }\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"getTickLimit\",\n    value: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var maxTicksLimit = tickOpts.maxTicksLimit,\n        stepSize = tickOpts.stepSize;\n      var maxTicks;\n      if (stepSize) {\n        maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n        if (maxTicks > 1000) {\n          console.warn(\"scales.\".concat(this.id, \".ticks.stepSize: \").concat(stepSize, \" would result generating up to \").concat(maxTicks, \" ticks. Limiting to 1000.\"));\n          maxTicks = 1000;\n        }\n      } else {\n        maxTicks = this.computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n      return maxTicks;\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n      var maxTicks = this.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        bounds: opts.bounds,\n        min: opts.min,\n        max: opts.max,\n        precision: tickOpts.precision,\n        step: tickOpts.stepSize,\n        count: tickOpts.count,\n        maxDigits: this._maxDigits(),\n        horizontal: this.isHorizontal(),\n        minRotation: tickOpts.minRotation || 0,\n        includeBounds: tickOpts.includeBounds !== false\n      };\n      var dataRange = this._range || this;\n      var ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n      return ticks;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var ticks = this.ticks;\n      var start = this.min;\n      var end = this.max;\n      _get(_getPrototypeOf(LinearScaleBase.prototype), \"configure\", this).call(this);\n      if (this.options.offset && ticks.length) {\n        var offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n        start -= offset;\n        end += offset;\n      }\n      this._startValue = start;\n      this._endValue = end;\n      this._valueRange = end - start;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }]);\n  return LinearScaleBase;\n}(Scale);\nvar LinearScale = /*#__PURE__*/function (_LinearScaleBase) {\n  _inherits(LinearScale, _LinearScaleBase);\n  var _super21 = _createSuper(LinearScale);\n  function LinearScale() {\n    _classCallCheck(this, LinearScale);\n    return _super21.apply(this, arguments);\n  }\n  _createClass(LinearScale, [{\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax2 = this.getMinMax(true),\n        min = _this$getMinMax2.min,\n        max = _this$getMinMax2.max;\n      this.min = isNumberFinite(min) ? min : 0;\n      this.max = isNumberFinite(max) ? max : 1;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      var horizontal = this.isHorizontal();\n      var length = horizontal ? this.width : this.height;\n      var minRotation = toRadians(this.options.ticks.minRotation);\n      var ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n      var tickFont = this._resolveTickFontOptions(0);\n      return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n  }]);\n  return LinearScale;\n}(LinearScaleBase);\n_defineProperty(LinearScale, \"id\", 'linear');\n_defineProperty(LinearScale, \"defaults\", {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n});\nvar log10Floor = function log10Floor(v) {\n  return Math.floor(log10(v));\n};\nvar changeExponent = function changeExponent(v, m) {\n  return Math.pow(10, log10Floor(v) + m);\n};\nfunction isMajor(tickVal) {\n  var remain = tickVal / Math.pow(10, log10Floor(tickVal));\n  return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n  var rangeStep = Math.pow(10, rangeExp);\n  var start = Math.floor(min / rangeStep);\n  var end = Math.ceil(max / rangeStep);\n  return end - start;\n}\nfunction startExp(min, max) {\n  var range = max - min;\n  var rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\nfunction generateTicks(generationOptions, _ref13) {\n  var min = _ref13.min,\n    max = _ref13.max;\n  min = finiteOrDefault(generationOptions.min, min);\n  var ticks = [];\n  var minExp = log10Floor(min);\n  var exp = startExp(min, max);\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  var stepSize = Math.pow(10, exp);\n  var base = minExp > exp ? Math.pow(10, minExp) : 0;\n  var start = Math.round((min - base) * precision) / precision;\n  var offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  var significand = Math.floor((start - offset) / Math.pow(10, exp));\n  var value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({\n      value: value,\n      major: isMajor(value),\n      significand: significand\n    });\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  var lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(lastTick),\n    significand: significand\n  });\n  return ticks;\n}\nvar LogarithmicScale = /*#__PURE__*/function (_Scale3) {\n  _inherits(LogarithmicScale, _Scale3);\n  var _super22 = _createSuper(LogarithmicScale);\n  function LogarithmicScale(cfg) {\n    var _this37;\n    _classCallCheck(this, LogarithmicScale);\n    _this37 = _super22.call(this, cfg);\n    _this37.start = undefined;\n    _this37.end = undefined;\n    _this37._startValue = undefined;\n    _this37._valueRange = 0;\n    return _this37;\n  }\n  _createClass(LogarithmicScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      var value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n      if (value === 0) {\n        this._zero = true;\n        return undefined;\n      }\n      return isNumberFinite(value) && value > 0 ? value : null;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax3 = this.getMinMax(true),\n        min = _this$getMinMax3.min,\n        max = _this$getMinMax3.max;\n      this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n      this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n      if (this.options.beginAtZero) {\n        this._zero = true;\n      }\n      if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n        this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n      }\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var _this$getUserBounds4 = this.getUserBounds(),\n        minDefined = _this$getUserBounds4.minDefined,\n        maxDefined = _this$getUserBounds4.maxDefined;\n      var min = this.min;\n      var max = this.max;\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n      if (min === max) {\n        if (min <= 0) {\n          setMin(1);\n          setMax(10);\n        } else {\n          setMin(changeExponent(min, -1));\n          setMax(changeExponent(max, +1));\n        }\n      }\n      if (min <= 0) {\n        setMin(changeExponent(max, -1));\n      }\n      if (max <= 0) {\n        setMax(changeExponent(min, +1));\n      }\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var generationOptions = {\n        min: this._userMin,\n        max: this._userMax\n      };\n      var ticks = generateTicks(generationOptions, this);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var start = this.min;\n      _get(_getPrototypeOf(LogarithmicScale.prototype), \"configure\", this).call(this);\n      this._startValue = log10(start);\n      this._valueRange = log10(this.max) - log10(start);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (value === undefined || value === 0) {\n        value = this.min;\n      }\n      if (value === null || isNaN(value)) {\n        return NaN;\n      }\n      return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var decimal = this.getDecimalForPixel(pixel);\n      return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n  }]);\n  return LogarithmicScale;\n}(Scale);\n_defineProperty(LogarithmicScale, \"id\", 'logarithmic');\n_defineProperty(LogarithmicScale, \"defaults\", {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n});\nfunction getTickBackdropHeight(opts) {\n  var tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    var padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  var orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  var limits = Object.assign({}, orig);\n  var labelSizes = [];\n  var padding = [];\n  var valueCount = scale._pointLabels.length;\n  var pointLabelOpts = scale.options.pointLabels;\n  var additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (var i = 0; i < valueCount; i++) {\n    var opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    var pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    var plFont = toFont(opts.font);\n    var textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    var angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    var angle = Math.round(toDegrees(angleRadians));\n    var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  var sin = Math.abs(Math.sin(angle));\n  var cos = Math.abs(Math.cos(angle));\n  var x = 0;\n  var y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  var items = [];\n  var valueCount = scale._pointLabels.length;\n  var opts = scale.options;\n  var extra = getTickBackdropHeight(opts) / 2;\n  var outerDistance = scale.drawingArea;\n  var additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (var i = 0; i < valueCount; i++) {\n    var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    var angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    var size = labelSizes[i];\n    var y = yForAngle(pointLabelPosition.y, size.h, angle);\n    var textAlign = getTextAlignForAngle(angle);\n    var left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y: y,\n      textAlign: textAlign,\n      left: left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  var ctx = scale.ctx,\n    pointLabels = scale.options.pointLabels;\n  for (var i = labelCount - 1; i >= 0; i--) {\n    var optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    var plFont = toFont(optsAtIndex.font);\n    var _scale$_pointLabelIte = scale._pointLabelItems[i],\n      x = _scale$_pointLabelIte.x,\n      y = _scale$_pointLabelIte.y,\n      textAlign = _scale$_pointLabelIte.textAlign,\n      left = _scale$_pointLabelIte.left,\n      top = _scale$_pointLabelIte.top,\n      right = _scale$_pointLabelIte.right,\n      bottom = _scale$_pointLabelIte.bottom;\n    var backdropColor = optsAtIndex.backdropColor;\n    if (!isNullOrUndef(backdropColor)) {\n      var borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      var padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      var backdropLeft = left - padding.left;\n      var backdropTop = top - padding.top;\n      var backdropWidth = right - left + padding.width;\n      var backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(function (v) {\n        return v !== 0;\n      })) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  var ctx = scale.ctx;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    var pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (var i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  var ctx = scale.ctx;\n  var circular = gridLineOpts.circular;\n  var color = gridLineOpts.color,\n    lineWidth = gridLineOpts.lineWidth;\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label: label,\n    index: index,\n    type: 'pointLabel'\n  });\n}\nvar RadialLinearScale = /*#__PURE__*/function (_LinearScaleBase2) {\n  _inherits(RadialLinearScale, _LinearScaleBase2);\n  var _super23 = _createSuper(RadialLinearScale);\n  function RadialLinearScale(cfg) {\n    var _this38;\n    _classCallCheck(this, RadialLinearScale);\n    _this38 = _super23.call(this, cfg);\n    _this38.xCenter = undefined;\n    _this38.yCenter = undefined;\n    _this38.drawingArea = undefined;\n    _this38._pointLabels = [];\n    _this38._pointLabelItems = [];\n    return _this38;\n  }\n  _createClass(RadialLinearScale, [{\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n      var w = this.width = this.maxWidth - padding.width;\n      var h = this.height = this.maxHeight - padding.height;\n      this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n      this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n      this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax4 = this.getMinMax(false),\n        min = _this$getMinMax4.min,\n        max = _this$getMinMax4.max;\n      this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n      this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var _this39 = this;\n      LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n      this._pointLabels = this.getLabels().map(function (value, index) {\n        var label = callback(_this39.options.pointLabels.callback, [value, index], _this39);\n        return label || label === 0 ? label : '';\n      }).filter(function (v, i) {\n        return _this39.chart.getDataVisibility(i);\n      });\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var opts = this.options;\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        this.setCenterPoint(0, 0, 0, 0);\n      }\n    }\n  }, {\n    key: \"setCenterPoint\",\n    value: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n      this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n      this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n  }, {\n    key: \"getIndexAngle\",\n    value: function getIndexAngle(index) {\n      var angleMultiplier = TAU / (this._pointLabels.length || 1);\n      var startAngle = this.options.startAngle || 0;\n      return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n  }, {\n    key: \"getDistanceFromCenterForValue\",\n    value: function getDistanceFromCenterForValue(value) {\n      if (isNullOrUndef(value)) {\n        return NaN;\n      }\n      var scalingFactor = this.drawingArea / (this.max - this.min);\n      if (this.options.reverse) {\n        return (this.max - value) * scalingFactor;\n      }\n      return (value - this.min) * scalingFactor;\n    }\n  }, {\n    key: \"getValueForDistanceFromCenter\",\n    value: function getValueForDistanceFromCenter(distance) {\n      if (isNullOrUndef(distance)) {\n        return NaN;\n      }\n      var scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n      return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n  }, {\n    key: \"getPointLabelContext\",\n    value: function getPointLabelContext(index) {\n      var pointLabels = this._pointLabels || [];\n      if (index >= 0 && index < pointLabels.length) {\n        var pointLabel = pointLabels[index];\n        return createPointLabelContext(this.getContext(), index, pointLabel);\n      }\n    }\n  }, {\n    key: \"getPointPosition\",\n    value: function getPointPosition(index, distanceFromCenter) {\n      var additionalAngle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n      return {\n        x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n        y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n        angle: angle\n      };\n    }\n  }, {\n    key: \"getPointPositionForValue\",\n    value: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n  }, {\n    key: \"getBasePosition\",\n    value: function getBasePosition(index) {\n      return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n  }, {\n    key: \"getPointLabelPosition\",\n    value: function getPointLabelPosition(index) {\n      var _this$_pointLabelItem = this._pointLabelItems[index],\n        left = _this$_pointLabelItem.left,\n        top = _this$_pointLabelItem.top,\n        right = _this$_pointLabelItem.right,\n        bottom = _this$_pointLabelItem.bottom;\n      return {\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom\n      };\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var _this$options16 = this.options,\n        backgroundColor = _this$options16.backgroundColor,\n        circular = _this$options16.grid.circular;\n      if (backgroundColor) {\n        var ctx = this.ctx;\n        ctx.save();\n        ctx.beginPath();\n        pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n        ctx.closePath();\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid() {\n      var _this40 = this;\n      var ctx = this.ctx;\n      var opts = this.options;\n      var angleLines = opts.angleLines,\n        grid = opts.grid,\n        border = opts.border;\n      var labelCount = this._pointLabels.length;\n      var i, offset, position;\n      if (opts.pointLabels.display) {\n        drawPointLabels(this, labelCount);\n      }\n      if (grid.display) {\n        this.ticks.forEach(function (tick, index) {\n          if (index !== 0) {\n            offset = _this40.getDistanceFromCenterForValue(tick.value);\n            var context = _this40.getContext(index);\n            var optsAtIndex = grid.setContext(context);\n            var optsAtIndexBorder = border.setContext(context);\n            drawRadiusLine(_this40, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n          }\n        });\n      }\n      if (angleLines.display) {\n        ctx.save();\n        for (i = labelCount - 1; i >= 0; i--) {\n          var optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n          var color = optsAtIndex.color,\n            lineWidth = optsAtIndex.lineWidth;\n          if (!lineWidth || !color) {\n            continue;\n          }\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.setLineDash(optsAtIndex.borderDash);\n          ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n          offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n          position = this.getPointPosition(i, offset);\n          ctx.beginPath();\n          ctx.moveTo(this.xCenter, this.yCenter);\n          ctx.lineTo(position.x, position.y);\n          ctx.stroke();\n        }\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {}\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels() {\n      var _this41 = this;\n      var ctx = this.ctx;\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n      if (!tickOpts.display) {\n        return;\n      }\n      var startAngle = this.getIndexAngle(0);\n      var offset, width;\n      ctx.save();\n      ctx.translate(this.xCenter, this.yCenter);\n      ctx.rotate(startAngle);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      this.ticks.forEach(function (tick, index) {\n        if (index === 0 && !opts.reverse) {\n          return;\n        }\n        var optsAtIndex = tickOpts.setContext(_this41.getContext(index));\n        var tickFont = toFont(optsAtIndex.font);\n        offset = _this41.getDistanceFromCenterForValue(_this41.ticks[index].value);\n        if (optsAtIndex.showLabelBackdrop) {\n          ctx.font = tickFont.string;\n          width = ctx.measureText(tick.label).width;\n          ctx.fillStyle = optsAtIndex.backdropColor;\n          var padding = toPadding(optsAtIndex.backdropPadding);\n          ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n        }\n        renderText(ctx, tick.label, 0, -offset, tickFont, {\n          color: optsAtIndex.color\n        });\n      });\n      ctx.restore();\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {}\n  }]);\n  return RadialLinearScale;\n}(LinearScaleBase);\n_defineProperty(RadialLinearScale, \"id\", 'radialLinear');\n_defineProperty(RadialLinearScale, \"defaults\", {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback: function callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n});\n_defineProperty(RadialLinearScale, \"defaultRoutes\", {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n});\n_defineProperty(RadialLinearScale, \"descriptors\", {\n  angleLines: {\n    _fallback: 'grid'\n  }\n});\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = /* #__PURE__ */Object.keys(INTERVALS);\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction _parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  var adapter = scale._adapter;\n  var _scale$_parseOpts = scale._parseOpts,\n    parser = _scale$_parseOpts.parser,\n    round = _scale$_parseOpts.round,\n    isoWeekday = _scale$_parseOpts.isoWeekday;\n  var value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n  for (var i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    var interval = INTERVALS[UNITS[i]];\n    var factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (var i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    var unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    var _lookup2 = _lookup(timestamps, time),\n      lo = _lookup2.lo,\n      hi = _lookup2.hi;\n    var timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  var adapter = scale._adapter;\n  var first = +adapter.startOf(ticks[0].value, majorUnit);\n  var last = ticks[ticks.length - 1].value;\n  var major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  var ticks = [];\n  var map = {};\n  var ilen = values.length;\n  var i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value: value,\n      major: false\n    });\n  }\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nvar TimeScale = /*#__PURE__*/function (_Scale4) {\n  _inherits(TimeScale, _Scale4);\n  var _super24 = _createSuper(TimeScale);\n  function TimeScale(props) {\n    var _this42;\n    _classCallCheck(this, TimeScale);\n    _this42 = _super24.call(this, props);\n    _this42._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    _this42._unit = 'day';\n    _this42._majorUnit = undefined;\n    _this42._offsets = {};\n    _this42._normalized = false;\n    _this42._parseOpts = undefined;\n    return _this42;\n  }\n  _createClass(TimeScale, [{\n    key: \"init\",\n    value: function init(scaleOpts) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var time = scaleOpts.time || (scaleOpts.time = {});\n      var adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n      adapter.init(opts);\n      mergeIf(time.displayFormats, adapter.formats());\n      this._parseOpts = {\n        parser: time.parser,\n        round: time.round,\n        isoWeekday: time.isoWeekday\n      };\n      _get(_getPrototypeOf(TimeScale.prototype), \"init\", this).call(this, scaleOpts);\n      this._normalized = opts.normalized;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (raw === undefined) {\n        return null;\n      }\n      return _parse(this, raw);\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      _get(_getPrototypeOf(TimeScale.prototype), \"beforeLayout\", this).call(this);\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var options = this.options;\n      var adapter = this._adapter;\n      var unit = options.time.unit || 'day';\n      var _this$getUserBounds5 = this.getUserBounds(),\n        min = _this$getUserBounds5.min,\n        max = _this$getUserBounds5.max,\n        minDefined = _this$getUserBounds5.minDefined,\n        maxDefined = _this$getUserBounds5.maxDefined;\n      function _applyBounds(bounds) {\n        if (!minDefined && !isNaN(bounds.min)) {\n          min = Math.min(min, bounds.min);\n        }\n        if (!maxDefined && !isNaN(bounds.max)) {\n          max = Math.max(max, bounds.max);\n        }\n      }\n      if (!minDefined || !maxDefined) {\n        _applyBounds(this._getLabelBounds());\n        if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n          _applyBounds(this.getMinMax(false));\n        }\n      }\n      min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n      max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n      this.min = Math.min(min, max - 1);\n      this.max = Math.max(min + 1, max);\n    }\n  }, {\n    key: \"_getLabelBounds\",\n    value: function _getLabelBounds() {\n      var arr = this.getLabelTimestamps();\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      if (arr.length) {\n        min = arr[0];\n        max = arr[arr.length - 1];\n      }\n      return {\n        min: min,\n        max: max\n      };\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var options = this.options;\n      var timeOpts = options.time;\n      var tickOpts = options.ticks;\n      var timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n      if (options.bounds === 'ticks' && timestamps.length) {\n        this.min = this._userMin || timestamps[0];\n        this.max = this._userMax || timestamps[timestamps.length - 1];\n      }\n      var min = this.min;\n      var max = this.max;\n      var ticks = _filterBetween(timestamps, min, max);\n      this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n      this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n      this.initOffsets(timestamps);\n      if (options.reverse) {\n        ticks.reverse();\n      }\n      return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n  }, {\n    key: \"afterAutoSkip\",\n    value: function afterAutoSkip() {\n      if (this.options.offsetAfterAutoskip) {\n        this.initOffsets(this.ticks.map(function (tick) {\n          return +tick.value;\n        }));\n      }\n    }\n  }, {\n    key: \"initOffsets\",\n    value: function initOffsets() {\n      var timestamps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var start = 0;\n      var end = 0;\n      var first, last;\n      if (this.options.offset && timestamps.length) {\n        first = this.getDecimalForValue(timestamps[0]);\n        if (timestamps.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n        }\n        last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n        if (timestamps.length === 1) {\n          end = last;\n        } else {\n          end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n      }\n      var limit = timestamps.length < 3 ? 0.5 : 0.25;\n      start = _limitValue(start, 0, limit);\n      end = _limitValue(end, 0, limit);\n      this._offsets = {\n        start: start,\n        end: end,\n        factor: 1 / (start + 1 + end)\n      };\n    }\n  }, {\n    key: \"_generate\",\n    value: function _generate() {\n      var adapter = this._adapter;\n      var min = this.min;\n      var max = this.max;\n      var options = this.options;\n      var timeOpts = options.time;\n      var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n      var stepSize = valueOrDefault(options.ticks.stepSize, 1);\n      var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      var hasWeekday = isNumber(weekday) || weekday === true;\n      var ticks = {};\n      var first = min;\n      var time, count;\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n      var timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n      for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n      if (time === max || options.bounds === 'ticks' || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n      return Object.keys(ticks).sort(function (a, b) {\n        return a - b;\n      }).map(function (x) {\n        return +x;\n      });\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var adapter = this._adapter;\n      var timeOpts = this.options.time;\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(value, timeOpts.tooltipFormat);\n      }\n      return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n  }, {\n    key: \"format\",\n    value: function format(value, _format) {\n      var options = this.options;\n      var formats = options.time.displayFormats;\n      var unit = this._unit;\n      var fmt = _format || formats[unit];\n      return this._adapter.format(value, fmt);\n    }\n  }, {\n    key: \"_tickFormatFunction\",\n    value: function _tickFormatFunction(time, index, ticks, format) {\n      var options = this.options;\n      var formatter = options.ticks.callback;\n      if (formatter) {\n        return callback(formatter, [time, index, ticks], this);\n      }\n      var formats = options.time.displayFormats;\n      var unit = this._unit;\n      var majorUnit = this._majorUnit;\n      var minorFormat = unit && formats[unit];\n      var majorFormat = majorUnit && formats[majorUnit];\n      var tick = ticks[index];\n      var major = majorUnit && majorFormat && tick && tick.major;\n      return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        tick.label = this._tickFormatFunction(tick.value, i, ticks);\n      }\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForValue(value);\n      return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return this.min + pos * (this.max - this.min);\n    }\n  }, {\n    key: \"_getLabelSize\",\n    value: function _getLabelSize(label) {\n      var ticksOpts = this.options.ticks;\n      var tickLabelWidth = this.ctx.measureText(label).width;\n      var angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = this._resolveTickFontOptions(0).size;\n      return {\n        w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n        h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n      };\n    }\n  }, {\n    key: \"_getLabelCapacity\",\n    value: function _getLabelCapacity(exampleTime) {\n      var timeOpts = this.options.time;\n      var displayFormats = timeOpts.displayFormats;\n      var format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n      var exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n      var size = this._getLabelSize(exampleLabel);\n      var capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n      return capacity > 0 ? capacity : 1;\n    }\n  }, {\n    key: \"getDataTimestamps\",\n    value: function getDataTimestamps() {\n      var timestamps = this._cache.data || [];\n      var i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var metas = this.getMatchingVisibleMetas();\n      if (this._normalized && metas.length) {\n        return this._cache.data = metas[0].controller.getAllParsedValues(this);\n      }\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n      }\n      return this._cache.data = this.normalize(timestamps);\n    }\n  }, {\n    key: \"getLabelTimestamps\",\n    value: function getLabelTimestamps() {\n      var timestamps = this._cache.labels || [];\n      var i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var labels = this.getLabels();\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        timestamps.push(_parse(this, labels[i]));\n      }\n      return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(values) {\n      return _arrayUnique(values.sort(sorter));\n    }\n  }]);\n  return TimeScale;\n}(Scale);\n_defineProperty(TimeScale, \"id\", 'time');\n_defineProperty(TimeScale, \"defaults\", {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    callback: false,\n    major: {\n      enabled: false\n    }\n  }\n});\nfunction interpolate(table, val, reverse) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      var _lookupByKey2 = _lookupByKey(table, 'pos', val);\n      lo = _lookupByKey2.lo;\n      hi = _lookupByKey2.hi;\n    }\n    var _table$lo = table[lo];\n    prevSource = _table$lo.pos;\n    prevTarget = _table$lo.time;\n    var _table$hi = table[hi];\n    nextSource = _table$hi.pos;\n    nextTarget = _table$hi.time;\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      var _lookupByKey3 = _lookupByKey(table, 'time', val);\n      lo = _lookupByKey3.lo;\n      hi = _lookupByKey3.hi;\n    }\n    var _table$lo2 = table[lo];\n    prevSource = _table$lo2.time;\n    prevTarget = _table$lo2.pos;\n    var _table$hi2 = table[hi];\n    nextSource = _table$hi2.time;\n    nextTarget = _table$hi2.pos;\n  }\n  var span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nvar TimeSeriesScale = /*#__PURE__*/function (_TimeScale) {\n  _inherits(TimeSeriesScale, _TimeScale);\n  var _super25 = _createSuper(TimeSeriesScale);\n  function TimeSeriesScale(props) {\n    var _this43;\n    _classCallCheck(this, TimeSeriesScale);\n    _this43 = _super25.call(this, props);\n    _this43._table = [];\n    _this43._minPos = undefined;\n    _this43._tableRange = undefined;\n    return _this43;\n  }\n  _createClass(TimeSeriesScale, [{\n    key: \"initOffsets\",\n    value: function initOffsets() {\n      var timestamps = this._getTimestampsForTable();\n      var table = this._table = this.buildLookupTable(timestamps);\n      this._minPos = interpolate(table, this.min);\n      this._tableRange = interpolate(table, this.max) - this._minPos;\n      _get(_getPrototypeOf(TimeSeriesScale.prototype), \"initOffsets\", this).call(this, timestamps);\n    }\n  }, {\n    key: \"buildLookupTable\",\n    value: function buildLookupTable(timestamps) {\n      var min = this.min,\n        max = this.max;\n      var items = [];\n      var table = [];\n      var i, ilen, prev, curr, next;\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n        if (curr >= min && curr <= max) {\n          items.push(curr);\n        }\n      }\n      if (items.length < 2) {\n        return [{\n          time: min,\n          pos: 0\n        }, {\n          time: max,\n          pos: 1\n        }];\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        next = items[i + 1];\n        prev = items[i - 1];\n        curr = items[i];\n        if (Math.round((next + prev) / 2) !== curr) {\n          table.push({\n            time: curr,\n            pos: i / (ilen - 1)\n          });\n        }\n      }\n      return table;\n    }\n  }, {\n    key: \"_getTimestampsForTable\",\n    value: function _getTimestampsForTable() {\n      var timestamps = this._cache.all || [];\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var data = this.getDataTimestamps();\n      var label = this.getLabelTimestamps();\n      if (data.length && label.length) {\n        timestamps = this.normalize(data.concat(label));\n      } else {\n        timestamps = data.length ? data : label;\n      }\n      timestamps = this._cache.all = timestamps;\n      return timestamps;\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n  }]);\n  return TimeSeriesScale;\n}(TimeScale);\n_defineProperty(TimeSeriesScale, \"id\", 'timeseries');\n_defineProperty(TimeSeriesScale, \"defaults\", TimeScale.defaults);\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nvar registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"names":["Animator","_classCallCheck","_request","_charts","Map","_running","_lastDate","undefined","_createClass","key","value","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","_this","requestAnimFrame","call","window","_update","_this2","arguments","length","Date","now","remaining","running","items","i","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","_this$_getAnims$items","apply","_toConsumableArray","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","transparent","interpolators","boolean","from","to","factor","color","c0","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","isObject","animationOptions","Object","keys","defaults","animation","animatedProps","getOwnPropertyNames","_i","_animationOptions","option","isArray","properties","_animateOptions","values","newOptions","options","resolveTargetOptions","animations","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","size","assign","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","x","y","top","right","bottom","left","toClip","t","r","b","l","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isNumberFinite","sign","convertObjectDataToArray","data","adata","Array","isStacked","meta","stacked","getStackKey","indexScale","valueScale","concat","id","getUserBounds","_scale$getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","_iterator","_createForOfIteratorHelper","getMatchingVisibleMetas","_step","s","n","done","err","e","f","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","createContext","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","_iterator2","_step2","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","constructor","dataElementType","initialize","linkScales","addElements","fill","isPluginEnabled","console","warn","updateIndex","getDataset","chooseId","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","_parsed$i","_defineProperty","_this$_parsing","_this$_parsing$xAxisK","xAxisKey","_this$_parsing$yAxisK","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","_getUserBounds","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","elementType","_this3","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","_iterator3","_step3","_step3$value","_slicedToArray","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_args2","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","_arrayUnique","sort","a","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","isNullOrUndef","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","_borderProps","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","v","setInflateAmount","_ref","inflateAmount","BarController","_DatasetController","_inherits","_super","_createSuper","_this$_parsing2","_this$_parsing2$xAxis","_this$_parsing2$yAxis","iAxisKey","vAxisKey","obj","_get","_getPrototypeOf","prototype","bars","getBasePixel","_getRuler","_this$_getSharedOptio","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","skipNull","val","isNaN","_iterator4","_step4","indexOf","_getStackCount","_getStackIndex","name","_startPixel","_endPixel","_this$_cachedMeta","_this$options","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","numbers","_index_","offset","grid","_value_","beginAtZero","BubbleController","_DatasetController2","_super2","radius","points","_this$_cachedMeta2","_this$_getSharedOptio2","point","iPixel","vPixel","skip","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","TAU","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","DoughnutController","_DatasetController3","_super3","_this4","innerRadius","outerRadius","getter","_this$_parsing$key","_getRotation","toRadians","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","_this$_getRotationExt","_getRatioAndOffset","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_this$_getSharedOptio3","arc","metaData","formatNumber","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","_scriptable","_indexable","aspectRatio","plugins","legend","generateLabels","_chart$legend$options2","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","onClick","legendItem","toggleDataVisibility","LineController","_DatasetController4","_super4","line","_meta$data","_dataset","animationsDisabled","_getStartAndCountOfVi","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","_this$_cachedMeta3","_this$_getSharedOptio4","_this$options2","spanGaps","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","_DatasetController5","_super5","_this5","_parseObjectDataRadialScale","bind","_updateRadius","_this6","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","_this7","_chart$legend$options3","angleLines","display","circular","pointLabels","PieController","_DoughnutController","_super6","RadarController","_DatasetController6","_super7","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","_DatasetController7","_super8","_meta$data2","_getStartAndCountOfVi2","registry","getElement","_this$_cachedMeta4","_this$options3","interaction","abstract","Error","DateAdapterBase","init","formats","format","diff","startOf","endOf","override","members","adapters","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","_metasets$i","_binarySearch","j","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","evaluationFunc","_isPointInArea","inRange","getNearestRadialItems","_element$getProps","getProps","_getAngleFromPoint","getAngleFromPoint","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","_box","_box$options","_box$options$stackWei","buildStacks","layouts","_iterator5","_step5","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","_updateDims","setBoxDims","placeBoxes","userPadding","padding","_iterator6","_step6","height1","width1","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","_BasePlatform","_super9","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","eventListenerOptions","supportsEventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","_getRelativePosition","native","nodeListContains","nodeList","_iterator7","_step7","contains","createAttachObserver","observer","MutationObserver","entries","trigger","_iterator8","_step8","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","_iterator9","_step9","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","_BasePlatform2","_super10","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","tooltipPosition","_this$getProps","hasValue","final","_this8","ret","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","_factorize","result","ceil","majorStart","majorEnd","len","reverseAlign","align","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lines","lineHeight","createScaleContext","createTickContext","titleAlign","_toLeftRightCenter","titleArgs","titleX","titleY","_alignStartEnd","positionAxisID","positionAxisID1","value1","Scale","_Element","_super11","_this9","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","_this$getUserBounds","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","callback","margins","_this$options4","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","title","toDegrees","asin","_this$options5","titleOpts","gridOpts","titleHeight","_this$_getLabelSizes","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","_this$options6","_this$options6$ticks","isRotated","labelsBelowTicks","offsetLeft","offsetRight","_this$options7","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","_measureText","valueAt","idx","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","ret1","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","tickTextAlign","showLabelBackdrop","backdrop","labelPadding","backdropPadding","backdropColor","translation","_this$options8","_this$options9","_this$options9$ticks","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","_this$options10","lastLineWidth","drawLabels","clipArea","_iterator10","_step10","renderTextOptions","renderText","unclipArea","drawTitle","_this$options11","_titleArgs","_this10","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","overrides","unregister","itemDefaults","merge","defaultRoutes","routeDefaults","descriptors","describe","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","Registry","controllers","_typedRegistries","_len","_key","_each","_len2","_key2","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","_this11","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","_iterator11","_step11","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","i1","getOpts","_ref2","_iterator12","_step12","pluginOpts","_ref3","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","defaultScaleOptions","mergeIf","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","_getResolver","getResolver","resolver","subPrefixes","needContext","isFunction","subResolver","_attachContext","_iterator13","_step13","descriptorDefaults","_getResolver2","resolverCache","_createResolver","p","hasFunction","_descriptors2","isScriptable","isIndexable","_iterator14","_step14","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","c","moveNumericKeys","_i2","_keys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getDatasetArea","Chart","userConfig","_this12","initialCanvas","existingChart","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","_this$options12","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","_this13","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","_this14","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_defaults$datasets$ty","_resetElements","_this15","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_this$getDatasetMeta","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","_this16","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","_iterator15","_step15","_step15$value","datasetCount","makeSet","changeSet","_this17","noArea","_this17$_layers","_idx","ilen1","_updateDataset","_this$_resizeBeforeDr","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","_this$canvas","toDataURL","bindUserEvents","bindResponsiveEvents","_this18","_add","_this19","_remove","detached","_this20","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","_this21","lastActive","_ref4","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","_this22","eventFilter","_handleEvent","_this$_active","_getActiveElements","_isClickEvent","onHover","invalidatePlugins","version","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","_readValueToProps","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","_parseBorderRadius$","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","pCenter1","innerMidAdjustedAngle","pCenter2","p8","pCenter3","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","borderJoinStyle","inner","lineJoin","ArcElement","_Element2","_super12","_this23","_assertThisInitialized","chartX","chartY","_getAngleFromPoint2","_this$getProps2","rAdjust","betweenAngles","withinRadius","_isBetween","_this$getProps3","_this$options13","halfAngle","halfRadius","translate","fix","radiusOffset","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","pathVars","_params$start","paramsStart","_params$end","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","_pathVars","lineMethod","_ref5","_ref5$move","fastPathSegment","_pathVars2","_ref6","_ref6$move","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","_steppedInterpolation","_bezierInterpolation","_pointInLine","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","_iterator16","_step16","usePath2D","LineElement","_Element3","_super13","_this24","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","_segments$i","interpolated","_iterator17","_step17","capBezierPoints","inRange$1","_el$getProps","hitRadius","PointElement","_Element4","_super14","_this25","mouseX","mouseY","_this$getProps4","inXRange","inYRange","_this$getProps5","hoverRadius","drawPoint","getBarBounds","bar","_bar$getProps","half","skipOrLimit","parseBorderWidth","maxW","maxH","toTRBL","parseBorderRadius","_bar$getProps2","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","bounds","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","_Element5","_super15","_this26","_this$options14","_boundingRects","addRectPath","addRoundedRectPath","_this$getProps6","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","k","containsColorsDefinition","plugin_colors","forceOverride","_args","_chart$config","chartOptions","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","_data$a","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","_objectSpread","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","_iScale$getUserBounds","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","_getStartAndCountOfVi3","threshold","d","tpoints","_iterator18","_step18","_findSegmentEnd","_getBounds","targetSegments","_iterator19","_step19","tgt","subBounds","fillSources","_boundSegment","_iterator20","_step20","fillSource","_getEdge","_normalizeAngle","_pointsFromSegments","boundary","_ref7","_ref7$x","_ref7$y","linePoints","_ref8","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","_findPoint","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_source$scale","_drawfill","lineOpts","_ref9","_ref9$above","above","_ref9$below","doFill","clipVertical","clipY","lineLoop","_iterator21","_step21","_iterator22","_step22","_step22$value","src","_src$style","_src$style2","_src$style2$backgroun","notShape","clipBounds","interpolatedLineTo","targetLoop","_scale$chart$chartAre","_ref10","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","_labelOpts$boxHeight","boxHeight","_labelOpts$boxWidth","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_Element6","_super16","_this27","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","_this28","labelFont","_computeTitleHeight","_getBoxSize","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","_calculateItemSize","calculateItemSize","adjustHitBoxes","_this$options15","rtl","rtlHelper","getRtlAdapter","_iterator23","_step23","hitbox","leftForLtr","_iterator24","_step24","hitbox1","_draw","_this29","defaultColor","halfFontSize","cursor","_getBoxSize2","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","fillText","strikethrough","overrideTextDirection","textDirection","textWidth","setWidth","realX","_textX","fontLineHeight","calculateLegendItemHeight","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","afterEvent","ci","_chart$legend$options","useBorderRadius","startsWith","Title","_Element7","_super17","_this30","_padding","textSize","_drawArgs","fontOpts","_this$_drawArgs","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","str","String","createTooltipItem","_controller$getLabelA","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","_chart$chartArea","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","_toTRBLCorners","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","noop","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","_Element8","_super18","_this31","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","_this32","bodyItems","scoped","getAfterBody","getFooter","_createItems","_this33","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","_toTRBLCorners2","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","_toTRBLCorners3","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_this34","_ref11","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_fallback","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_Scale","_super19","_this35","_startValue","_valueRange","_addedLabels","added","_iterator25","_step25","_step25$value","isFinite","_this$getUserBounds2","_this$getMinMax","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceNum","niceMin","niceMax","numSpaces","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","relativeLabelSize","_ref12","rad","LinearScaleBase","_Scale2","_super20","_this36","_endValue","handleTickRangeOptions","_this$getUserBounds3","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","_setMinAndMaxByKey","LinearScale","_LinearScaleBase","_super21","_this$getMinMax2","Ticks","formatters","numeric","log10Floor","log10","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","_ref13","minExp","exp","significand","lastTick","LogarithmicScale","_Scale3","_super22","_this37","_zero","_this$getMinMax3","_this$getUserBounds4","logarithmic","getTickBackdropHeight","measureLabelSize","_longestText","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","_scale$_pointLabelIte","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","_LinearScaleBase2","_super23","_this38","_this$getMinMax4","_this39","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","_this$_pointLabelItem","_this$options16","_this40","_this41","rotate","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","_scale$_parseOpts","_parseOpts","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","_lookup2","_lookup","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_Scale4","_super24","_this42","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_this$getUserBounds5","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","_lookupByKey2","_table$lo","_table$hi","_lookupByKey3","_table$lo2","_table$hi2","span","TimeSeriesScale","_TimeScale","_super25","_this43","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"sources":["C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\core\\core.animator.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\core\\core.animation.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\core\\core.animations.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\core\\core.datasetController.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\controllers\\controller.bar.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\controllers\\controller.bubble.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\controllers\\controller.doughnut.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\controllers\\controller.line.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\controllers\\controller.polarArea.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\controllers\\controller.pie.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\controllers\\controller.radar.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\controllers\\controller.scatter.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\core\\core.adapters.ts","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\core\\core.interaction.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\core\\core.layouts.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\platform\\platform.base.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\platform\\platform.basic.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\platform\\platform.dom.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\platform\\index.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\core\\core.element.ts","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\core\\core.scale.autoskip.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\core\\core.scale.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\core\\core.typedRegistry.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\core\\core.registry.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\core\\core.plugins.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\core\\core.config.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\core\\core.controller.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\elements\\element.arc.ts","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\elements\\element.line.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\elements\\element.point.ts","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\elements\\element.bar.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\plugins\\plugin.colors.ts","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\plugins\\plugin.decimation.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.segment.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.helper.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.options.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.target.stack.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\simpleArc.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.target.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.drawing.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\index.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\plugins\\plugin.legend.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\plugins\\plugin.title.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\plugins\\plugin.subtitle.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\plugins\\plugin.tooltip.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\scales\\scale.category.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\scales\\scale.linearbase.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\scales\\scale.linear.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\scales\\scale.logarithmic.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\scales\\scale.radialLinear.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\scales\\scale.time.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\scales\\scale.timeseries.js","C:\\Users\\FEROZ RAHIL\\Desktop\\capston\\React-Inventory-Management-System\\Frontend\\node_modules\\chart.js\\src\\index.ts"],"sourcesContent":["import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}